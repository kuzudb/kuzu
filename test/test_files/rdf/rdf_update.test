-DATASET TTL EMPTY

--

-CASE RdfDDL
-STATEMENT CREATE RDFGraph T;
---- ok
-STATEMENT CALL show_tables() RETURN *;
---- 5
T_lt|REL|local(kuzu)|
T_l|NODE|local(kuzu)|
T_rt|REL|local(kuzu)|
T_r|NODE|local(kuzu)|
T|RDFGraph|local(kuzu)|
-STATEMENT DROP RDFGraph T;
---- ok
-STATEMENT CALL show_tables() RETURN *;
---- 0

-STATEMENT CREATE RDFGraph T;
---- ok
-STATEMENT ALTER TABLE T RENAME TO X;
---- ok
-STATEMENT CALL show_tables() RETURN *;
---- 5
X_lt|REL|local(kuzu)|
X_l|NODE|local(kuzu)|
X_rt|REL|local(kuzu)|
X_r|NODE|local(kuzu)|
X|RDFGraph|local(kuzu)|
-STATEMENT MATCH (a:T)-[e:T]->(b:T) RETURN COUNT(*);
---- error
Binder exception: Table T does not exist.
-STATEMENT MATCH (a:X)-[e:X]->(b:X) RETURN COUNT(*);
---- error
Binder exception: Cannot bind X as a node pattern label.
-STATEMENT MATCH (a)-[e:X]->(b) RETURN COUNT(*);
---- 1
0
-STATEMENT ALTER TABLE X_r RENAME TO hh;
---- error
Binder exception: Cannot alter table X_r because it is referenced by rdfGraph X.
-STATEMENT CREATE RDFGraph R;
---- ok
-STATEMENT CREATE (a:R_r {iri: "a"})-[:R_rt {iri: "b"}]->(b:R_r {iri: "c"});
---- ok
-STATEMENT CREATE (a:X_r {iri: "x"})-[:X_rt {iri: "y"}]->(b:X_r {iri: "z"});
---- ok
-STATEMENT MATCH (a)-[e]->(b) RETURN a.iri, e.iri, b.iri
---- 2
a|b|c
x|y|z
-STATEMENT MATCH (a)-[e:R_rt]->(b) RETURN a.iri, e.iri, b.iri
---- 1
a|b|c
-STATEMENT CREATE (a:R_r {iri: "a"})-[:R_rt {iri: "_:b"}]->(b:R_r {iri: "c"});
---- error
Runtime exception: _:b is a blank node and cannot be a valid predicate.
-STATEMENT CREATE (a:R_r {iri: "_:a"})-[:R_rt {iri: "bb"}]->(b:R_r {iri: "_:c"});
---- ok
-STATEMENT MATCH (a)-[e]->(b) RETURN a.iri, e.iri, b.iri
---- 3
a|b|c
x|y|z
_:a|bb|_:c

-CASE EmptyUpdate
-STATEMENT CREATE RDFGraph T;
---- ok
-STATEMENT CREATE (:T_r {iri:"a"}),
                  (:T_r {iri:"a"}),
                  (:T_r {iri:"aa"}),
                  (:T_r {iri:"aaa"})
---- ok
-STATEMENT MATCH (a:T_r) RETURN a.iri;
---- 3
a
aa
aaa
-STATEMENT CREATE (:T_l {val:cast(12, "INT64")}),
                  (:T_l {val:cast(43, "INT32")}),
                  (:T_l {val:cast(33, "INT16")}),
                  (:T_l {val:cast(2, "INT8")}),
                  (:T_l {val:cast(90, "UINT64")}),
                  (:T_l {val:cast(77, "UINT32")}),
                  (:T_l {val:cast(12, "UINT16")}),
                  (:T_l {val:cast(1, "UINT8")}),
                  (:T_l {val:cast(4.4, "DOUBLE")}),
                  (:T_l {val:cast(1.2, "FLOAT")}),
                  (:T_l {val:cast("\\xB2", "BLOB")}),
                  (:T_l {val:true}),
                  (:T_l {val:"hhh"}),
                  (:T_l {val:cast("2024-01-01", "DATE")}),
                  (:T_l {val:cast("2024-01-01 11:25:30Z+00:00", "TIMESTAMP")}),
                  (:T_l {val:cast("1 year", "INTERVAL")})
---- ok
-STATEMENT MATCH (a:T_l) RETURN a.id, a.val ORDER BY a.id;
-CHECK_ORDER
---- 16
0|12
1|43
2|33
3|2
4|90
5|77
6|12
7|1
8|4.400000
9|1.200000
10|\xB2
11|True
12|hhh
13|2024-01-01
14|2024-01-01 11:25:30
15|1 year
-STATEMENT MATCH (a:T_l)
            RETURN a.id,
                   a.val + cast(1, "INT64"),
                   a.val * cast(2, "INT32"),
                   a.val + cast(-4, "INT16"),
                   a.val / cast(-2, "INT8"),
                   a.val + cast(14, "UINT64"),
                   a.val * cast(222, "UINT32"),
                   a.val + cast(0, "UINT16"),
                   a.val / cast(1, "UINT8"),
                   a.val * cast(2.0, "DOUBLE"),
                   a.val / cast(2.0, "FLOAT")
            ORDER BY a.id;
-CHECK_ORDER
---- 16
0|13|24|8|-6|26|2664|12|12|24.000000|6.000000
1|44|86|39|-21|57|9546|43|43|86.000000|21.500000
2|34|66|29|-16|47|7326|33|33|66.000000|16.500000
3|3|4|-2|-1|16|444|2|2|4.000000|1.000000
4|91|180|86|-45|104|19980|90|90|180.000000|45.000000
5|78|154|73|-38|91|17094|77|77|154.000000|38.500000
6|13|24|8|-6|26|2664|12|12|24.000000|6.000000
7|2|2|-3|0|15|222|1|1|2.000000|0.500000
8|5|8|0|-2|18|888|4|4|8.800000|2.200000
9|2|2|-3|0|15|222|1|1|2.400000|0.600000
10||||||||||
11||||||||||
12||||||||||
13||||||||||
14||||||||||
15||||||||||
-STATEMENT MATCH (a:T_l)
            RETURN a.id,
                   cast(a.val, "BLOB"),
                   cast(a.val, "BOOL"),
                   a.val + "a",
                   cast(a.val, "DATE"),
                   cast(a.val, "TIMESTAMP"),
                   cast(a.val, "INTERVAL")
            ORDER BY a.id;
-CHECK_ORDER
---- 16
0|||12a|||
1|||43a|||
2|||33a|||
3|||2a|||
4|||90a|||
5|||77a|||
6|||12a|||
7|||1a|||
8|||4.400000a|||
9|||1.200000a|||
10|\xB2||\xB2a|||
11||True|Truea|||
12|||hhha|||
13|||2024-01-01a|2024-01-01||
14|||2024-01-01 11:25:30a||2024-01-01 11:25:30|
15|||1 yeara|||1 year
-STATEMENT MATCH (a)-[e]->(b) SET a.iri = "x";
---- error
Binder exception: Cannot set properties of RDFGraph tables. Set a.iri requires modifying table T_r under rdf graph T.
-STATEMENT MATCH (a)-[e]->(b) SET e.iri = "x";
---- error
Binder exception: Cannot set properties of RDFGraph tables. Set e.iri requires modifying table T_rt under rdf graph T.
-STATEMENT MATCH (a)-[e]->(b:T_l) SET b.val = "x";
---- error
Binder exception: Cannot set properties of RDFGraph tables. Set b.val requires modifying table T_l under rdf graph T.

-CASE DeleteRdfNodeTable

-STATEMENT CREATE RDFGraph R;
---- ok
-STATEMENT CREATE (a:R_r {iri: "a"})-[:R_rt {iri: "b"}]->(b:R_r {iri: "c"});
---- ok
-STATEMENT CREATE (a:R_r {iri: "e"})-[:R_lt {iri: "f"}]->(b:R_l {val: 2});
---- ok
-STATEMENT MATCH (a)-[e]->(b) RETURN a.iri, e.iri, b.iri, b.val;
---- 2
a|b|c|
e|f||2
-STATEMENT MATCH (a) WHERE a.iri = "b" DELETE a;
---- error
Binder exception: Cannot delete node a because it references to resource node table under RDFGraph R.
-STATEMENT MATCH (a:R_l) WHERE a.val = 2 DETACH DELETE a;
---- ok
-STATEMENT MATCH (a)-[e]->(b) RETURN a.iri, e.iri, b.iri, b.val;
---- 1
a|b|c|
