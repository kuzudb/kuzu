-DATASET CSV empty
--

-CASE CreateDropNodeTableRecovery
-STATEMENT BEGIN TRANSACTION;
---- ok
-STATEMENT CREATE NODE TABLE test(id SERIAL, primary key(id));
---- ok
-STATEMENT COMMIT;
---- ok
-RELOADDB
-STATEMENT CALL SHOW_TABLES() RETURN *;
---- 1
0|test|NODE|local(kuzu)|
-STATEMENT BEGIN TRANSACTION;
---- ok
-STATEMENT DROP TABLE test;
---- ok
-STATEMENT COMMIT;
---- ok
-RELOADDB
-STATEMENT CALL SHOW_TABLES() RETURN *;
---- 0

-CASE CreateDropRelTableRecovery
-STATEMENT CREATE NODE TABLE base(id SERIAL, primary key(id));
---- ok
-STATEMENT BEGIN TRANSACTION;
---- ok
-STATEMENT CREATE REL TABLE test(FROM base TO base);
---- ok
-STATEMENT COMMIT;
---- ok
-RELOADDB
-STATEMENT CALL SHOW_TABLES() RETURN *;
---- 2
0|base|NODE|local(kuzu)|
1|test|REL|local(kuzu)|
-STATEMENT BEGIN TRANSACTION;
---- ok
-STATEMENT DROP TABLE test;
---- ok
-STATEMENT COMMIT;
---- ok
-RELOADDB
-STATEMENT CALL SHOW_TABLES() RETURN *;
---- 1
0|base|NODE|local(kuzu)|

-CASE CreateDropRelGroupRecovery
-STATEMENT CREATE NODE TABLE base1(id SERIAL, primary key(id));
---- ok
-STATEMENT CREATE NODE TABLE base2(id SERIAL, primary key(id));
---- ok
-STATEMENT BEGIN TRANSACTION;
---- ok
-STATEMENT CREATE REL TABLE test(FROM base1 To base1, FROM base1 to base2);
---- ok
-STATEMENT COMMIT;
---- ok
-RELOADDB
-STATEMENT CALL SHOW_TABLES() RETURN *;
---- 3
0|base1|NODE|local(kuzu)|
1|base2|NODE|local(kuzu)|
0|test|REL|local(kuzu)|
-STATEMENT BEGIN TRANSACTION;
---- ok
-STATEMENT DROP TABLE test;
---- ok
-STATEMENT COMMIT;
---- ok
-RELOADDB
-STATEMENT CALL SHOW_TABLES() RETURN *;
---- 2
0|base1|NODE|local(kuzu)|
1|base2|NODE|local(kuzu)|

-CASE InsertAndDropNodeColumnCheckpointRecovery
-STATEMENT CREATE NODE TABLE test(id INT64, age INT64, name STRING, prop2 INT64, PRIMARY KEY(id));
---- ok
-STATEMENT CREATE (t:test {id: 0, age: 20, name: 'test', prop2: 1});
---- ok
-STATEMENT CREATE (t:test {id: 1, age: 21, name: 'test1', prop2: 2});
---- ok
-STATEMENT CREATE (t:test {id: 2, age: 22, name: 'test2', prop2: 3});
---- ok
-STATEMENT CREATE (t:test {id: 3, age: 23, name: 'test3', prop2: 4});
---- ok
-STATEMENT CREATE (t:test {id: 4, age: 24, name: 'test4', prop2: 5});
---- ok
-STATEMENT ALTER TABLE test DROP name;
---- ok
-STATEMENT CHECKPOINT;
---- ok
-RELOADDB
-STATEMENT MATCH (n:test) RETURN n.*;
---- 5
0|20|1
1|21|2
2|22|3
3|23|4
4|24|5

-CASE InsertAndDropRelColumnCheckpointRecovery
-STATEMENT CREATE NODE TABLE test(id INT64, age INT64, name STRING, prop2 INT64, PRIMARY KEY(id));
---- ok
-STATEMENT CREATE REL TABLE testRel(FROM test TO test, since DATE, prop3 INT64);
---- ok
-STATEMENT CREATE (t:test {id: 0, age: 20, name: 'test', prop2: 1});
---- ok
-STATEMENT CREATE (t:test {id: 1, age: 21, name: 'test1', prop2: 2});
---- ok
-STATEMENT CREATE (t:test {id: 2, age: 22, name: 'test2', prop2: 3});
---- ok
-STATEMENT CREATE (t:test {id: 3, age: 23, name: 'test3', prop2: 4});
---- ok
-STATEMENT CREATE (t:test {id: 4, age: 24, name: 'test4', prop2: 5});
---- ok
-STATEMENT MATCH (t1:test {id: 0}), (t2:test {id: 1}) CREATE (t1)-[r:testRel {since: date('2020-01-01'), prop3: 1}]->(t2);
---- ok
-STATEMENT MATCH (t1:test {id: 1}), (t2:test {id: 2}) CREATE (t1)-[r:testRel {since: date('2020-01-01'), prop3: 2}]->(t2);
---- ok
-STATEMENT MATCH (t1:test {id: 2}), (t2:test {id: 3}) CREATE (t1)-[r:testRel {since: date('2020-01-01'), prop3: 3}]->(t2);
---- ok
-STATEMENT MATCH (t1:test {id: 3}), (t2:test {id: 4}) CREATE (t1)-[r:testRel {since: date('2020-01-01'), prop3: 4}]->(t2);
---- ok
-STATEMENT ALTER TABLE testRel DROP since;
---- ok
-STATEMENT CHECKPOINT;
---- ok
-RELOADDB
-STATEMENT MATCH ()-[k:testRel]->() RETURN k.since;
---- error
Binder exception: Cannot find property since for k.
-STATEMENT MATCH (:test)-[k:testRel]->(:test) RETURN k.prop3;
---- 4
1
2
3
4

-CASE RenameRelGroupCommit
-STATEMENT CREATE NODE TABLE base1(id INT64, primary key(id));
---- ok
-STATEMENT CREATE NODE TABLE base2(id INT64, primary key(id));
---- ok
-STATEMENT CREATE REL TABLE test(FROM base1 TO base1, FROM base1 TO base2);
---- ok
-STATEMENT BEGIN TRANSACTION;
---- ok
-STATEMENT ALTER TABLE test RENAME TO test1;
---- ok
-STATEMENT COMMIT;
---- ok
-STATEMENT CALL SHOW_TABLES() RETURN *;
---- 3
0|base1|NODE|local(kuzu)|
1|base2|NODE|local(kuzu)|
0|test1|REL|local(kuzu)|

-CASE RenameRelGroupRollback
-STATEMENT CREATE NODE TABLE base1(id INT64, primary key(id));
---- ok
-STATEMENT CREATE NODE TABLE base2(id INT64, primary key(id));
---- ok
-STATEMENT CREATE REL TABLE test(FROM base1 TO base1, FROM base1 TO base2);
---- ok
-STATEMENT BEGIN TRANSACTION;
---- ok
-STATEMENT ALTER TABLE test RENAME TO test1;
---- ok
-STATEMENT ROLLBACK;
---- ok
-STATEMENT CALL SHOW_TABLES() RETURN *;
---- 3
0|base1|NODE|local(kuzu)|
1|base2|NODE|local(kuzu)|
0|test|REL|local(kuzu)|

-CASE RenameRelGroupCommitRecovery
-STATEMENT CREATE NODE TABLE base1(id INT64, primary key(id));
---- ok
-STATEMENT CREATE NODE TABLE base2(id INT64, primary key(id));
---- ok
-STATEMENT CREATE REL TABLE test(FROM base1 TO base1, FROM base1 TO base2);
---- ok
-STATEMENT BEGIN TRANSACTION;
---- ok
-STATEMENT ALTER TABLE test RENAME TO test1;
---- ok
-STATEMENT COMMIT;
---- ok
-STATEMENT CALL SHOW_TABLES() RETURN *;
---- 3
0|base1|NODE|local(kuzu)|
1|base2|NODE|local(kuzu)|
0|test1|REL|local(kuzu)|
-RELOADDB
-STATEMENT CALL SHOW_TABLES() RETURN *;
---- 3
0|base1|NODE|local(kuzu)|
1|base2|NODE|local(kuzu)|
0|test1|REL|local(kuzu)|

-CASE RenameRelGroupRollbackRecovery
-STATEMENT CREATE NODE TABLE base1(id INT64, primary key(id));
---- ok
-STATEMENT CREATE NODE TABLE base2(id INT64, primary key(id));
---- ok
-STATEMENT CREATE REL TABLE test(FROM base1 TO base1, FROM base1 TO base2);
---- ok
-STATEMENT BEGIN TRANSACTION;
---- ok
-STATEMENT ALTER TABLE test RENAME TO test1;
---- ok
-STATEMENT ROLLBACK;
---- ok
-STATEMENT CALL SHOW_TABLES() RETURN *;
---- 3
0|base1|NODE|local(kuzu)|
1|base2|NODE|local(kuzu)|
0|test|REL|local(kuzu)|
-RELOADDB
-STATEMENT CALL SHOW_TABLES() RETURN *;
---- 3
0|base1|NODE|local(kuzu)|
1|base2|NODE|local(kuzu)|
0|test|REL|local(kuzu)|

-CASE RenameRelGroupPropertyCommit
-STATEMENT CREATE NODE TABLE base1(id INT64, primary key(id));
---- ok
-STATEMENT CREATE NODE TABLE base2(id INT64, primary key(id));
---- ok
-STATEMENT CREATE REL TABLE test(FROM base1 TO base1, FROM base1 TO base2, prop1 INT64);
---- ok
-STATEMENT BEGIN TRANSACTION;
---- ok
-STATEMENT ALTER TABLE test RENAME prop1 TO prop2;
---- ok
-STATEMENT COMMIT;
---- ok
-STATEMENT CALL table_info("test") RETURN *;
---- 1
1|prop2|INT64|NULL|both

-CASE RenameRelGroupPropertyRollback
-STATEMENT CREATE NODE TABLE base1(id INT64, primary key(id));
---- ok
-STATEMENT CREATE NODE TABLE base2(id INT64, primary key(id));
---- ok
-STATEMENT CREATE REL TABLE test(FROM base1 TO base1, FROM base1 TO base2, prop1 INT64);
---- ok
-STATEMENT BEGIN TRANSACTION;
---- ok
-STATEMENT ALTER TABLE test RENAME prop1 TO prop2;
---- ok
-STATEMENT ROLLBACK;
---- ok
-STATEMENT CALL table_info("test") RETURN *;
---- 1
1|prop1|INT64|NULL|both

-CASE RenameRelGroupPropertyCommitRecovery
-STATEMENT CREATE NODE TABLE base1(id INT64, primary key(id));
---- ok
-STATEMENT CREATE NODE TABLE base2(id INT64, primary key(id));
---- ok
-STATEMENT CREATE REL TABLE test(FROM base1 TO base1, FROM base1 TO base2, prop1 INT64);
---- ok
-STATEMENT BEGIN TRANSACTION;
---- ok
-STATEMENT ALTER TABLE test RENAME prop1 TO prop2;
---- ok
-STATEMENT COMMIT;
---- ok
-STATEMENT CALL table_info("test") RETURN *;
---- 1
1|prop2|INT64|NULL|both
-RELOADDB
-STATEMENT CALL table_info("test") RETURN *;
---- 1
1|prop2|INT64|NULL|both

-CASE RenameRelGroupPropertyRollbackRecovery
-STATEMENT CREATE NODE TABLE base1(id INT64, primary key(id));
---- ok
-STATEMENT CREATE NODE TABLE base2(id INT64, primary key(id));
---- ok
-STATEMENT CREATE REL TABLE test(FROM base1 TO base1, FROM base1 TO base2, prop1 INT64);
---- ok
-STATEMENT BEGIN TRANSACTION;
---- ok
-STATEMENT ALTER TABLE test RENAME prop1 TO prop2;
---- ok
-STATEMENT ROLLBACK;
---- ok
-STATEMENT CALL table_info("test") RETURN *;
---- 1
1|prop1|INT64|NULL|both
-RELOADDB
-STATEMENT CALL table_info("test") RETURN *;
---- 1
1|prop1|INT64|NULL|both

-CASE AddDropRelGroupPropertyCommit
-STATEMENT CREATE NODE TABLE base1(id INT64, primary key(id));
---- ok
-STATEMENT CREATE NODE TABLE base2(id INT64, primary key(id));
---- ok
-STATEMENT CREATE REL TABLE test(FROM base1 TO base1, FROM base1 TO base2);
---- ok
-STATEMENT BEGIN TRANSACTION;
---- ok
-STATEMENT ALTER TABLE test ADD prop1 INT64;
---- ok
-STATEMENT COMMIT;
---- ok
-STATEMENT CALL table_info("test") RETURN *;
---- 1
1|prop1|INT64|NULL|both

-CASE AddDropRelGroupPropertyRollback
-STATEMENT CREATE NODE TABLE base1(id INT64, primary key(id));
---- ok
-STATEMENT CREATE NODE TABLE base2(id INT64, primary key(id));
---- ok
-STATEMENT CREATE REL TABLE test(FROM base1 TO base1, FROM base1 TO base2);
---- ok
-STATEMENT BEGIN TRANSACTION;
---- ok
-STATEMENT ALTER TABLE test ADD prop1 INT64;
---- ok
-STATEMENT ROLLBACK;
---- ok
-STATEMENT CALL table_info("test") RETURN *;
---- 0

-CASE AddDropRelGroupPropertyCommitRecovery
-STATEMENT CREATE NODE TABLE base1(id INT64, primary key(id));
---- ok
-STATEMENT CREATE NODE TABLE base2(id INT64, primary key(id));
---- ok
-STATEMENT CREATE REL TABLE test(FROM base1 TO base1, FROM base1 TO base2);
---- ok
-STATEMENT BEGIN TRANSACTION;
---- ok
-STATEMENT ALTER TABLE test ADD prop1 INT64;
---- ok
-STATEMENT COMMIT;
---- ok
-STATEMENT CALL table_info("test") RETURN *;
---- 1
1|prop1|INT64|NULL|both
-RELOADDB
-STATEMENT CALL table_info("test") RETURN *;
---- 1
1|prop1|INT64|NULL|both

-CASE AddDropRelGroupPropertyRollbackRecovery
-STATEMENT CREATE NODE TABLE base1(id INT64, primary key(id));
---- ok
-STATEMENT CREATE NODE TABLE base2(id INT64, primary key(id));
---- ok
-STATEMENT CREATE REL TABLE test(FROM base1 TO base1, FROM base1 TO base2);
---- ok
-STATEMENT BEGIN TRANSACTION;
---- ok
-STATEMENT ALTER TABLE test ADD prop1 INT64;
---- ok
-STATEMENT ROLLBACK;
---- ok
-STATEMENT CALL table_info("test") RETURN *;
---- 0
-RELOADDB
-STATEMENT CALL table_info("test") RETURN *;
---- 0

-CASE DropRelGroupPropertyCommit
-STATEMENT CREATE NODE TABLE base1(id INT64, primary key(id));
---- ok
-STATEMENT CREATE NODE TABLE base2(id INT64, primary key(id));
---- ok
-STATEMENT CREATE REL TABLE test(FROM base1 TO base1, FROM base1 TO base2, prop1 INT64);
---- ok
-STATEMENT BEGIN TRANSACTION;
---- ok
-STATEMENT ALTER TABLE test DROP prop1;
---- ok
-STATEMENT COMMIT;
---- ok
-STATEMENT CALL table_info("test") RETURN *;
---- 0

-CASE DropRelGroupPropertyRollback
-STATEMENT CREATE NODE TABLE base1(id INT64, primary key(id));
---- ok
-STATEMENT CREATE NODE TABLE base2(id INT64, primary key(id));
---- ok
-STATEMENT CREATE REL TABLE test(FROM base1 TO base1, FROM base1 TO base2, prop1 INT64);
---- ok
-STATEMENT BEGIN TRANSACTION;
---- ok
-STATEMENT ALTER TABLE test DROP prop1;
---- ok
-STATEMENT ROLLBACK;
---- ok
-STATEMENT CALL table_info("test") RETURN *;
---- 1
1|prop1|INT64|NULL|both

-CASE DropRelGroupPropertyCommitRecovery
-STATEMENT CREATE NODE TABLE base1(id INT64, primary key(id));
---- ok
-STATEMENT CREATE NODE TABLE base2(id INT64, primary key(id));
---- ok
-STATEMENT CREATE REL TABLE test(FROM base1 TO base1, FROM base1 TO base2, prop1 INT64);
---- ok
-STATEMENT BEGIN TRANSACTION;
---- ok
-STATEMENT ALTER TABLE test DROP prop1;
---- ok
-STATEMENT COMMIT;
---- ok
-STATEMENT CALL table_info("test") RETURN *;
---- 0
-RELOADDB
-STATEMENT CALL table_info("test") RETURN *;
---- 0

-CASE DropRelGroupPropertyRollbackRecovery
-STATEMENT CREATE NODE TABLE base1(id INT64, primary key(id));
---- ok
-STATEMENT CREATE NODE TABLE base2(id INT64, primary key(id));
---- ok
-STATEMENT CREATE REL TABLE test(FROM base1 TO base1, FROM base1 TO base2, prop1 INT64);
---- ok
-STATEMENT BEGIN TRANSACTION;
---- ok
-STATEMENT ALTER TABLE test DROP prop1;
---- ok
-STATEMENT ROLLBACK;
---- ok
-STATEMENT CALL table_info("test") RETURN *;
---- 1
1|prop1|INT64|NULL|both
-RELOADDB
-STATEMENT CALL table_info("test") RETURN *;
---- 1
1|prop1|INT64|NULL|both

-CASE CommentRelGroupCommit
-STATEMENT CREATE NODE TABLE base1(id INT64, primary key(id));
---- ok
-STATEMENT CREATE NODE TABLE base2(id INT64, primary key(id));
---- ok
-STATEMENT CREATE REL TABLE test(FROM base1 TO base1, FROM base1 TO base2);
---- ok
-STATEMENT BEGIN TRANSACTION;
---- ok
-STATEMENT COMMENT ON TABLE test IS 'This is a test comment';
---- ok
-STATEMENT CALL SHOW_TABLES() RETURN *;
---- 3
0|base1|NODE|local(kuzu)|
1|base2|NODE|local(kuzu)|
0|test|REL|local(kuzu)|This is a test comment
-STATEMENT COMMIT;
---- ok
-STATEMENT CALL SHOW_TABLES() RETURN *;
---- 3
0|base1|NODE|local(kuzu)|
1|base2|NODE|local(kuzu)|
0|test|REL|local(kuzu)|This is a test comment

-CASE CommentRelGroupRollback
-STATEMENT CREATE NODE TABLE base1(id INT64, primary key(id));
---- ok
-STATEMENT CREATE NODE TABLE base2(id INT64, primary key(id));
---- ok
-STATEMENT CREATE REL TABLE test(FROM base1 TO base1, FROM base1 TO base2);
---- ok
-STATEMENT BEGIN TRANSACTION;
---- ok
-STATEMENT COMMENT ON TABLE test IS 'This is a test comment';
---- ok
-STATEMENT CALL SHOW_TABLES() RETURN *;
---- 3
0|base1|NODE|local(kuzu)|
1|base2|NODE|local(kuzu)|
0|test|REL|local(kuzu)|This is a test comment
-STATEMENT ROLLBACK;
---- ok
-STATEMENT CALL SHOW_TABLES() RETURN *;
---- 3
0|base1|NODE|local(kuzu)|
1|base2|NODE|local(kuzu)|
0|test|REL|local(kuzu)|

-CASE CommentRelGroupCommitRecovery
-STATEMENT CREATE NODE TABLE base1(id INT64, primary key(id));
---- ok
-STATEMENT CREATE NODE TABLE base2(id INT64, primary key(id));
---- ok
-STATEMENT CREATE REL TABLE test(FROM base1 TO base1, FROM base1 TO base2);
---- ok
-STATEMENT BEGIN TRANSACTION;
---- ok
-STATEMENT COMMENT ON TABLE test IS 'This is a test comment';
---- ok
-STATEMENT COMMIT;
---- ok
-STATEMENT CALL SHOW_TABLES() RETURN *;
---- 3
0|base1|NODE|local(kuzu)|
1|base2|NODE|local(kuzu)|
0|test|REL|local(kuzu)|This is a test comment
-RELOADDB
-STATEMENT CALL SHOW_TABLES() RETURN *;
---- 3
0|base1|NODE|local(kuzu)|
1|base2|NODE|local(kuzu)|
0|test|REL|local(kuzu)|This is a test comment

-CASE CommentRelGroupRollbackRecovery
-STATEMENT CREATE NODE TABLE base1(id INT64, primary key(id));
---- ok
-STATEMENT CREATE NODE TABLE base2(id INT64, primary key(id));
---- ok
-STATEMENT CREATE REL TABLE test(FROM base1 TO base1, FROM base1 TO base2);
---- ok
-STATEMENT BEGIN TRANSACTION;
---- ok
-STATEMENT COMMENT ON TABLE test IS 'This is a test comment';
---- ok
-STATEMENT ROLLBACK;
---- ok
-STATEMENT CALL SHOW_TABLES() RETURN *;
---- 3
0|base1|NODE|local(kuzu)|
1|base2|NODE|local(kuzu)|
0|test|REL|local(kuzu)|
-RELOADDB
-STATEMENT CALL SHOW_TABLES() RETURN *;
---- 3
0|base1|NODE|local(kuzu)|
1|base2|NODE|local(kuzu)|
0|test|REL|local(kuzu)|
