-DATASET CSV empty
--

-CASE SequenceReadTrxError
-STATEMENT CREATE SEQUENCE before;
---- ok
-STATEMENT BEGIN TRANSACTION READ ONLY;
---- ok
-STATEMENT RETURN nextval('before');
---- error
Can not execute a write query inside a read-only transaction.
-STATEMENT BEGIN TRANSACTION READ ONLY;
---- error
Connection already has an active transaction. Cannot start a transaction within another one. For concurrent multiple transactions, please open other connections.
-STATEMENT CREATE SEQUENCE after;
---- ok
-STATEMENT RETURN currval('before');
---- error
Catalog exception: currval: sequence "before" is not yet defined. To define the sequence, call nextval first.

-CASE SequenceCallCommit
-STATEMENT BEGIN TRANSACTION;
---- ok
-STATEMENT CREATE SEQUENCE next;
---- ok
-STATEMENT RETURN nextval('next');
---- 1
1
-STATEMENT Commit;
---- ok
-STATEMENT RETURN currval('next');
---- 1
1

-CASE SequenceCallCommitRecovery
-STATEMENT CALL auto_checkpoint=false;
---- ok
-STATEMENT CREATE SEQUENCE before;
---- ok
-STATEMENT BEGIN TRANSACTION;
---- ok
-STATEMENT CREATE SEQUENCE after;
---- ok
-STATEMENT RETURN nextval('before');
---- 1
1
-STATEMENT RETURN nextval('after');
---- 1
1
-STATEMENT Commit;
---- ok
-RELOADDB
-STATEMENT RETURN currval('before');
---- 1
1
-STATEMENT RETURN currval('after');
---- 1
1

-CASE SequenceCallRollback
-STATEMENT CREATE SEQUENCE before;
---- ok
-STATEMENT BEGIN TRANSACTION;
---- ok
-STATEMENT CREATE SEQUENCE after;
---- ok
-STATEMENT RETURN nextval('before');
---- 1
1
-STATEMENT RETURN nextval('after');
---- 1
1
-STATEMENT Rollback;
---- ok
-STATEMENT RETURN currval('before');
---- error
Catalog exception: currval: sequence "before" is not yet defined. To define the sequence, call nextval first.
-STATEMENT RETURN currval('after');
---- error
Catalog exception: after does not exist in catalog.

-CASE SequenceCallRollbackRecovery
-STATEMENT CALL auto_checkpoint=false;
---- ok
-STATEMENT CREATE SEQUENCE before;
---- ok
-STATEMENT BEGIN TRANSACTION;
---- ok
-STATEMENT CREATE SEQUENCE after;
---- ok
-STATEMENT RETURN nextval('before');
---- 1
1
-STATEMENT RETURN nextval('after');
---- 1
1
-STATEMENT Rollback;
---- ok
-RELOADDB
-STATEMENT RETURN currval('before');
---- error
Catalog exception: currval: sequence "before" is not yet defined. To define the sequence, call nextval first.
-STATEMENT RETURN currval('after');
---- error
Catalog exception: after does not exist in catalog.

-CASE SequenceImplicitCommit
-STATEMENT CREATE SEQUENCE id_sequence START 0 MINVALUE 0;
---- ok
-STATEMENT CREATE NODE TABLE test(id INT64 default nextval('id_sequence'), primary key(id));
---- ok
-STATEMENT BEGIN TRANSACTION;
---- ok
-STATEMENT CREATE (:test {});
---- ok
-STATEMENT Commit;
---- ok
-STATEMENT RETURN currval('id_sequence');
---- 1
0

-CASE SequenceImplicitCommitRecovery
-STATEMENT CALL auto_checkpoint=false;
---- ok
-STATEMENT CREATE SEQUENCE id_sequence START 0 MINVALUE 0;
---- ok
-STATEMENT CREATE NODE TABLE test(id INT64 default nextval('id_sequence'), primary key(id));
---- ok
-STATEMENT BEGIN TRANSACTION;
---- ok
-STATEMENT CREATE (:test {});
---- ok
-STATEMENT Commit;
---- ok
-RELOADDB
-STATEMENT RETURN currval('id_sequence');
---- 1
0

-CASE SequenceImplicitRollback
-STATEMENT CREATE SEQUENCE id_sequence START 0 MINVALUE 0;
---- ok
-STATEMENT CREATE NODE TABLE test(id INT64 default nextval('id_sequence'), primary key(id));
---- ok
-STATEMENT BEGIN TRANSACTION;
---- ok
-STATEMENT CREATE (:test {});
---- ok
-STATEMENT Rollback;
---- ok
-STATEMENT RETURN currval('id_sequence');
---- error
Catalog exception: currval: sequence "id_sequence" is not yet defined. To define the sequence, call nextval first.

-CASE SequenceImplicitRollbackRecovery
-STATEMENT CALL auto_checkpoint=false;
---- ok
-STATEMENT CREATE SEQUENCE id_sequence START 0 MINVALUE 0;
---- ok
-STATEMENT CREATE NODE TABLE test(id INT64 default nextval('id_sequence'), primary key(id));
---- ok
-STATEMENT BEGIN TRANSACTION;
---- ok
-STATEMENT CREATE (:test {});
---- ok
-STATEMENT Rollback;
---- ok
-RELOADDB
-STATEMENT RETURN currval('id_sequence');
---- error
Catalog exception: currval: sequence "id_sequence" is not yet defined. To define the sequence, call nextval first.

-CASE SerialImplicitCommit
-STATEMENT CREATE NODE TABLE test(id SERIAL, primary key(id));
---- ok
-STATEMENT BEGIN TRANSACTION;
---- ok
-STATEMENT CREATE (:test {});
---- ok
-STATEMENT Commit;
---- ok
-STATEMENT RETURN currval('test_id_serial');
---- 1
0

-CASE SerialImplicitCommitRecovery
-STATEMENT CALL auto_checkpoint=false;
---- ok
-STATEMENT CREATE NODE TABLE test(id SERIAL, primary key(id));
---- ok
-STATEMENT BEGIN TRANSACTION;
---- ok
-STATEMENT CREATE (:test {});
---- ok
-STATEMENT Commit;
---- ok
-RELOADDB
-STATEMENT RETURN currval('test_id_serial');
---- 1
0

-CASE SerialImplicitRollback
-STATEMENT CREATE NODE TABLE test(id SERIAL, primary key(id));
---- ok
-STATEMENT BEGIN TRANSACTION;
---- ok
-STATEMENT CREATE (:test {});
---- ok
-STATEMENT Rollback;
---- ok
-STATEMENT RETURN currval('test_id_serial');
---- error
Catalog exception: currval: sequence "test_id_serial" is not yet defined. To define the sequence, call nextval first.

-CASE SerialImplicitRollbackRecovery
-STATEMENT CALL auto_checkpoint=false;
---- ok
-STATEMENT CREATE NODE TABLE test(id SERIAL, primary key(id));
---- ok
-STATEMENT BEGIN TRANSACTION;
---- ok
-STATEMENT CREATE (:test {});
---- ok
-STATEMENT Rollback;
---- ok
-RELOADDB
-STATEMENT RETURN currval('test_id_serial');
---- error
Catalog exception: currval: sequence "test_id_serial" is not yet defined. To define the sequence, call nextval first.
