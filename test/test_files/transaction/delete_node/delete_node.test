-DATASET CSV empty
--

-CASE EmptyDatabaseDetachDelete
-STATEMENT MATCH (n) DELETE n;
---- ok
-STATEMENT MATCH (n) DETACH DELETE n;
---- ok

-CASE DeleteLocalNode
-STATEMENT CREATE NODE TABLE person (oid INT64, fName STRING, PRIMARY KEY(oid));
---- ok
-STATEMENT CREATE REL TABLE knows (FROM person TO person);
---- ok
-STATEMENT BEGIN TRANSACTION;
---- ok
-STATEMENT CREATE (p:person {oid: 0, fName: 'Alice'});
---- ok
-STATEMENT CREATE (p:person {oid: 1, fName: 'Bob'});
---- ok
-STATEMENT CREATE (p:person {oid: 2, fName: 'Charlie'});
---- ok
-STATEMENT CREATE (p:person {oid: 3, fName: 'Dave'});
---- ok
-STATEMENT MATCH (p1:person), (p2:person) WHERE p1.oid=0 AND p2.oid=2 CREATE (p1)-[:knows]->(p2);
---- ok
-STATEMENT MATCH (p1:person), (p2:person) WHERE p1.oid=0 AND p2.oid=3 CREATE (p1)-[:knows]->(p2);
---- ok
-STATEMENT MATCH (p:person) WHERE p.oid=1 DELETE p;
---- ok
-STATEMENT MATCH (p1:person)-[r:knows]->(p2:person) RETURN ID(p1), p1.fName, ID(p2), p2.fName;
---- 2
0:0|Alice|0:2|Charlie
0:0|Alice|0:3|Dave
-STATEMENT COMMIT;
---- ok
-STATEMENT MATCH (p:person) RETURN ID(p);
---- 3
0:0
0:2
0:3
-STATEMENT MATCH (p:person) WHERE p.fName='Dave' RETURN ID(p), p.fName;
---- 1
0:3|Dave
-STATEMENT MATCH (p1:person)-[r:knows]->(p2:person) RETURN ID(p1), p1.fName, ID(p2), p2.fName;
---- 2
0:0|Alice|0:2|Charlie
0:0|Alice|0:3|Dave

-CASE CreateUpdateAndDeleteLocalNode
-STATEMENT CREATE NODE TABLE person (oid INT64, fName STRING, PRIMARY KEY(oid));
---- ok
-STATEMENT CREATE REL TABLE knows (FROM person TO person);
---- ok
-STATEMENT BEGIN TRANSACTION;
---- ok
-STATEMENT CREATE (p:person {oid: 0, fName: 'Alice'});
---- ok
-STATEMENT CREATE (p:person {oid: 1, fName: 'Bob'});
---- ok
-STATEMENT CREATE (p:person {oid: 2, fName: 'Charlie'});
---- ok
-STATEMENT CREATE (p:person {oid: 3, fName: 'Dave'});
---- ok
-STATEMENT MATCH (p:person) WHERE p.oid=1 SET p.fName='Bob2';
---- ok
-STATEMENT MATCH (p:person) WHERE p.oid=1 RETURN p.fName;
---- 1
Bob2
-STATEMENT MATCH (p:person) WHERE p.oid=1 DELETE p;
---- ok
-STATEMENT MATCH (p:person) WHERE p.oid=1 RETURN p.fName;
---- 0
-STATEMENT MATCH (p:person) WHERE p.oid=2 SET p.fName='Charlie2';
---- ok
-STATEMENT COMMIT;
---- ok
-STATEMENT MATCH (p:person) RETURN ID(p), p.fName;
---- 3
0:0|Alice
0:2|Charlie2
0:3|Dave
-STATEMENT MATCH (p:person) WHERE p.fName='Dave' RETURN ID(p), p.fName;
---- 1
0:3|Dave

-CASE DetachDeleteLocalNode
-STATEMENT BEGIN TRANSACTION;
---- ok
-STATEMENT CREATE NODE TABLE Teacher(name STRING, age INT64, PRIMARY KEY(name));
---- ok
-STATEMENT CREATE (:Teacher {name: 'Alice', age: 40});
---- ok
-STATEMENT CREATE (:Teacher {name: 'Bob', age: 35});
---- ok
-STATEMENT CREATE NODE TABLE Person(name STRING, age INT64, PRIMARY KEY(name));
---- ok
-STATEMENT CREATE (:Person {name: 'A', age: 25});
---- ok
-STATEMENT CREATE (:Person {name: 'B', age: 30});
---- ok
-STATEMENT CREATE (:Person {name: 'C', age: 30});
---- ok
-STATEMENT CREATE (:Person {name: 'D', age: 30});
---- ok
-STATEMENT CREATE REL TABLE Teaches(FROM Teacher TO Person, since INT64);
---- ok
-STATEMENT MATCH (a:Teacher {name: 'Alice'}), (b:Person {name: 'B'}) CREATE (a)-[:Teaches {since: 2020}]->(b);
---- ok
-STATEMENT MATCH (a:Teacher {name: 'Alice'}), (b:Person {name: 'C'}) CREATE (a)-[:Teaches {since: 2020}]->(b);
---- ok
-STATEMENT MATCH (a:Teacher {name: 'Alice'}), (b:Person {name: 'D'}) CREATE (a)-[:Teaches {since: 2020}]->(b);
---- ok
-STATEMENT MATCH (p:Person) WHERE p.name='B' DETACH DELETE p;
---- ok
-STATEMENT MATCH (a:Teacher)-[e]->(b:Person) HINT (a JOIN e) JOIN b RETURN COUNT(e);
---- 1
2
-STATEMENT MATCH (a:Teacher)-[e]->(b:Person) HINT (b JOIN e) JOIN a RETURN COUNT(e);
---- 1
2
-STATEMENT COMMIT;
---- ok
