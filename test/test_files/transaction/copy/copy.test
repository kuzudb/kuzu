-GROUP TinySnbCopyCSVTransactionTest
-DATASET CSV empty
--

-DEFINE_STATEMENT_BLOCK CREATE_COPY_NODE_TABLE_TEST [
-STATEMENT CREATE NODE TABLE person (ID INT64, fName STRING, gender INT64, isStudent BOOLEAN, isWorker BOOLEAN, age INT64, eyeSight DOUBLE, birthdate DATE, registerTime TIMESTAMP, lastJobDuration INTERVAL, workedHours INT64[], usedNames STRING[], courseScoresPerTerm INT64[][], grades INT64[4], height float, u UUID, PRIMARY KEY (ID));
---- ok
-STATEMENT COPY person FROM "${KUZU_ROOT_DIRECTORY}/dataset/tinysnb/vPerson.csv" (HEADER=true)
---- ok
]

-DEFINE_STATEMENT_BLOCK CREATE_COPY_REL_TABLE_TEST [
-STATEMENT CREATE NODE TABLE person (ID INT64, fName STRING, gender INT64, isStudent BOOLEAN, isWorker BOOLEAN, age INT64, eyeSight DOUBLE, birthdate DATE, registerTime TIMESTAMP, lastJobDuration INTERVAL, workedHours INT64[], usedNames STRING[], courseScoresPerTerm INT64[][], grades INT64[4], height float, u UUID, PRIMARY KEY (ID));
---- ok
-STATEMENT COPY person FROM "${KUZU_ROOT_DIRECTORY}/dataset/tinysnb/vPerson.csv" (HEADER=true)
---- ok
-STATEMENT create rel table knows (FROM person TO person, date DATE, meetTime TIMESTAMP, validInterval INTERVAL, comments STRING[], summary STRUCT(locations STRING[], transfer STRUCT(day DATE, amount INT64[])), notes UNION(firstmet DATE, type INT16, comment STRING), someMap MAP(STRING, STRING), MANY_MANY);
---- ok
-STATEMENT COPY knows FROM "${KUZU_ROOT_DIRECTORY}/dataset/tinysnb/eKnows.csv"
---- ok
]

-DEFINE_STATEMENT_BLOCK CREATE_COPY_NODE_TABLE_COMMIT [
-STATEMENT MATCH (p:person) return count(p);
---- 1
8
-STATEMENT MATCH (p:person) return p.age;
---- 8
20
20
25
30
35
40
45
83
]

-DEFINE_STATEMENT_BLOCK CREATE_COPY_NODE_TABLE_ROLLBACK [
-STATEMENT MATCH (p:person) return count(p);
---- 1
0
-STATEMENT MATCH (p:person) return count(p);
---- 1
0
]


-CASE CopyNodeCommit
-STATEMENT BEGIN TRANSACTION
---- ok
-INSERT_STATEMENT_BLOCK CREATE_COPY_NODE_TABLE_TEST
-STATEMENT COMMIT
---- ok
-INSERT_STATEMENT_BLOCK CREATE_COPY_NODE_TABLE_COMMIT

-CASE CopyNodeCommitRecovery
-STATEMENT BEGIN TRANSACTION
---- ok
-INSERT_STATEMENT_BLOCK CREATE_COPY_NODE_TABLE_TEST
-STATEMENT COMMIT_SKIP_CHECKPOINT
---- ok
-RELOADDB
-INSERT_STATEMENT_BLOCK CREATE_COPY_NODE_TABLE_COMMIT

-CASE CopyNodeCommitRollback
-STATEMENT BEGIN TRANSACTION
---- ok
-INSERT_STATEMENT_BLOCK CREATE_COPY_NODE_TABLE_TEST
-STATEMENT ROLLBACK
---- ok
-INSERT_STATEMENT_BLOCK CREATE_COPY_NODE_TABLE_ROLLBACK

-CASE CopyNodeCommitRollbackRecovery
-STATEMENT BEGIN TRANSACTION
---- ok
-INSERT_STATEMENT_BLOCK CREATE_COPY_NODE_TABLE_TEST
-STATEMENT Rollback_skip_checkpoint
---- ok
-INSERT_STATEMENT_BLOCK CREATE_COPY_NODE_TABLE_ROLLBACK

-CASE CopyRelCommit
-STATEMENT BEGIN TRANSACTION
---- ok
-INSERT_STATEMENT_BLOCK CREATE_COPY_REL_TABLE_TEST
-STATEMENT COMMIT
---- ok
-STATEMENT MATCH (:person)-[e:knows]->(:person) RETURN COUNT(e);
---- 1
6
-STATEMENT MATCH (:person)-[e:knows]->(:person) return e.date;
---- 6
2021-06-30
2021-06-30
2021-06-30
2021-06-30
1950-05-14
1950-05-14

-CASE CopyRelCommitRecovery
-STATEMENT BEGIN TRANSACTION
---- ok
-INSERT_STATEMENT_BLOCK CREATE_COPY_REL_TABLE_TEST
-STATEMENT COMMIT_SKIP_CHECKPOINT
---- ok
-RELOADDB
-STATEMENT MATCH (:person)-[e:knows]->(:person) RETURN COUNT(e);
---- 1
6
-STATEMENT MATCH (:person)-[e:knows]->(:person) return e.date;
---- 6
2021-06-30
2021-06-30
2021-06-30
2021-06-30
1950-05-14
1950-05-14

-CASE CopyRelCommitRollback
-STATEMENT BEGIN TRANSACTION
---- ok
-INSERT_STATEMENT_BLOCK CREATE_COPY_REL_TABLE_TEST
-STATEMENT ROLLBACK
---- ok
-STATEMENT match (:person)-[e:knows]->(:person) RETURN COUNT(e);
---- 1
0

-CASE CopyRelCommitRollbackRecovery
-STATEMENT BEGIN TRANSACTION
---- ok
-INSERT_STATEMENT_BLOCK CREATE_COPY_REL_TABLE_TEST
-STATEMENT Rollback_skip_checkpoint
---- ok
-STATEMENT match (:person)-[e:knows]->(:person) RETURN COUNT(e);
---- 1
0
