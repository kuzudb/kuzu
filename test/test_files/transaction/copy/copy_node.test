-DATASET CSV empty
--

-CASE CopyNodeManualTransactionCheck
-STATEMENT BEGIN TRANSACTION;
---- ok
-STATEMENT CREATE NODE TABLE person (ID INT64, fName STRING, gender INT64, isStudent BOOLEAN, isWorker BOOLEAN, age INT64, eyeSight DOUBLE, birthdate DATE, registerTime TIMESTAMP, lastJobDuration INTERVAL, workedHours INT64[], usedNames STRING[], courseScoresPerTerm INT64[][], grades INT64[4], height float, u UUID, PRIMARY KEY (ID));
---- ok
-STATEMENT COPY person FROM "${KUZU_ROOT_DIRECTORY}/dataset/tinysnb/vPerson.csv" (HEADER=true)
---- error
Connection exception: COPY FROM is only supported in auto transaction mode.

-CASE CopyNodeCommit
-SKIP
-STATEMENT BEGIN TRANSACTION;
---- ok
-STATEMENT CREATE NODE TABLE person (ID INT64, fName STRING, gender INT64, isStudent BOOLEAN, isWorker BOOLEAN, age INT64, eyeSight DOUBLE, birthdate DATE, registerTime TIMESTAMP, lastJobDuration INTERVAL, workedHours INT64[], usedNames STRING[], courseScoresPerTerm INT64[][], grades INT64[4], height float, u UUID, PRIMARY KEY (ID));
---- ok
-STATEMENT COPY person FROM "${KUZU_ROOT_DIRECTORY}/dataset/tinysnb/vPerson.csv" (HEADER=true)
---- ok
-STATEMENT COMMIT;
---- ok
-STATEMENT MATCH (p:person) return count(p);
---- 1
5
-STATEMENT MATCH (p:person) return p.age;
---- 5
20
20
30
35
45

-CASE CopyNodeCommitRecovery
-SKIP
-STATEMENT BEGIN TRANSACTION;
---- ok
-STATEMENT CREATE NODE TABLE person (ID INT64, fName STRING, gender INT64, isStudent BOOLEAN, isWorker BOOLEAN, age INT64, eyeSight DOUBLE, birthdate DATE, registerTime TIMESTAMP, lastJobDuration INTERVAL, workedHours INT64[], usedNames STRING[], courseScoresPerTerm INT64[][], grades INT64[4], height float, u UUID, PRIMARY KEY (ID));
---- ok
-STATEMENT COPY person FROM "${KUZU_ROOT_DIRECTORY}/dataset/tinysnb/vPerson.csv" (HEADER=true)
---- ok
-STATEMENT COMMIT;
---- ok
-RELOADDB
-STATEMENT MATCH (p:person) return count(p);
---- 1
5
-STATEMENT MATCH (p:person) return p.age;
---- 5
20
20
30
35
45

-CASE CopyNodeRollbackDueToError
-STATEMENT CREATE NODE TABLE person (ID INT64, name STRING, PRIMARY KEY (ID));
---- ok
-STATEMENT COPY person FROM "${KUZU_ROOT_DIRECTORY}/dataset/copy-test/copy-error/person.csv" (HEADER=true)
---- error
Copy exception: Found duplicated primary key value 10, which violates the uniqueness constraint of the primary key column.
-STATEMENT MATCH (p:person) return count(*);
---- 1
0

-CASE CopyNodeRollbackAndManualCheckpoint
-STATEMENT CREATE NODE TABLE person (ID INT64, name STRING, PRIMARY KEY (ID));
---- ok
-STATEMENT COPY person FROM "${KUZU_ROOT_DIRECTORY}/dataset/copy-test/copy-error/person.csv" (HEADER=true)
---- error
Copy exception: Found duplicated primary key value 10, which violates the uniqueness constraint of the primary key column.
-STATEMENT MATCH (p:person) return count(*);
---- 1
0
-STATEMENT CHECKPOINT;
---- ok
-STATEMENT MATCH (p:person) return count(*);
---- 1
0

-CASE CopyNodeRollbackAndManualCheckpointAndReloadDB
-STATEMENT CREATE NODE TABLE person (ID INT64, name STRING, PRIMARY KEY (ID));
---- ok
-STATEMENT COPY person FROM "${KUZU_ROOT_DIRECTORY}/dataset/copy-test/copy-error/person.csv" (HEADER=true)
---- error
Copy exception: Found duplicated primary key value 10, which violates the uniqueness constraint of the primary key column.
-STATEMENT MATCH (p:person) return count(*);
---- 1
0
-STATEMENT CHECKPOINT;
---- ok
-STATEMENT MATCH (p:person) return count(*);
---- 1
0
-RELOADDB
-STATEMENT MATCH (p:person) return count(*);
---- 1
0

-CASE CopyNodeRollbackAndManualCheckpoint2
-STATEMENT CREATE NODE TABLE person (ID INT64, fName STRING, gender INT64, isStudent BOOLEAN, isWorker BOOLEAN, age INT64, eyeSight DOUBLE, birthdate DATE, registerTime TIMESTAMP, lastJobDuration INTERVAL, workedHours INT64[], usedNames STRING[], courseScoresPerTerm INT64[][], grades INT64[4], height float, u UUID, PRIMARY KEY (ID));
---- ok
-STATEMENT COPY person FROM "${KUZU_ROOT_DIRECTORY}/dataset/tinysnb/vPerson.csv" (HEADER=true)
---- ok
-STATEMENT COPY person FROM "${KUZU_ROOT_DIRECTORY}/dataset/tinysnb/vPerson.csv" (HEADER=true)
---- error
Copy exception: Found duplicated primary key value 0, which violates the uniqueness constraint of the primary key column.
-STATEMENT MATCH (p:person) return count(*);
---- 1
5
-STATEMENT CHECKPOINT;
---- ok
-STATEMENT MATCH (p:person) return count(*);
---- 1
5

-CASE CopyNodeCommitNormalExecutionManualCheckpoint
-STATEMENT CREATE NODE TABLE person
            (ID INT64, fName STRING, gender INT64, isStudent BOOLEAN,
            isWorker BOOLEAN, age INT64, eyeSight DOUBLE, birthdate DATE,
            registerTime TIMESTAMP, lastJobDuration INTERVAL, workedHours INT64[],
            usedNames STRING[], courseScoresPerTerm INT64[][], grades INT64[4], height float, u UUID,
            PRIMARY KEY (ID));
---- ok
-STATEMENT MATCH (p:person) return *
---- 0
-STATEMENT COPY person FROM "${KUZU_ROOT_DIRECTORY}/dataset/tinysnb/vPerson.csv" (HEADER=true);
---- ok
-STATEMENT MATCH (p:person) return p.age
---- 5
20
20
45
30
35
-STATEMENT CHECKPOINT;
---- ok
-STATEMENT MATCH (p:person) return p.age
---- 5
20
20
45
30
35
-STATEMENT COPY person FROM "${KUZU_ROOT_DIRECTORY}/dataset/tinysnb/vPerson2.csv" (HEADER=false);
---- ok
-STATEMENT MATCH (p:person) return p.age
---- 8
20
20
25
30
35
40
45
83
-STATEMENT CHECKPOINT;
---- ok
-STATEMENT MATCH (p:person) return p.age
---- 8
20
20
25
30
35
40
45
83
-RELOADDB
-STATEMENT MATCH (p:person) return p.age
---- 8
20
20
25
30
35
40
45
83

-CASE CopyNodeAndDeleteAndManualCheckpoint
-STATEMENT CREATE NODE TABLE person (ID INT64, fName STRING, gender INT64, isStudent BOOLEAN, isWorker BOOLEAN, age INT64, eyeSight DOUBLE, birthdate DATE, registerTime TIMESTAMP, lastJobDuration INTERVAL, workedHours INT64[], usedNames STRING[], courseScoresPerTerm INT64[][], grades INT64[4], height float, u UUID, PRIMARY KEY (ID));
---- ok
-STATEMENT COPY person FROM "${KUZU_ROOT_DIRECTORY}/dataset/tinysnb/vPerson.csv" (HEADER=true)
---- ok
-STATEMENT MATCH (p:person) return count(*);
---- 1
5
-STATEMENT MATCH (a:person) DELETE a;
---- ok
-STATEMENT MATCH (p:person) return count(*);
---- 1
0
-STATEMENT CHECKPOINT;
---- ok
-STATEMENT MATCH (p:person) return count(*);
---- 1
0

-CASE CopyNodeAndDeleteAndManualCheckpointAndReloadDB
-STATEMENT CREATE NODE TABLE person (ID INT64, fName STRING, gender INT64, isStudent BOOLEAN, isWorker BOOLEAN, age INT64, eyeSight DOUBLE, birthdate DATE, registerTime TIMESTAMP, lastJobDuration INTERVAL, workedHours INT64[], usedNames STRING[], courseScoresPerTerm INT64[][], grades INT64[4], height float, u UUID, PRIMARY KEY (ID));
---- ok
-STATEMENT COPY person FROM "${KUZU_ROOT_DIRECTORY}/dataset/tinysnb/vPerson.csv" (HEADER=true)
---- ok
-STATEMENT MATCH (p:person) return count(*);
---- 1
5
-STATEMENT MATCH (a:person) DELETE a;
---- ok
-STATEMENT MATCH (p:person) return count(*);
---- 1
0
-STATEMENT CHECKPOINT;
---- ok
-STATEMENT MATCH (p:person) return count(*);
---- 1
0
-RELOADDB
-STATEMENT MATCH (p:person) return count(*);
---- 1
0
