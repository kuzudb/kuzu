-DATASET CSV EMPTY

--

-CASE TwoCycle

-STATEMENT CREATE NODE TABLE N (id SERIAL, PRIMARY KEY(id));
---- ok
-STATEMENT CREATE REL TABLE R (FROM N TO N);
---- ok
-STATEMENT CREATE (a)-[e]->(b), (b)-[]->(a);
---- ok
-STATEMENT MATCH (a)-[e*1..1]->(b) WHERE a.ID = 0 RETURN COUNT(*);
---- 1
1
-STATEMENT MATCH (a)-[e*1..2]->(b) WHERE a.ID = 0 RETURN COUNT(*);
---- 1
2
-STATEMENT MATCH (a)-[e*1..3]->(b) WHERE a.ID = 0 RETURN COUNT(*);
---- 1
3
-STATEMENT MATCH (a)-[e*2..2]->(b) WHERE a.ID = 0 RETURN COUNT(*);
---- 1
1
-STATEMENT MATCH (a)-[e*2..3]->(b) WHERE a.ID = 0 RETURN COUNT(*);
---- 1
2
-STATEMENT MATCH (a)-[e*3..3]->(b) WHERE a.ID = 0 RETURN COUNT(*);
---- 1
1
-STATEMENT MATCH (a)-[e* TRAIL 1..1]->(b) WHERE a.ID = 0 RETURN COUNT(*);
---- 1
1
-STATEMENT MATCH (a)-[e* TRAIL 1..2]->(b) WHERE a.ID = 0 RETURN COUNT(*);
---- 1
2
-STATEMENT MATCH (a)-[e* TRAIL 1..3]->(b) WHERE a.ID = 0 RETURN COUNT(*);
---- 1
2
-STATEMENT MATCH (a)-[e* TRAIL 2..2]->(b) WHERE a.ID = 0 RETURN COUNT(*);
---- 1
1
-STATEMENT MATCH (a)-[e* TRAIL 2..3]->(b) WHERE a.ID = 0 RETURN COUNT(*);
---- 1
1
-STATEMENT MATCH (a)-[e* TRAIL 3..3]->(b) WHERE a.ID = 0 RETURN COUNT(*);
---- 1
0
-STATEMENT MATCH (a)-[e* ACYCLIC 1..1]->(b) WHERE a.ID = 0 RETURN COUNT(*);
---- 1
1
-STATEMENT MATCH (a)-[e* ACYCLIC 1..2]->(b) WHERE a.ID = 0 RETURN COUNT(*);
---- 1
2
-STATEMENT MATCH (a)-[e* ACYCLIC 1..3]->(b) WHERE a.ID = 0 RETURN COUNT(*);
---- 1
3
-STATEMENT MATCH (a)-[e* ACYCLIC 2..2]->(b) WHERE a.ID = 0 RETURN COUNT(*);
---- 1
1
-STATEMENT MATCH (a)-[e* ACYCLIC 2..3]->(b) WHERE a.ID = 0 RETURN COUNT(*);
---- 1
2
-STATEMENT MATCH (a)-[e* ACYCLIC 3..3]->(b) WHERE a.ID = 0 RETURN COUNT(*);
---- 1
1
-STATEMENT MATCH (a)-[e* ACYCLIC 3..4]->(b) WHERE a.ID = 0 RETURN COUNT(*);
---- 1
1

-CASE ThreeCycle
-STATEMENT CREATE NODE TABLE N (id SERIAL, PRIMARY KEY(id));
---- ok
-STATEMENT CREATE REL TABLE R (FROM N TO N);
---- ok
-STATEMENT CREATE (a)-[]->(b), (b)-[]->(c), (c)-[]->(a);
---- ok
-STATEMENT MATCH (a)-[e*1..1]->(b) WHERE a.ID = 0 RETURN COUNT(*);
---- 1
1
-STATEMENT MATCH (a)-[e*1..2]->(b) WHERE a.ID = 0 RETURN COUNT(*);
---- 1
2
-STATEMENT MATCH (a)-[e*1..3]->(b) WHERE a.ID = 0 RETURN COUNT(*);
---- 1
3
-STATEMENT MATCH (a)-[e*2..2]->(b) WHERE a.ID = 0 RETURN COUNT(*);
---- 1
1
-STATEMENT MATCH (a)-[e*2..3]->(b) WHERE a.ID = 0 RETURN COUNT(*);
---- 1
2
-STATEMENT MATCH (a)-[e*3..3]->(b) WHERE a.ID = 0 RETURN COUNT(*);
---- 1
1
-STATEMENT MATCH (a)-[e* TRAIL 1..1]->(b) WHERE a.ID = 0 RETURN COUNT(*);
---- 1
1
-STATEMENT MATCH (a)-[e* TRAIL 1..2]->(b) WHERE a.ID = 0 RETURN COUNT(*);
---- 1
2
-STATEMENT MATCH (a)-[e* TRAIL 1..3]->(b) WHERE a.ID = 0 RETURN COUNT(*);
---- 1
3
-STATEMENT MATCH (a)-[e* TRAIL 2..2]->(b) WHERE a.ID = 0 RETURN COUNT(*);
---- 1
1
-STATEMENT MATCH (a)-[e* TRAIL 2..3]->(b) WHERE a.ID = 0 RETURN COUNT(*);
---- 1
2
-STATEMENT MATCH (a)-[e* TRAIL 3..3]->(b) WHERE a.ID = 0 RETURN COUNT(*);
---- 1
1
-STATEMENT MATCH (a)-[e* TRAIL 1..30]->(b) WHERE a.ID = 0 RETURN COUNT(*);
---- 1
3
-STATEMENT MATCH (a)-[e* ACYCLIC 1..1]->(b) WHERE a.ID = 0 RETURN COUNT(*);
---- 1
1
-STATEMENT MATCH (a)-[e* ACYCLIC 1..2]->(b) WHERE a.ID = 0 RETURN COUNT(*);
---- 1
2
-STATEMENT MATCH (a)-[e* ACYCLIC 1..3]->(b) WHERE a.ID = 0 RETURN COUNT(*);
---- 1
3
-STATEMENT MATCH (a)-[e* ACYCLIC 2..2]->(b) WHERE a.ID = 0 RETURN COUNT(*);
---- 1
1
-STATEMENT MATCH (a)-[e* ACYCLIC 2..3]->(b) WHERE a.ID = 0 RETURN COUNT(*);
---- 1
2
-STATEMENT MATCH (a)-[e* ACYCLIC 3..3]->(b) WHERE a.ID = 0 RETURN COUNT(*);
---- 1
1
