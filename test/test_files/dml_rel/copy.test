-DATASET CSV empty
--

-CASE CopyRelSetStorageDirection
-LOG Fwd
-STATEMENT create node table person (ID INt64, fName StRING, gender INT64, isStudent BoOLEAN, isWorker BOOLEAN, age INT64, eyeSight DOUBLE, birthdate DATE, registerTime TIMESTAMP, lastJobDuration interval, workedHours INT64[], usedNames STRING[], courseScoresPerTerm INT64[][], grades INT64[4], height float, u UUID, PRIMARY KEY (ID));
---- ok
-STATEMENT create rel table knows (FROM person TO person, date DATE, meetTime TIMESTAMP, validInterval INTERVAL, comments STRING[], summary STRUCT(locations STRING[], transfer STRUCT(day DATE, amount INT64[])), notes UNION(firstmet DATE, type INT16, comment STRING), someMap MAP(STRING, STRING), MANY_MAnY) WITH (storage_direction = 'fwd');
---- ok
-STATEMENT COPY person FROM "${KUZU_ROOT_DIRECTORY}/dataset/tinysnb/vPerson.csv";
---- ok
-STATEMENT COPY person FROM "${KUZU_ROOT_DIRECTORY}/dataset/tinysnb/vPerson2.csv";
---- ok
-STATEMENT COPY knows FROM "${KUZU_ROOT_DIRECTORY}/dataset/tinysnb/eKnows.csv";
---- ok
-STATEMENT MATCH (a:person)-[k:knows]->(b:person) HINT a JOIN (k JOIN b) RETURN COUNT(*)
---- error
Runtime exception: Failed to get bwd data for rel table "knows", please set the storage direction to BOTH
-STATEMENT MATCH (a:person)-[k:knows]-(b:person) RETURN COUNT(*)
---- error
Binder exception: Undirected rel pattern 'k' has at least one matched rel table with storage type 'fwd' or 'bwd'. Undirected rel patterns are only supported if every matched rel table has storage type 'both'.
-STATEMENT MATCH (a:person)-[k:knows]->(b:person) HINT b JOIN (k JOIN a) RETURN COUNT(*)
---- 1
6
-STATEMENT CALL table_info('knows') RETURN DISTINCT storage_direction
---- 1
fwd

-LOG Both
-STATEMENT create rel table meets (FROM person TO person, location FLOAT[2], times INT, data BYTEA, MANY_ONE);
---- ok
-STATEMENT COPY meets FROM "${KUZU_ROOT_DIRECTORY}/dataset/tinysnb/eMeets.csv";
---- ok
-STATEMENT MATCH (a:person)-[k:meets]->(b:person) RETURN COUNT(*)
---- 1
7
-STATEMENT CALL table_info('meets') RETURN DISTINCT storage_direction
---- 1
both

-LOG Bwd
-STATEMENT create rel table marries (FROM person TO person, usedAddress STRING[], address INT16[2], note STRING, ONE_ONE) WITH (storage_direction = 'bwd');
---- ok
-STATEMENT MATCH (a:person)-[m:marries]->(b:person) RETURN COUNT(*)
---- error
Binder exception: Querying table matched in rel pattern 'm' with bwd-only storage direction isn't supported.
-STATEMENT CALL table_info('marries') RETURN DISTINCT storage_direction
---- 1
bwd
-STATEMENT MATCH (a:person)-[e]->(b:person) RETURN COUNT(*)
---- error
Binder exception: There are no common storage directions among the rel tables matched by pattern 'e' (some tables have storage direction 'fwd' while others have storage direction 'bwd'). Scanning different tables matching the same pattern in different directions is currently unsupported.
