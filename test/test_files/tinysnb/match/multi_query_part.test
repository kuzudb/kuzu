-GROUP TinySnbReadTest
-DATASET CSV tinysnb

--

-CASE MatchMultiQuery

-LOG MultiQueryOneHopKnowsTest
-STATEMENT MATCH (a:person)-[e1:knows]->(b:person) WITH b.age AS m RETURN m
-ENUMERATE
---- 14
20
20
20
25
30
30
30
35
35
35
40
45
45
45

-LOG MultiQueryTwoHopKnowsTest
-STATEMENT MATCH (a:person)-[:knows]->(b:person) WITH b AS m WITH m AS n MATCH (n)-[e2:knows]->(c:person) RETURN COUNT(*)
-ENUMERATE
---- 1
36

-LOG MultiQueryThreeHopTwoKnowsOneWorkAtTest
-STATEMENT MATCH (a:person)-[e1:knows]->(b:person) WITH * MATCH (b)-[e2:knows]->(c:person)-[e3:workAt]->(d:organisation) RETURN COUNT(*)
-ENUMERATE
---- 1
18

-LOG OpenWedgeKnowsTest3
-STATEMENT MATCH (b:person)<-[e1:knows]-(a:person) WITH a AS k MATCH (k)-[e2:knows]->(c:person),(k)-[e3:knows]->(d:person) RETURN COUNT(*)
-ENUMERATE
---- 1
116

-LOG MultiQueryFourHopKnowsTest
-ENUMERATE
-STATEMENT MATCH (a:person)-[e1:knows]->(b:person)-[e2:knows]->(c:person) WITH c MATCH (c)-[e3:knows]->(d:person)-[e4:knows]->(e:person) RETURN COUNT(*)
---- 1
324

-LOG FilterPushDown
-STATEMENT match (a:person) match (b:person) where a.age=b.age and a.fName <> b.fName and a.fName = 'Dan' return a.fName, b.fName;
---- 1
Dan|Elizabeth
-STATEMENT MATCH (a:person) WITH a.age AS s, a.fName as n MATCH (b:person) WHERE s=b.age and n='Dan' RETURN n,b.fName,s
-ENUMERATE
---- 2
Dan|Dan|20
Dan|Elizabeth|20
-STATEMENT MATCH (a:person) WITH a.age AS s, a.fName as n MATCH (b:person) WHERE s=b.age and n=b.fName RETURN n,b.fName,s
-ENUMERATE
---- 8
Alice|Alice|35
Bob|Bob|30
Carol|Carol|45
Dan|Dan|20
Elizabeth|Elizabeth|20
Farooq|Farooq|25
Greg|Greg|40
Hubert Blaine Wolfeschlegelsteinhausenbergerdorff|Hubert Blaine Wolfeschlegelsteinhausenbergerdorff|83
