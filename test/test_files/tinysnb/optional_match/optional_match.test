-GROUP TinySnbReadTest
-DATASET CSV tinysnb

--

-CASE OptionalMatch

# Note: Correlated optional match test should be enabled once hash join supports generic join key data type.
#-LOG CorrelatedOptionalMatchTest1
#-STATEMENT MATCH (a:person) OPTIONAL MATCH (a)-[:knows]->(b:person) WHERE b.age > a.age RETURN COUNT(*)
#-ENUMERATE
#---- 1
#12

#-LOG CorrelatedOptionalMatchTest2
#-STATEMENT MATCH (a:person)-[:knows]->(b:person) OPTIONAL MATCH (b)-[:knows]->(c:person) WHERE c.age > b.age RETURN COUNT(*)
#-ENUMERATE
#---- 1
#23

#-LOG CorrelatedOptionalMatchTest3
#-STATEMENT MATCH (a:person)-[:knows]->(b:person) OPTIONAL MATCH (a)-[:knows]->(c:person), (b)-[:knows]->(c) RETURN COUNT(*)
#-ENUMERATE
#---- 1
#26

-LOG MultiKeyOptionalMatchTest1
-STATEMENT MATCH (a:person)-[:knows]->(b:person) WHERE a.ID=0 OPTIONAL MATCH (a)-[:knows]->(c:person), (b)-[:knows]->(c) RETURN COUNT(*)
-ENUMERATE
---- 1
6

-LOG MultiKeyOptionalMatchTest2
-STATEMENT MATCH (a:person)-[:knows]->(b:person) OPTIONAL MATCH (a)-[:studyAt]->(c:organisation), (b)-[:studyAt]->(c) RETURN COUNT(*)
-ENUMERATE
---- 1
14

-LOG MixedMatchTest1
-STATEMENT MATCH (a:person) OPTIONAL MATCH (a)-[:knows]->(b:person) MATCH (b)-[:knows]->(c:person) RETURN COUNT(*)
-ENUMERATE
---- 1
36

-LOG MixedMatchTest2
-STATEMENT MATCH (a:person) OPTIONAL MATCH (a)-[:knows]->(b:person) MATCH (b)-[:studyAt]->(c:organisation) RETURN COUNT(*)
-ENUMERATE
---- 1
7

-LOG MixedMatchTest3
-STATEMENT MATCH (a:person) OPTIONAL MATCH (a)-[:knows]->(b:person) WHERE b.fName='Farooq' MATCH (b)<-[:knows]-(c:person) RETURN COUNT(*)
-ENUMERATE
---- 1
1

-LOG MixedMatchTest4
-STATEMENT match (a:person)-[:knows]->(b:person) optional match (a)-[:knows]->(c:person) match (b)-[:knows]->(c) return count(*)
-ENUMERATE
---- 1
24

-LOG MixedMatchHashJoinTest
-STATEMENT MATCH (a:person)-[:knows]->(b:person) OPTIONAL MATCH (b)-[:knows]->(c:person) MATCH (c)-[:knows]->(d:person)-[:knows]->(e:person) RETURN COUNT(*)
-ENUMERATE
---- 1
324

-LOG OptionalReadStringPropertyTest
-STATEMENT MATCH (a:person) WHERE a.fName='Elizabeth' OR a.fName='Hubert Blaine Wolfeschlegelsteinhausenbergerdorff' OPTIONAL MATCH (a)-[:knows]->(b:person) RETURN a.fName, b.fName
-ENUMERATE
---- 3
Elizabeth|Farooq
Elizabeth|Greg
Hubert Blaine Wolfeschlegelsteinhausenbergerdorff|

-LOG OptionalReturnTest
-STATEMENT MATCH (a:person)-[:knows]->(b:person) WHERE a.fName='Alice' OPTIONAL MATCH (b)-[:studyAt]->(c:organisation) RETURN c.orgCode
-ENUMERATE
---- 3


325

-LOG OptionalReturnTest2
-STATEMENT MATCH (a:person) OPTIONAL MATCH (a)-[:knows]->(b:person) WHERE b.fName='Farooq' RETURN a.fName, b.fName
-ENUMERATE
---- 8
Alice|
Bob|
Carol|
Dan|
Elizabeth|Farooq
Farooq|
Greg|
Hubert Blaine Wolfeschlegelsteinhausenbergerdorff|

-LOG OptionalListExtendCountTest
-STATEMENT MATCH (a:person) OPTIONAL MATCH (a)-[:studyAt]->(b:organisation) RETURN a.fName, b.name
-ENUMERATE
---- 8
Alice|ABFsUni
Bob|ABFsUni
Carol|
Dan|
Elizabeth|
Farooq|ABFsUni
Greg|
Hubert Blaine Wolfeschlegelsteinhausenbergerdorff|

-LOG OptionalListExtendTest2
-STATEMENT MATCH (a:person) OPTIONAL MATCH (a)-[:knows]->(b:person)-[:knows]->(c:person) RETURN COUNT(*)
-ENUMERATE
---- 1
40

-LOG OptionalColExtendTest
-STATEMENT MATCH (a:person) OPTIONAL MATCH (a)-[:workAt]->(b:organisation) RETURN COUNT(*)
-ENUMERATE
---- 1
8

-LOG MultipleOptionalCountTest
-STATEMENT MATCH (a:person) OPTIONAL MATCH (a)-[:knows]->(b:person) OPTIONAL MATCH (b)-[:knows]->(c:person) RETURN COUNT(*)
-ENUMERATE
---- 1
41
