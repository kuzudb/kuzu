-GROUP TinySnbReadTest
-DATASET CSV tinysnb

--

-CASE SubqueryExists

-DEBUG_LOG ExistSubqueryTest
-QUERY MATCH (a:person) WHERE EXISTS { MATCH (a)-[:knows]->(b:person) } RETURN COUNT(*)
-ENUMERATE
---- 1
5

-DEBUG_LOG ExistSubqueryTest2
-QUERY MATCH (a:person) WHERE EXISTS { MATCH (a)-[:knows]->(b:person) WHERE b.fName='Farooq' } RETURN COUNT(*)
-ENUMERATE
---- 1
1

-DEBUG_LOG ExistSubqueryTest3
-QUERY MATCH (a:person)-[:knows]->(b:person) WHERE EXISTS { MATCH (a)-[:studyAt]->(c:organisation) } OR b.fName='Greg'  RETURN COUNT(*)
-ENUMERATE
---- 1
7

#-DEBUG_LOG ExistSubqueryTest4
#-QUERY MATCH (a:person) WHERE EXISTS { MATCH (a)-[:knows]->(b:person) WHERE a.fName='Alice' } RETURN COUNT(*)
#-ENUMERATE
#---- 1
#1

-DEBUG_LOG ExistSubqueryTest5
-QUERY MATCH (a:person) WHERE EXISTS { MATCH (a)-[:knows]->(b:person)-[:knows]->(c:person), (a)-[:knows]->(d:person) } RETURN COUNT(*)
-ENUMERATE
---- 1
4

-DEBUG_LOG NotExistSubqueryTest
-QUERY MATCH (a:person) WHERE NOT EXISTS { MATCH (a)-[:knows]->(b:person) } RETURN COUNT(*)
-ENUMERATE
---- 1
3

-DEBUG_LOG ExistSubqueryMultiPartCyclicTest
-QUERY MATCH (a:person) WHERE EXISTS { MATCH (a)-[:knows]->(b:person), (b)-[:knows]->(a) } RETURN COUNT(*)
-ENUMERATE
---- 1
4

-DEBUG_LOG ExistsSubqueryColExtendTest
-QUERY MATCH (a:person) WHERE EXISTS { MATCH (a)-[:studyAt]->(b:organisation) } RETURN COUNT(*)
-ENUMERATE
---- 1
3

-DEBUG_LOG ExistsSubqueryORTest
-QUERY MATCH (a:person) WHERE EXISTS { MATCH (a)-[:studyAt]->(b:organisation) } OR EXISTS { MATCH (a)-[:workAt]->(c:organisation) } RETURN COUNT(*)
-ENUMERATE
---- 1
6

-DEBUG_LOG NestedSubqueryTest
-QUERY MATCH (a:person) WHERE EXISTS { MATCH (a)-[:knows]->(b:person) WHERE EXISTS { MATCH (b)-[:workAt]->(c:organisation) } } RETURN COUNT(*)
-ENUMERATE
---- 1
4

#-DEBUG_LOG ExistSubqueryAliasTest1
#-QUERY MATCH (a:person) WITH a, a.fName AS newName WHERE EXISTS { MATCH (a)-[:knows]->(b:person) WHERE newName='Alice' } RETURN COUNT(*)
#-ENUMERATE
#---- 1
#1

-DEBUG_LOG ExistSubqueryAliasTest2
-QUERY MATCH (a:person) WITH a AS k MATCH (k)-[:knows]->(b:person) WHERE EXISTS { MATCH (k)-[:studyAt]->(c:organisation) } OR b.fName='Greg'  RETURN COUNT(*)
-ENUMERATE
---- 1
7

-DEBUG_LOG ExistSubqueryReturnTest
-QUERY MATCH (a:person) WHERE EXISTS { MATCH (a)-[:knows]->(b:person) } RETURN a.fName
-ENUMERATE
---- 5
Alice
Bob
Carol
Dan
Elizabeth
