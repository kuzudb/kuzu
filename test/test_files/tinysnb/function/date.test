-GROUP TinySnbReadTest
-DATASET CSV tinysnb

--

-CASE FunctionDate

-LOG DateLiteralEqualityComparison
-STATEMENT MATCH (a:person) WHERE a.birthdate = date('1900-1-1') RETURN COUNT(*)
---- 1
2

-LOG StructuredDateArithmeticAddInt
-STATEMENT MATCH (a:person) RETURN a.birthdate + 32
---- 8
1900-02-02
1900-02-02
1940-07-24
1950-08-24
1980-11-27
1980-11-27
1980-11-27
1990-12-29

-LOG IntArithmeticAddStructuredDate
-STATEMENT MATCH (a:person) RETURN 32 + a.birthdate
---- 8
1900-02-02
1900-02-02
1940-07-24
1950-08-24
1980-11-27
1980-11-27
1980-11-27
1990-12-29

-LOG StructuredDateArithmeticAddInterval1
-STATEMENT MATCH (a:person) WHERE a.birthdate <> date('1900-01-01') RETURN a.birthdate + interval('2 years 3 months 4 days')
---- 6
1942-09-26
1952-10-27
1983-01-30
1983-01-30
1983-01-30
1993-03-03

-LOG StructuredDateArithmeticAddInterval2
-STATEMENT MATCH (a:person) WHERE a.birthdate <> date('1900-01-01') RETURN a.birthdate + interval('47 hours 60 minutes')
---- 6
1940-06-24
1950-07-25
1980-10-28
1980-10-28
1980-10-28
1990-11-29

-LOG structuredDateArithmeticSubtractInt
-STATEMENT MATCH (a:person) WHERE a.birthdate <> date('1900-01-01') RETURN a.birthdate - 25
---- 6
1940-05-28
1950-06-28
1980-10-01
1980-10-01
1980-10-01
1990-11-02

-LOG StructuredDateArithmeticSubtractInterval
-STATEMENT MATCH (a:person) WHERE a.birthdate <> date('1900-01-01') RETURN a.birthdate - interval('4 years 11 months 31 days 100 seconds')
---- 6
1935-06-21
1945-07-23
1975-10-26
1975-10-26
1975-10-26
1985-11-26

-LOG StructuredDateArithmeticSubtractDate
-STATEMENT MATCH (a:person) RETURN a.birthdate - date('1920-03-21')
---- 8
-7384
-7384
11081
22134
22134
22134
25818
7398

-LOG StructuredDateMixedArithmeticOperations
-STATEMENT MATCH (a:person) RETURN a.birthdate + 10 - interval('4 years 2 months 3 days') - 20 - date('1912-04-12');
---- 8
-6019
-6019
8763
12446
23499
23499
23499
27183

-LOG StructuredDateConcatenateString
-STATEMENT MATCH (a:person) RETURN concat(concat('Birthdate: ', string(a.birthdate)), ' test')
---- 8
Birthdate: 1900-01-01 test
Birthdate: 1900-01-01 test
Birthdate: 1940-06-22 test
Birthdate: 1950-07-23 test
Birthdate: 1980-10-26 test
Birthdate: 1980-10-26 test
Birthdate: 1980-10-26 test
Birthdate: 1990-11-27 test

-LOG StructuredDateDayNameFuncTest
-STATEMENT MATCH (p:person) RETURN dayname(p.birthdate)
---- 8
Monday
Monday
Saturday
Sunday
Sunday
Sunday
Sunday
Tuesday

-LOG StructuredDateMonthNameFuncTest
-STATEMENT MATCH (p:person) RETURN monthname(p.birthdate)
---- 8
January
January
June
July
October
October
October
November

-LOG StructuredDateLastDayFuncTest
-STATEMENT MATCH (p:person) RETURN last_day(p.birthdate)
---- 8
1900-01-31
1900-01-31
1940-06-30
1950-07-31
1980-10-31
1980-10-31
1980-10-31
1990-11-30

-LOG StructuredDateExtractYearFuncTest
-STATEMENT MATCH (p:person) RETURN date_part("year", p.birthdate)
---- 8
1900
1900
1940
1950
1980
1980
1980
1990

-LOG StructuredDateExtractMonthFuncTest
-STATEMENT MATCH (p:person) RETURN date_part("month", p.birthdate)
---- 8
1
1
6
7
10
10
10
11

-LOG StructuredDateExtractDayFuncTest
-STATEMENT MATCH (p:person) RETURN date_part("Day", p.birthdate)
---- 8
1
1
22
23
26
26
26
27

-LOG StructuredDateExtractDecadeFuncTest
-STATEMENT MATCH (p:person) RETURN date_part("decadE", p.birthdate)
---- 8
190
190
194
195
198
198
198
199

-LOG StructuredDateExtractCenturyFuncTest
-STATEMENT MATCH (p:person) RETURN date_part("cenTury", p.birthdate)
---- 8
19
19
20
20
20
20
20
20

-LOG StructuredDateExtractMillenniumFuncTest
-STATEMENT MATCH (p:person) RETURN date_part("millenniuM", p.birthdate)
---- 8
2
2
2
2
2
2
2
2

-LOG StructuredDateExtractQuarterFuncTest
-STATEMENT MATCH (p:person) RETURN date_part("quarTer", p.birthdate)
---- 8
1
1
2
3
4
4
4
4

-LOG StructuredDateExtractMicroSecondsFuncTest
-STATEMENT MATCH (p:person) RETURN date_part("microseconds", p.birthdate)
---- 8
0
0
0
0
0
0
0
0

-LOG StructuredDateTruncYearFuncTest
-STATEMENT MATCH (p:person) RETURN date_trunc("year", p.birthdate)
---- 8
1900-01-01
1900-01-01
1940-01-01
1950-01-01
1980-01-01
1980-01-01
1980-01-01
1990-01-01

-LOG StructuredDateTruncMonthFuncTest
-STATEMENT MATCH (p:person) RETURN date_trunc("month", p.birthdate)
---- 8
1900-01-01
1900-01-01
1940-06-01
1950-07-01
1980-10-01
1980-10-01
1980-10-01
1990-11-01

-LOG StructuredDateTruncDayFuncTest
-STATEMENT MATCH (p:person) RETURN date_trunc("Day", p.birthdate)
---- 8
1900-01-01
1900-01-01
1940-06-22
1950-07-23
1980-10-26
1980-10-26
1980-10-26
1990-11-27

-LOG StructuredDateTruncDecadeFuncTest
-STATEMENT MATCH (p:person) RETURN date_trunc("decadE", p.birthdate)
---- 8
1900-01-01
1900-01-01
1940-01-01
1950-01-01
1980-01-01
1980-01-01
1980-01-01
1990-01-01

-LOG StructuredDateTruncCenturyFuncTest
-STATEMENT MATCH (p:person) RETURN date_trunc("cenTury", p.birthdate)
---- 8
1900-01-01
1900-01-01
1900-01-01
1900-01-01
1900-01-01
1900-01-01
1900-01-01
1900-01-01

-LOG StructuredDateTruncMillenniumFuncTest
-STATEMENT MATCH (p:person) RETURN date_trunc("millenniuM", p.birthdate)
---- 8
1000-01-01
1000-01-01
1000-01-01
1000-01-01
1000-01-01
1000-01-01
1000-01-01
1000-01-01

-LOG StructuredDateTruncQuarterFuncTest
-STATEMENT MATCH (p:person) RETURN date_trunc("quarTer", p.birthdate)
---- 8
1900-01-01
1900-01-01
1940-04-01
1950-07-01
1980-10-01
1980-10-01
1980-10-01
1990-10-01

-LOG StructuredDateTruncSecondFuncTest
-STATEMENT MATCH (p:person) RETURN date_trunc("second", p.birthdate)
---- 8
1900-01-01
1900-01-01
1940-06-22
1950-07-23
1980-10-26
1980-10-26
1980-10-26
1990-11-27

-LOG StructuredDateGreatestFuncTest
-STATEMENT MATCH (p:person) RETURN greatest(p.birthdate, date("1980-10-02"))
---- 8
1980-10-02
1980-10-02
1980-10-02
1980-10-02
1980-10-26
1980-10-26
1980-10-26
1990-11-27

-LOG StructuredDateLeastFuncTest
-STATEMENT MATCH (p:person) RETURN least(p.birthdate, date("1980-10-02"))
---- 8
1900-01-01
1900-01-01
1940-06-22
1950-07-23
1980-10-02
1980-10-02
1980-10-02
1980-10-02

-LOG StructuredIntMakeDateTest
-STATEMENT MATCH (o:organisation) RETURN make_date(o.orgCode * 3, o.ID, 20)
---- 3
0975-01-20
2802-04-20
2472-06-20

-LOG StructuredDateComparisonAcrossNodesNonEquality
-STATEMENT MATCH (a:person)-[e1:knows]->(b:person) WHERE a.birthdate <> b.birthdate RETURN COUNT(*)
---- 1
10

-LOG StructuredDateComparisonAcrossNodesLessThan
-STATEMENT MATCH (a:person)-[e1:knows]->(b:person) WHERE a.birthdate < b.birthdate RETURN COUNT(*)
---- 1
5

-LOG StructuredDateComparisonAcrossNodesLessThanOrEqualTo
-STATEMENT MATCH (a:person)-[e1:knows]->(b:person) WHERE a.birthdate <= b.birthdate RETURN COUNT(*)
---- 1
9

-LOG StructuredDateComparisonAcrossNodesGreaterThan
-STATEMENT MATCH (a:person)-[e1:knows]->(b:person) WHERE a.birthdate > b.birthdate RETURN COUNT(*)
---- 1
5

-LOG DateLiteralGreaterThanComparison
-STATEMENT MATCH (a:person)-[e1:knows]->(b:person) WHERE b.birthdate > date('1970-09-11') RETURN COUNT(*)
-ENUMERATE
---- 1
2

-LOG DateLiteralLessThanComparison
-STATEMENT MATCH (a:person)-[e1:knows]->(b:person) WHERE e1.date < date('1960-09-11') RETURN COUNT(*)
-ENUMERATE
---- 1
6

-LOG StructuredDateComparisonAcrossNodesEquality
-STATEMENT MATCH (a:person)-[e1:knows]->(b:person) WHERE a.birthdate = b.birthdate RETURN COUNT(*)
-ENUMERATE
---- 1
4

-LOG StructuredDateComparisonAcrossNodesGreaterThanOrEqualTo
-STATEMENT MATCH (a:person)-[e1:knows]->(b:person) WHERE a.birthdate >= b.birthdate RETURN COUNT(*)
-ENUMERATE
---- 1
9

-LOG StructuredDateComparisonAcrossEdges
-STATEMENT MATCH (a:person)<-[e1:knows]-(b:person)-[e2:knows]->(c:person) WHERE e1.date = e2.date AND id(a) <> id(c) RETURN COUNT(*)
-ENUMERATE
---- 1
10

#  For the below query, these are the 3 edges that should pass the filter: (1) 5, 2,1950-05-14 (5's birthday is 1950-7-23)
#  (2-3) 7,8,1905-12-12 and 7,9,1905-12-12 (7's birthday is 1980-10-26)
-LOG StructuredDateComparisonAcrossEdgeAndNode
-STATEMENT MATCH (a:person)-[e1:knows]->(b:person) WHERE a.birthdate > e1.date  RETURN COUNT(*)
-ENUMERATE
---- 1
3
