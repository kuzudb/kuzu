-DATASET CSV empty

--

-CASE LongStringError

-LOG LongStringSuccess
-STATEMENT create node table person0 (ID SERIAL, fName STRING, PRIMARY KEY (ID));
---- ok
-STATEMENT copy person0 from '${KUZU_ROOT_DIRECTORY}/test/answers/long_string_valid.csv';
---- ok
-STATEMENT match (p:person0) return p.fName;
---- 1
<FILE>:long_string_valid.csv

-LOG LongStringError
-STATEMENT create node table person1 (ID SERIAL, fName STRING, PRIMARY KEY (ID));
---- ok
-STATEMENT copy person1 from '${KUZU_ROOT_DIRECTORY}/test/answers/long_string_invalid.csv';
---- ok
-STATEMENT match (p:person1) return p.fName;
---- 2
<FILE>:long_string_invalid.csv

-CASE LongStringPKError

-LOG LongStringPKSuccess
-STATEMENT create node table person0 (ID STRING, PRIMARY KEY (ID));
---- ok
-STATEMENT copy person0 from '${KUZU_ROOT_DIRECTORY}/test/answers/long_string_valid.csv';
---- ok
-STATEMENT match (p:person0) return p.ID;
---- 1
<FILE>:long_string_valid.csv

-LOG LongStringPKError
-STATEMENT create node table person1 (ID STRING, PRIMARY KEY (ID));
---- ok
-STATEMENT copy person1 from '${KUZU_ROOT_DIRECTORY}/test/answers/long_string_invalid.csv';
---- ok
-STATEMENT match (p:person1) return p.ID;
---- 2
<FILE>:long_string_invalid.csv
