-GROUP CopyPartialColumnsTest
-DATASET CSV empty

--

-CASE RelPartialColumnsTest

-STATEMENT CREATE NODE TABLE person (ID INt64, fName StRING, gender INT64, isStudent BoOLEAN, isWorker BOOLEAN,
                                age INT64, eyeSight DOUBLE, birthdate DATE, registerTime TIMESTAMP,
                                lastJobDuration interval, workedHours INT64[], usedNames STRING[],
                                courseScoresPerTerm INT64[][], grades INT64[4], height float, PRIMARY KEY (ID));
---- ok
-STATEMENT COPY person FROM "${KUZU_ROOT_DIRECTORY}/dataset/tinysnb/vPerson.csv" (Header=True) ;
---- ok
-STATEMENT CREATE REL TABLE knows1 (FROM person TO person, nullDouble DOUBLE, date DATE, meetTime TIMESTAMP,
     validInterval INTERVAL, comments STRING[], summary STRUCT(locations STRING[],
    transfer STRUCT(day DATE, amount INT64[])), notes UNION(firstmet DATE, type INT16, comment STRING), MANY_MANY);
---- ok
-STATEMENT COPY knows1 (date, meetTime, validInterval, comments, summary, notes) FROM "${KUZU_ROOT_DIRECTORY}/dataset/tinysnb/eKnows.csv" ;
---- ok
-STATEMENT MATCH (p:person)-[e:knows1]->(:person) WHERE p.ID = 2 RETURN e.*;
---- 3
|1950-05-14|1946-08-25 19:07:22|00:23:00|[fwehu9h9832wewew,23u9h989sdfsss]|{locations: ['paris'], transfer: {day: 2011-05-01, amount: [2000,5340]}}|cool stuff found
|1950-05-14|2012-12-11 20:07:22|20 years 30 days 48:00:00|[fwh9y81232uisuiehuf,ewnuihxy8dyf232]|{locations: ['vancouver'], transfer: {day: 2020-01-01, amount: [120,50]}}|matthew perry
|2021-06-30|1946-08-25 19:07:22|10 years 5 months 13:00:00.000024|[2huh9y89fsfw23,23nsihufhw723]|{locations: ['paris'], transfer: {day: 2000-01-01, amount: [20,5000]}}|4
-STATEMENT CREATE REL TABLE knows2 (FROM person TO person,notes UNION(firstmet DATE, type INT16, comment STRING),
                meetTime TIMESTAMP,nullDouble DOUBLE, date DATE, validInterval INTERVAL, comments STRING[],
                summary STRUCT(locations STRING[], transfer STRUCT(day DATE, amount INT64[])), MANY_MANY);
---- ok
-STATEMENT COPY knows2 (date, meetTime, validInterval, comments, summary, notes) FROM "${KUZU_ROOT_DIRECTORY}/dataset/tinysnb/eKnows.csv" ;
---- ok
-STATEMENT MATCH (p:person)-[e:knows2]->(:person) WHERE p.ID = 2 RETURN e.*;
---- 3
4|1946-08-25 19:07:22||2021-06-30|10 years 5 months 13:00:00.000024|[2huh9y89fsfw23,23nsihufhw723]|{locations: ['paris'], transfer: {day: 2000-01-01, amount: [20,5000]}}
cool stuff found|1946-08-25 19:07:22||1950-05-14|00:23:00|[fwehu9h9832wewew,23u9h989sdfsss]|{locations: ['paris'], transfer: {day: 2011-05-01, amount: [2000,5340]}}
matthew perry|2012-12-11 20:07:22||1950-05-14|20 years 30 days 48:00:00|[fwh9y81232uisuiehuf,ewnuihxy8dyf232]|{locations: ['vancouver'], transfer: {day: 2020-01-01, amount: [120,50]}}
-STATEMENT CREATE REL TABLE knows3 (FROM person TO person, a INT16, notes UNION(firstmet DATE, type INT16, comment STRING),
                meetTime TIMESTAMP,nullDouble DOUBLE, date DATE, validInterval INTERVAL, comments STRING[],
                summary STRUCT(locations STRING[], transfer STRUCT(day DATE, amount INT64[])), MANY_MANY);
---- ok
-STATEMENT COPY knows3 (meetTime, date, validInterval, comments, summary) FROM "${KUZU_ROOT_DIRECTORY}/dataset/tinysnb/eKnows.csv" ;
---- error
Binder exception: Number of columns mismatch. Expected 7 but got 8.
-STATEMENT COPY knows3 (meetTime, date, validInterval, comments, summary, dummy) FROM "${KUZU_ROOT_DIRECTORY}/dataset/tinysnb/eKnows.csv" ;
---- error
Binder exception: Table knows3 does not contain column dummy.

-CASE NodePartialColumnsTest
-LOG AllPartialColumns
-STATEMENT CREATE NODE TABLE tableOfTypes2 (id INT64, int64Column INT64, doubleColumn DOUBLE, booleanColumn BOOLEAN,
                                            dateColumn DATE, timestampColumn TIMESTAMP, stringColumn STRING,
                                            listOfInt INT64[],
                                            PRIMARY KEY (id));
---- ok
-STATEMENT COPY tableOfTypes2 (id, int64Column, doubleColumn, booleanColumn, dateColumn, timestampColumn, stringColumn,
    listOfInt) FROM "${KUZU_ROOT_DIRECTORY}/dataset/copy-test/node/csv/types_50k.csv" (HEADER=true);
---- ok
-STATEMENT MATCH (row:tableOfTypes2) WHERE row.id >= 20 AND row.id <= 24 RETURN row.*;
---- 5
20|0|57.579280|True|1731-09-26|1731-09-26 03:30:08|OdM|[93,,86,37]
21|7|64.630960|False|1307-01-26|1307-01-26 03:31:08|AjbxHQThEtDDlOjbzMjCQSXlvGQEjcFLykESrnFHwPKX|[]
22|71|37.963386|True|1455-07-26|1455-07-26 03:07:03|dRvHHdyNXYfSUcicaxBoQEKQUfgex|[72,,45,,81]
23|58|42.774957|False|1181-10-16|1181-10-16 18:19:43|ISImRVpUjynGMFRQyYmeIUVjM|
24|75|53.813224|False|1942-10-24|1942-10-24 09:30:16|naDlQ|[97,91,28,26,]

-LOG PartialColumns
-STATEMENT CREATE NODE TABLE tableOfTypes3 (id INT64, int64Column INT64, doubleColumn DOUBLE, booleanColumn BOOLEAN,
        nullInt64Column INT64, nullDoubleColumn DOUBLE, nullBooleanColumn BOOLEAN,dateColumn DATE,
        timestampColumn TIMESTAMP, stringColumn STRING, nullDateColumn DATE, nullTimestampColumn TIMESTAMP,
        nullStringColumn STRING, listOfInt INT64[], nullListOfInt INT64[], PRIMARY KEY (id));
---- ok
-STATEMENT COPY tableOfTypes3 (id, int64Column, doubleColumn, booleanColumn, dateColumn, timestampColumn, stringColumn,
      listOfInt) FROM "${KUZU_ROOT_DIRECTORY}/dataset/copy-test/node/csv/types_50k.csv" (HEADER=true);
---- ok
-STATEMENT MATCH (row:tableOfTypes3) WHERE row.id >= 20 AND row.id <= 24 RETURN row.*;
---- 5
20|0|57.579280|True||||1731-09-26|1731-09-26 03:30:08|OdM||||[93,,86,37]|
21|7|64.630960|False||||1307-01-26|1307-01-26 03:31:08|AjbxHQThEtDDlOjbzMjCQSXlvGQEjcFLykESrnFHwPKX||||[]|
22|71|37.963386|True||||1455-07-26|1455-07-26 03:07:03|dRvHHdyNXYfSUcicaxBoQEKQUfgex||||[72,,45,,81]|
23|58|42.774957|False||||1181-10-16|1181-10-16 18:19:43|ISImRVpUjynGMFRQyYmeIUVjM|||||
24|75|53.813224|False||||1942-10-24|1942-10-24 09:30:16|naDlQ||||[97,91,28,26,]|

-LOG PartialColumnsReorder
-STATEMENT CREATE NODE TABLE tableOfTypes4 (nullDateColumn DATE, booleanColumn BOOLEAN, stringColumn STRING,
                                            int64Column INT64, nullBooleanColumn BOOLEAN, nullStringColumn STRING,
                                            timestampColumn TIMESTAMP, nullDoubleColumn DOUBLE, nullInt64Column INT64,
                                            dateColumn DATE, nullListOfInt INT64[], doubleColumn DOUBLE,
                                            listOfInt INT64[], id INT64, nullTimestampColumn TIMESTAMP,
                                            PRIMARY KEY (id));
---- ok
-STATEMENT COPY tableOfTypes4 (id, int64Column, doubleColumn, booleanColumn, dateColumn, timestampColumn, stringColumn,
    listOfInt) FROM "${KUZU_ROOT_DIRECTORY}/dataset/copy-test/node/csv/types_50k.csv" (HEADER=true);
---- ok
-STATEMENT MATCH (row:tableOfTypes4) WHERE row.id >= 20 AND row.id <= 24 RETURN row.*;
---- 5
|False|AjbxHQThEtDDlOjbzMjCQSXlvGQEjcFLykESrnFHwPKX|7|||1307-01-26 03:31:08|||1307-01-26||64.630960|[]|21|
|False|ISImRVpUjynGMFRQyYmeIUVjM|58|||1181-10-16 18:19:43|||1181-10-16||42.774957||23|
|False|naDlQ|75|||1942-10-24 09:30:16|||1942-10-24||53.813224|[97,91,28,26,]|24|
|True|OdM|0|||1731-09-26 03:30:08|||1731-09-26||57.579280|[93,,86,37]|20|
|True|dRvHHdyNXYfSUcicaxBoQEKQUfgex|71|||1455-07-26 03:07:03|||1455-07-26||37.963386|[72,,45,,81]|22|

-LOG PartialCopyException1
-STATEMENT CREATE NODE TABLE tableOfTypes6 (id INT64, int64Column INT64, doubleColumn DOUBLE, booleanColumn BOOLEAN,
                                            dateColumn DATE, timestampColumn TIMESTAMP, stringColumn STRING,
                                            listOfInt INT64[],
                                            PRIMARY KEY (id));
---- ok
-STATEMENT COPY tableOfTypes6 (id, int64Column, doubleColumn, dateColumn, timestampColumn, stringColumn,
    listOfInt) FROM "${KUZU_ROOT_DIRECTORY}/dataset/copy-test/node/csv/types_50k.csv" (HEADER=true);
---- error
Binder exception: Number of columns mismatch. Expected 7 but got 8.

-LOG PartialCopyException2
-STATEMENT CREATE NODE TABLE tableOfTypes7 (id INT64, int64Column INT64, doubleColumn DOUBLE, booleanColumn BOOLEAN,
                                            dateColumn DATE, timestampColumn TIMESTAMP, stringColumn STRING,
                                            listOfInt INT64[],
                                            PRIMARY KEY (id));
---- ok
-STATEMENT COPY tableOfTypes7 (id, int64Column, doubleColumn, nonexistentColumn, dateColumn, timestampColumn,
    stringColumn, listOfInt) FROM "${KUZU_ROOT_DIRECTORY}/dataset/copy-test/node/csv/types_50k.csv" (HEADER=true);
---- error
Binder exception: Table tableOfTypes7 does not contain column nonexistentColumn.

-LOG PartialCopyException3
-STATEMENT CREATE NODE TABLE tableOfTypes8 (id INT64, int64Column INT64, doubleColumn DOUBLE, booleanColumn BOOLEAN,
                                            dateColumn DATE, timestampColumn TIMESTAMP, stringColumn STRING,
                                            listOfInt INT64[], extraColumn BOOLEAN,
                                            PRIMARY KEY (id));
---- ok
-STATEMENT COPY tableOfTypes8 (id, int64Column, doubleColumn, booleanColumn, dateColumn, timestampColumn, stringColumn,
    listOfInt, extraColumn) FROM "${KUZU_ROOT_DIRECTORY}/dataset/copy-test/node/csv/types_50k.csv" (HEADER=true);
---- error
Binder exception: Number of columns mismatch. Expected 9 but got 8.

-LOG PartialCopyException4
-STATEMENT CREATE NODE TABLE tableOfTypes9 (id INT64, int64Column INT64, doubleColumn DOUBLE, booleanColumn BOOLEAN,
                                            dateColumn DATE, timestampColumn TIMESTAMP, stringColumn STRING,
                                            listOfInt INT64[],
                                            PRIMARY KEY (id));
---- ok
-STATEMENT COPY tableOfTypes9 (id, int64Column, doubleColumn, booleanColumn, booleanColumn, dateColumn, timestampColumn,
    stringColumn, listOfInt) FROM "${KUZU_ROOT_DIRECTORY}/dataset/copy-test/node/csv/types_50k.csv" (HEADER=true);
---- error
Binder exception: Detect duplicate column name booleanColumn during COPY.

-LOG PartialCopySerial
-STATEMENT CREATE NODE TABLE tableOfTypes10 (id INT64, int64Column INT64, doubleColumn DOUBLE, booleanColumn BOOLEAN,
                                             dateColumn DATE, timestampColumn TIMESTAMP, stringColumn STRING,
                                             listOfInt INT64[], serialPk SERIAL,
                                             PRIMARY KEY (serialPk));
---- ok
-STATEMENT COPY tableOfTypes10 (id, int64Column, doubleColumn, booleanColumn, dateColumn, timestampColumn, stringColumn,
    listOfInt) FROM "${KUZU_ROOT_DIRECTORY}/dataset/copy-test/node/csv/types_50k.csv" (HEADER=true);
---- ok
-STATEMENT MATCH (row:tableOfTypes10) WHERE row.id >= 20 AND row.id <= 24 RETURN row.*;
---- 5
20|0|57.579280|True|1731-09-26|1731-09-26 03:30:08|OdM|[93,,86,37]|20
21|7|64.630960|False|1307-01-26|1307-01-26 03:31:08|AjbxHQThEtDDlOjbzMjCQSXlvGQEjcFLykESrnFHwPKX|[]|21
22|71|37.963386|True|1455-07-26|1455-07-26 03:07:03|dRvHHdyNXYfSUcicaxBoQEKQUfgex|[72,,45,,81]|22
23|58|42.774957|False|1181-10-16|1181-10-16 18:19:43|ISImRVpUjynGMFRQyYmeIUVjM||23
24|75|53.813224|False|1942-10-24|1942-10-24 09:30:16|naDlQ|[97,91,28,26,]|24

-LOG PartialCopyException5
-STATEMENT CREATE NODE TABLE tableOfTypes11 (id INT64, int64Column INT64, doubleColumn DOUBLE, booleanColumn BOOLEAN,
                                             dateColumn DATE, timestampColumn TIMESTAMP, stringColumn STRING,
                                             listOfInt INT64[], nullPk INT64,
                                             PRIMARY KEY (nullPk));
---- ok
-STATEMENT COPY tableOfTypes11 (id, int64Column, doubleColumn, booleanColumn, dateColumn, timestampColumn, stringColumn,
    listOfInt) FROM "${KUZU_ROOT_DIRECTORY}/dataset/copy-test/node/csv/types_50k.csv" (HEADER=true);
---- error
Copy exception: Found NULL, which violates the non-null constraint of the primary key column.

-LOG PartialParquet
-STATEMENT CREATE NODE TABLE tableOfTypes12 (nullStructColumn STRUCT(ID int64, name STRING), booleanColumn BOOLEAN,
                                             doubleColumn DOUBLE, listOfInt64 INT64[], nullListOfListOfInt64 INT64[][],
                                             listOfString STRING[], int64Column INT64, nullId INT64,
                                             nullInt64Column INT64, nullDateColumn DATE, nullListOfInt64 INT64[],
                                             nullBooleanColumn BOOLEAN, dateColumn DATE, listOfListOfInt64 INT64[][],
                                             id INT64, nullDoubleColumn DOUBLE, nullListOfString STRING[],
                                             structColumn STRUCT(ID int64, name STRING), stringColumn STRING,
                                             nullStringColumn STRING,
                                             PRIMARY KEY (id));
---- ok
-STATEMENT COPY tableOfTypes12 (id, int64Column, doubleColumn, booleanColumn, dateColumn, stringColumn, listOfInt64,
listOfString, listOfListOfInt64, structColumn) FROM
"${KUZU_ROOT_DIRECTORY}/dataset/copy-test/node/parquet/types_50k*.parquet" (HEADER=true);
---- ok
-STATEMENT MATCH (row:tableOfTypes12) WHERE row.id >= 20 AND row.id <= 24 RETURN row.*;
---- 5
|False|42.774957|[16,38,98,61,2]||[EzPWolZ2iCsga46o,lbhcKq7DDPeiX,yaxsyrbzolAyVWlxj,5Rlse62CKuIitVf4,yKOx0P]|58||||||2043-08-19|[[95,209,75,7],[197],[69,244],[164,160,153,125]]|23|||{ID: 682, name: 06SBnT}|ISImRVpUjynGMFRQyYmeIUVjM|
|False|53.813224|[94,17,22]||[gVYovI30hQyC,b6OpP]|75||||||1971-12-05|[[81,66],[255,44],[37]]|24|||{ID: 185, name: 7xymBThq}|naDlQ|
|False|64.630960|[53,44,76,78]||[V0yNTz60W2i4J,LN3F2erCELm]|7||||||2090-07-13|[[191,62],[64,259,183,130,116],[49,29,222,249,128],[222,169,22,80],[206,59]]|21|||{ID: 956, name: GNX5sv9V}|AjbxHQThEtDDlOjbzMjCQSXlvGQEjcFLykESrnFHwPKX|
|True|37.963386|[74]||[GOLV1]|71||||||2048-04-24|[[139,156,218],[148,187,62],[158,118],[297,151]]|22|||{ID: 838, name: gRdEkZSI8qQ7dIH}|dRvHHdyNXYfSUcicaxBoQEKQUfgex|
|True|57.579280|[85,11,98,6]||[wl7evae,lLtQIMJI,vNvYnjt27]|0||||||2094-08-19|[[131,129]]|20|||{ID: 717, name: 3oOf}|OdM|
-STATEMENT CREATE NODE TABLE tableOfTypes13 (nullStructColumn STRUCT(ID int64, name STRING), booleanColumn BOOLEAN,
                                             doubleColumn DOUBLE, listOfInt64 INT64[], nullListOfListOfInt64 INT64[][],
                                             listOfString STRING[], int64Column INT64, nullId INT64,
                                             nullInt64Column INT64, nullDateColumn DATE, nullListOfInt64 INT64[],
                                             nullBooleanColumn BOOLEAN, dateColumn DATE, listOfListOfInt64 INT64[][],
                                             id INT64, nullDoubleColumn DOUBLE, nullListOfString STRING[],
                                             structColumn STRUCT(ID int64, name STRING), stringColumn STRING,
                                             nullStringColumn STRING,
                                             PRIMARY KEY (id));
---- ok
-STATEMENT COPY tableOfTypes12 (id, dateColumn, doubleColumn, booleanColumn, int64Column, stringColumn, listOfInt64,
listOfString, listOfListOfInt64, structColumn) FROM
"${KUZU_ROOT_DIRECTORY}/dataset/copy-test/node/parquet/types_50k*.parquet" (HEADER=true);
---- error
Binder exception: Column `dateColumn` type mismatch. Expected DATE but got INT64.
