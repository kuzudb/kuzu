-NAME Agg1
-QUERY MATCH (u:User)-[:LivesIn]->(c:City) RETURN c.name, COUNT(*);
---- 3
Guelph|1
Kitchener|1
Waterloo|2

-NAME Agg2
-QUERY MATCH (u:User)-[:LivesIn]->(c:City) RETURN distinct c.name
---- 3
Waterloo
Kitchener
Guelph

-NAME Limit1
-QUERY MATCH (u:User) RETURN u.name ORDER BY u.age DESC LIMIT 3;
---- 3
Zhang
Karissa
Adam

-NAME Limit2
-QUERY MATCH (u:User) RETURN u.name LIMIT 1;
---- 1
Adam

-NAME Match1
-QUERY MATCH (a:User) RETURN a;
---- 4
Adam|30
Karissa|40
Zhang|50
Noura|25

-NAME OptionalMatch1
-QUERY MATCH (u:User) OPTIONAL MATCH (u)-[:Follows]->(u1:User) RETURN u.name, u1.name;
---- 5
Adam|Karissa
Adam|Zhang
Karissa|Zhang
Zhang|Noura
Noura|

-NAME OrderBy1
-QUERY MATCH (u:User) RETURN u.name, u.age ORDER BY u.age;
---- 4
Noura|25
Adam|30
Karissa|40
Zhang|50

-NAME OrderBy2
-QUERY MATCH (u:User)-[:LivesIn]->(c:City) WHERE c.name = "Waterloo" RETURN u.name, u.age ORDER BY u.age DESC;
---- 2
Karissa|40
Adam|30

-NAME Skip1
-QUERY MATCH (u:User) RETURN u.name ORDER BY u.age SKIP 2;
---- 2
Karissa
Zhang

-NAME Skip2
-QUERY MATCH (u:User) RETURN u.name SKIP 1;
---- 3
Karissa
Noura
Zhang

-NAME Union1
-QUERY MATCH (u1:User)-[:LivesIn]->(c1:City) WHERE c1.name = "Waterloo" RETURN u1.name UNION ALL MATCH (u2:User)-[:LivesIn]->(c2:City) WHERE c2.name = "Kitchener" RETURN u2.name;
---- 3
Karissa
Adam
Zhang

-NAME Union2
-QUERY MATCH (u1:User)-[:Follows]->(u2:User) WHERE u2.name = 'Zhang' RETURN u1.age UNION ALL MATCH (u3:User)-[:Follows]->(u4:User) WHERE u4.name = 'Karissa' RETURN u3.age;
---- 3
30
40
30

-NAME Unwind
-QUERY UNWIND ["Amy", "Bob", "Carol"] AS x RETURN 'name' as name, x;
---- 3
name|Amy
name|Bob
name|Carol

-NAME Cyclic
-QUERY MATCH (a:User)-[:Follows]->(b:User)-[:Follows]->(c:User), (a)-[:Follows]->(c) RETURN COUNT(*);
---- 1
1
