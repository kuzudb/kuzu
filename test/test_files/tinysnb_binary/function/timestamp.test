-DATASET CSV tinysnb

--

-CASE FunctionTimestamp

-LOG TimestampLiteralEqualityComparison
-STATEMENT MATCH (a:person) WHERE a.registerTime = timestamp('1976-12-23 11:21:42') RETURN COUNT(*)
---- 1
1
-STATEMENT MATCH (a:person) WHERE a.registerTime = cast('1976-12-23 11:21:42.01', "TIMESTAMP_SEC") RETURN a.registerTime
---- 1
1976-12-23 11:21:42
-STATEMENT MATCH (a:person) WHERE a.registerTime = cast('1972-07-31 13:22:30.678559', "TIMESTAMP_MS") RETURN a.registerTime
---- 0
-STATEMENT MATCH (a:person) WHERE a.registerTime = cast('1972-07-31 13:22:30.678559', "TIMESTAMP_NS") RETURN a.registerTime
---- 1
1972-07-31 13:22:30.678559
-STATEMENT MATCH (a:person) WHERE a.registerTime = cast('1972-07-31 13:22:30.678559', "TIMESTAMP_TZ") RETURN a.registerTime
---- 1
1972-07-31 13:22:30.678559
-STATEMENT RETURN cast('1972-07-31 13:22:30.678559', "TIMESTAMP_TZ") = cast('1972-07-31 13:22:30.678559', "TIMESTAMP_NS");
---- 1
True
-STATEMENT RETURN cast('1972-07-31 13:22:30.678559', "TIMESTAMP") = cast('1972-07-31 13:22:30.678559123', "TIMESTAMP_NS");
---- 1
True
-STATEMENT RETURN cast('1972-07-31 13:22:30.678559', "TIMESTAMP_MS") = cast('1972-07-31 13:22:30.678559123', "TIMESTAMP_S");
---- 1
False
-STATEMENT RETURN cast('1972-07-31 13:22:30.678559', "TIMESTAMP_MS") = cast('1972-07-31 13:22:30.678559123', "TIMESTAMP_NS");
---- 1
False


-LOG TimestampDateNotEqual
-STATEMENT MATCH (a:person) WHERE date_trunc("daY", a.registerTime) <> date('1976-12-23') RETURN COUNT(*)
---- 1
6

-LOG TimestampDateGreaterThan
-STATEMENT MATCH (a:person) WHERE a.registerTime > date('1976-12-23') RETURN COUNT(*)
---- 1
6
-STATEMENT MATCH (a:person) WHERE cast(a.registerTime, "TIMESTAMP_TZ") > date('1972-07-31') RETURN COUNT(*)
---- 1
7

-LOG TimestampDateGreaterThanEqual
-STATEMENT MATCH (a:person) WHERE a.registerTime >= date('1976-12-23') RETURN COUNT(*)
---- 1
6
-STATEMENT RETURN cast("1972-07-31 00:00:00.00012", "TIMESTAMP_MS") >= date('1972-07-31');
---- 1
True

-LOG TimestampDateLessThan
-STATEMENT MATCH (a:person) WHERE a.registerTime < date('1976-12-23') RETURN COUNT(*)
---- 1
2
-STATEMENT MATCH (a:person) WHERE cast(a.registerTime, "TIMESTAMP_NS") < date('1972-07-31') RETURN COUNT(*)
---- 1
1

-LOG TimestampDateLessThanEqual
-STATEMENT MATCH (a:person) WHERE a.registerTime <= date('1976-12-23') RETURN COUNT(*)
---- 1
2
-STATEMENT RETURN cast("1972-07-31 00:00:00.00012", "TIMESTAMP_SEC") <= date('1972-07-31');
---- 1
True

-LOG TimestampArithmeticAddInterval1
-STATEMENT MATCH (a:person) RETURN a.registerTime + interval('47 hours 30 minutes 30 seconds')
---- 8
1911-08-22 02:02:51
1972-08-02 12:53:00.678559
1976-12-25 04:12:12
1976-12-25 10:52:12
2008-11-05 14:56:00.000526
2011-08-22 10:56:00
2023-02-23 12:56:00
2031-12-02 11:56:00
-STATEMENT MATCH (a:person) RETURN cast(a.registerTime, "TIMESTAMP_SEC") + interval('47 hours 30 minutes 30 seconds')
---- 8
1911-08-22 02:02:51
1972-08-02 12:53:00
1976-12-25 04:12:12
1976-12-25 10:52:12
2008-11-05 14:56:00
2011-08-22 10:56:00
2023-02-23 12:56:00
2031-12-02 11:56:00


-LOG TimestampArithmeticAddInterval2
-STATEMENT MATCH (a:person) RETURN a.registerTime + interval('2 years 3 days 34 h 28 minutes 300 milliseconds 20 us')
---- 8
1913-08-24 13:00:21.30002
1974-08-04 23:50:30.978579
1978-12-27 15:09:42.30002
1978-12-27 21:49:42.30002
2010-11-08 01:53:30.300546
2013-08-24 21:53:30.30002
2025-02-25 23:53:30.30002
2033-12-04 22:53:30.30002
-STATEMENT MATCH (a:person) RETURN cast(a.registerTime, "TIMESTAMP_MS") + interval('2 years 3 days 34 h 28 minutes 300 milliseconds 20 us')
---- 8
1913-08-24 13:00:21.30002
1974-08-04 23:50:30.97802
1978-12-27 15:09:42.30002
1978-12-27 21:49:42.30002
2010-11-08 01:53:30.30002
2013-08-24 21:53:30.30002
2025-02-25 23:53:30.30002
2033-12-04 22:53:30.30002

-LOG TimestampArithmeticSubtractInterval
-STATEMENT MATCH (a:person) RETURN a.registerTime - interval('12 years 7 months 10 days 20 h 30 m 100 us')
---- 8
1899-01-09 06:02:20.9999
1959-12-20 16:52:30.678459
1964-05-12 08:11:41.9999
1964-05-12 14:51:41.9999
1996-03-23 18:55:30.000426
1999-01-09 14:55:29.9999
2010-07-10 16:55:29.9999
2019-04-19 15:55:29.9999
-STATEMENT MATCH (a:person) RETURN cast(a.registerTime, "TIMESTAMP_NS") - interval('12 years 7 months 10 days 20 h 30 m 100 us')
---- 8
1899-01-09 06:02:20.9999
1959-12-20 16:52:30.678459
1964-05-12 08:11:41.9999
1964-05-12 14:51:41.9999
1996-03-23 18:55:30.000426
1999-01-09 14:55:29.9999
2010-07-10 16:55:29.9999
2019-04-19 15:55:29.9999

-LOG TimestampArithmeticSubtractTimestamp
-STATEMENT MATCH (a:person) RETURN a.registerTime - timestamp('2013-01-02 14:22:31.45612')
---- 8
-37026 days -11:50:10.45612
-14765 days -01:00:00.777561
-13159 days -09:40:49.45612
-13159 days -03:00:49.45612
-1520 days -22:57:01.455594
-501 days -02:57:01.45612
3701 days 23:02:58.54388
6905 days 22:02:58.54388
-STATEMENT MATCH (a:person) RETURN cast(a.registerTime, "TIMESTAMP_TZ") - timestamp('2013-01-02 14:22:31.45612')
---- 8
-37026 days -11:50:10.45612
-14765 days -01:00:00.777561
-13159 days -09:40:49.45612
-13159 days -03:00:49.45612
-1520 days -22:57:01.455594
-501 days -02:57:01.45612
3701 days 23:02:58.54388
6905 days 22:02:58.54388

-LOG TimestampMixedArithmeticOperations
-STATEMENT MATCH (a:person) RETURN a.registerTime + interval('2 hours 48 minutes 1000 seconds') - interval('188 days 48 hours') - timestamp('1976-01-02 13:44:12')
---- 8
-23701 days -08:07:11
-1439 days -21:17:01.321441
165 days 18:02:10
166 days 00:42:10
11804 days 04:45:58.000526
12824 days 00:45:58
17027 days 02:45:58
20231 days 01:45:58
-STATEMENT MATCH (a:person) RETURN cast(a.registerTime, "TIMESTAMP_SEC") + interval('2 hours 48 minutes 1000 seconds') - interval('188 days 48 hours') - timestamp('1976-01-02 13:44:12')
---- 8
-23701 days -08:07:11
-1439 days -21:17:02
165 days 18:02:10
166 days 00:42:10
11804 days 04:45:58
12824 days 00:45:58
17027 days 02:45:58
20231 days 01:45:58

-LOG TimestampConcatenateString
-STATEMENT MATCH (a:person) RETURN concat(concat('Register Time: ', string(a.registerTime)), ' test')
---- 8
Register Time: 1911-08-20 02:32:21 test
Register Time: 1972-07-31 13:22:30.678559 test
Register Time: 1976-12-23 04:41:42 test
Register Time: 1976-12-23 11:21:42 test
Register Time: 2008-11-03 15:25:30.000526 test
Register Time: 2011-08-20 11:25:30 test
Register Time: 2023-02-21 13:25:30 test
Register Time: 2031-11-30 12:25:30 test

-LOG TimestampExtractYearFuncTest
-STATEMENT MATCH (p:person) RETURN date_part("yeAr", p.registerTime)
---- 8
2011
2008
1911
2031
1976
1972
1976
2023

-STATEMENT MATCH (p:person) RETURN date_part("yeAr", cast(p.registerTime, "TIMESTAMP_NS")),
                                   date_part("yeAr", cast(p.registerTime, "TIMESTAMP_MS")),
                                   date_part("yeAr", cast(p.registerTime, "TIMESTAMP_SEC")),
                                   date_part("yeAr", cast(p.registerTime, "TIMESTAMP_TZ"));
---- 8
2011|2011|2011|2011
2008|2008|2008|2008
1911|1911|1911|1911
2031|2031|2031|2031
1976|1976|1976|1976
1972|1972|1972|1972
1976|1976|1976|1976
2023|2023|2023|2023

-LOG TimestampExtractMicroFuncTest
-STATEMENT MATCH (p:person) RETURN date_part("microSeconds", p.registerTime)
---- 8
30000000
30000526
21000000
30000000
42000000
30678559
42000000
30000000

-STATEMENT MATCH (p:person) RETURN date_part("microSeconds", cast(p.registerTime, "TIMESTAMP_NS")),
                                   date_part("microSeconds", cast(p.registerTime, "TIMESTAMP_MS")),
                                   date_part("microSeconds", cast(p.registerTime, "TIMESTAMP_SEC")),
                                   date_part("microSeconds", cast(p.registerTime, "TIMESTAMP_TZ"));
---- 8
21000000|21000000|21000000|21000000
30000000|30000000|30000000|30000000
30000000|30000000|30000000|30000000
30000000|30000000|30000000|30000000
30000526|30000000|30000000|30000526
30678559|30678000|30000000|30678559
42000000|42000000|42000000|42000000
42000000|42000000|42000000|42000000

-LOG TimestampExtractMsFuncTest
-STATEMENT MATCH (p:person) RETURN date_part("millisEcond", p.registerTime)
---- 8
30000
30000
21000
30000
42000
30678
42000
30000

-STATEMENT MATCH (p:person) RETURN date_part("millisEcond", cast(p.registerTime, "TIMESTAMP_NS")),
                                   date_part("millisEcond", cast(p.registerTime, "TIMESTAMP_MS")),
                                   date_part("millisEcond", cast(p.registerTime, "TIMESTAMP_SEC")),
                                   date_part("millisEcond", cast(p.registerTime, "TIMESTAMP_TZ"));
---- 8
30000|30000|30000|30000
30000|30000|30000|30000
21000|21000|21000|21000
30000|30000|30000|30000
42000|42000|42000|42000
30678|30678|30000|30678
42000|42000|42000|42000
30000|30000|30000|30000

-LOG TimestampExtractSecondFuncTest
-STATEMENT MATCH (p:person) RETURN date_part("seConds", p.registerTime)
---- 8
30
30
21
30
42
30
42
30

-STATEMENT MATCH (p:person) RETURN date_part("seConds", cast(p.registerTime, "TIMESTAMP_NS")),
                                   date_part("seConds", cast(p.registerTime, "TIMESTAMP_MS")),
                                   date_part("seConds", cast(p.registerTime, "TIMESTAMP_SEC")),
                                   date_part("seConds", cast(p.registerTime, "TIMESTAMP_TZ"));
---- 8
30|30|30|30
30|30|30|30
21|21|21|21
30|30|30|30
42|42|42|42
30|30|30|30
42|42|42|42
30|30|30|30

-LOG TimestampExtractMinuteFuncTest
-STATEMENT MATCH (p:person) RETURN date_part("minute", p.registerTime)
---- 8
25
25
32
25
21
22
41
25

-STATEMENT MATCH (p:person) RETURN date_part("minute", cast(p.registerTime, "TIMESTAMP_NS")),
                                   date_part("minute", cast(p.registerTime, "TIMESTAMP_MS")),
                                   date_part("minute", cast(p.registerTime, "TIMESTAMP_SEC")),
                                   date_part("minute", cast(p.registerTime, "TIMESTAMP_TZ"));
---- 8
25|25|25|25
25|25|25|25
32|32|32|32
25|25|25|25
21|21|21|21
22|22|22|22
41|41|41|41
25|25|25|25

-LOG TimestampExtractHourFuncTest
-STATEMENT MATCH (p:person) RETURN date_part("hours", p.registerTime)
---- 8
11
15
2
12
11
13
4
13

-STATEMENT MATCH (p:person) RETURN date_part("hours", cast(p.registerTime, "TIMESTAMP_NS")),
                                   date_part("hours", cast(p.registerTime, "TIMESTAMP_MS")),
                                   date_part("hours", cast(p.registerTime, "TIMESTAMP_SEC")),
                                   date_part("hours", cast(p.registerTime, "TIMESTAMP_TZ"));
---- 8
11|11|11|11
15|15|15|15
2|2|2|2
12|12|12|12
11|11|11|11
13|13|13|13
4|4|4|4
13|13|13|13

-LOG TimestampTruncDayFuncTest
-STATEMENT MATCH (p:person) RETURN date_trunc("Day", p.registerTime)
---- 8
2011-08-20 00:00:00
2008-11-03 00:00:00
1911-08-20 00:00:00
2031-11-30 00:00:00
1976-12-23 00:00:00
1972-07-31 00:00:00
1976-12-23 00:00:00
2023-02-21 00:00:00

-STATEMENT MATCH (p:person) RETURN date_trunc("Day", cast(p.registerTime, "TIMESTAMP_NS")),
                                   date_trunc("Day", cast(p.registerTime, "TIMESTAMP_MS")),
                                   date_trunc("Day", cast(p.registerTime, "TIMESTAMP_SEC")),
                                   date_trunc("Day", cast(p.registerTime, "TIMESTAMP_TZ"));
---- 8
2011-08-20 00:00:00|2011-08-20 00:00:00|2011-08-20 00:00:00|2011-08-20 00:00:00
2008-11-03 00:00:00|2008-11-03 00:00:00|2008-11-03 00:00:00|2008-11-03 00:00:00
1911-08-20 00:00:00|1911-08-20 00:00:00|1911-08-20 00:00:00|1911-08-20 00:00:00
2031-11-30 00:00:00|2031-11-30 00:00:00|2031-11-30 00:00:00|2031-11-30 00:00:00
1976-12-23 00:00:00|1976-12-23 00:00:00|1976-12-23 00:00:00|1976-12-23 00:00:00
1972-07-31 00:00:00|1972-07-31 00:00:00|1972-07-31 00:00:00|1972-07-31 00:00:00
1976-12-23 00:00:00|1976-12-23 00:00:00|1976-12-23 00:00:00|1976-12-23 00:00:00
2023-02-21 00:00:00|2023-02-21 00:00:00|2023-02-21 00:00:00|2023-02-21 00:00:00

-LOG TimestampTruncMicrosecondsFuncTest
-STATEMENT MATCH (p:person) RETURN date_trunc("MIcroseCond", p.registerTime)
---- 8
2011-08-20 11:25:30
2008-11-03 15:25:30.000526
1911-08-20 02:32:21
2031-11-30 12:25:30
1976-12-23 11:21:42
1972-07-31 13:22:30.678559
1976-12-23 04:41:42
2023-02-21 13:25:30

-STATEMENT MATCH (p:person) RETURN date_trunc("MIcroseCond", cast(p.registerTime, "TIMESTAMP_NS")),
                                   date_trunc("MIcroseCond", cast(p.registerTime, "TIMESTAMP_MS")),
                                   date_trunc("MIcroseCond", cast(p.registerTime, "TIMESTAMP_SEC")),
                                   date_trunc("MIcroseCond", cast(p.registerTime, "TIMESTAMP_TZ"));
---- 8
2011-08-20 11:25:30|2011-08-20 11:25:30|2011-08-20 11:25:30|2011-08-20 11:25:30
2008-11-03 15:25:30.000526|2008-11-03 15:25:30|2008-11-03 15:25:30|2008-11-03 15:25:30.000526
1911-08-20 02:32:21|1911-08-20 02:32:21|1911-08-20 02:32:21|1911-08-20 02:32:21
2031-11-30 12:25:30|2031-11-30 12:25:30|2031-11-30 12:25:30|2031-11-30 12:25:30
1976-12-23 11:21:42|1976-12-23 11:21:42|1976-12-23 11:21:42|1976-12-23 11:21:42
1972-07-31 13:22:30.678559|1972-07-31 13:22:30.678|1972-07-31 13:22:30|1972-07-31 13:22:30.678559
1976-12-23 04:41:42|1976-12-23 04:41:42|1976-12-23 04:41:42|1976-12-23 04:41:42
2023-02-21 13:25:30|2023-02-21 13:25:30|2023-02-21 13:25:30|2023-02-21 13:25:30

-LOG TimestampTruncMillisecondsFuncTest
-STATEMENT MATCH (p:person) RETURN date_trunc("mIlliSecond", p.registerTime)
---- 8
2011-08-20 11:25:30
2008-11-03 15:25:30
1911-08-20 02:32:21
2031-11-30 12:25:30
1976-12-23 11:21:42
1972-07-31 13:22:30.678
1976-12-23 04:41:42
2023-02-21 13:25:30

-STATEMENT MATCH (p:person) RETURN date_trunc("mIlliSecond", cast(p.registerTime, "TIMESTAMP_NS")),
                                   date_trunc("mIlliSecond", cast(p.registerTime, "TIMESTAMP_MS")),
                                   date_trunc("mIlliSecond", cast(p.registerTime, "TIMESTAMP_SEC")),
                                   date_trunc("mIlliSecond", cast(p.registerTime, "TIMESTAMP_TZ"));
---- 8
2011-08-20 11:25:30|2011-08-20 11:25:30|2011-08-20 11:25:30|2011-08-20 11:25:30
2008-11-03 15:25:30|2008-11-03 15:25:30|2008-11-03 15:25:30|2008-11-03 15:25:30
1911-08-20 02:32:21|1911-08-20 02:32:21|1911-08-20 02:32:21|1911-08-20 02:32:21
2031-11-30 12:25:30|2031-11-30 12:25:30|2031-11-30 12:25:30|2031-11-30 12:25:30
1976-12-23 11:21:42|1976-12-23 11:21:42|1976-12-23 11:21:42|1976-12-23 11:21:42
1972-07-31 13:22:30.678|1972-07-31 13:22:30.678|1972-07-31 13:22:30|1972-07-31 13:22:30.678
1976-12-23 04:41:42|1976-12-23 04:41:42|1976-12-23 04:41:42|1976-12-23 04:41:42
2023-02-21 13:25:30|2023-02-21 13:25:30|2023-02-21 13:25:30|2023-02-21 13:25:30

-LOG TimestampTruncSecondsFuncTest
-STATEMENT MATCH (p:person) RETURN date_trunc("secOnds", p.registerTime)
---- 8
2011-08-20 11:25:30
2008-11-03 15:25:30
1911-08-20 02:32:21
2031-11-30 12:25:30
1976-12-23 11:21:42
1972-07-31 13:22:30
1976-12-23 04:41:42
2023-02-21 13:25:30

-STATEMENT MATCH (p:person) RETURN date_trunc("secOnds", cast(p.registerTime, "TIMESTAMP_NS")),
                                   date_trunc("secOnds", cast(p.registerTime, "TIMESTAMP_MS")),
                                   date_trunc("secOnds", cast(p.registerTime, "TIMESTAMP_SEC")),
                                   date_trunc("secOnds", cast(p.registerTime, "TIMESTAMP_TZ"));
---- 8
2011-08-20 11:25:30|2011-08-20 11:25:30|2011-08-20 11:25:30|2011-08-20 11:25:30
2008-11-03 15:25:30|2008-11-03 15:25:30|2008-11-03 15:25:30|2008-11-03 15:25:30
1911-08-20 02:32:21|1911-08-20 02:32:21|1911-08-20 02:32:21|1911-08-20 02:32:21
2031-11-30 12:25:30|2031-11-30 12:25:30|2031-11-30 12:25:30|2031-11-30 12:25:30
1976-12-23 11:21:42|1976-12-23 11:21:42|1976-12-23 11:21:42|1976-12-23 11:21:42
1972-07-31 13:22:30|1972-07-31 13:22:30|1972-07-31 13:22:30|1972-07-31 13:22:30
1976-12-23 04:41:42|1976-12-23 04:41:42|1976-12-23 04:41:42|1976-12-23 04:41:42
2023-02-21 13:25:30|2023-02-21 13:25:30|2023-02-21 13:25:30|2023-02-21 13:25:30

-LOG TimestampTruncMinuteFuncTest
-STATEMENT MATCH (p:person) RETURN date_trunc("Minutes", p.registerTime)
---- 8
2011-08-20 11:25:00
2008-11-03 15:25:00
1911-08-20 02:32:00
2031-11-30 12:25:00
1976-12-23 11:21:00
1972-07-31 13:22:00
1976-12-23 04:41:00
2023-02-21 13:25:00

-STATEMENT MATCH (p:person) RETURN date_trunc("Minutes", cast(p.registerTime, "TIMESTAMP_NS")),
                                   date_trunc("Minutes", cast(p.registerTime, "TIMESTAMP_MS")),
                                   date_trunc("Minutes", cast(p.registerTime, "TIMESTAMP_SEC")),
                                   date_trunc("Minutes", cast(p.registerTime, "TIMESTAMP_TZ"));
---- 8
2011-08-20 11:25:00|2011-08-20 11:25:00|2011-08-20 11:25:00|2011-08-20 11:25:00
2008-11-03 15:25:00|2008-11-03 15:25:00|2008-11-03 15:25:00|2008-11-03 15:25:00
1911-08-20 02:32:00|1911-08-20 02:32:00|1911-08-20 02:32:00|1911-08-20 02:32:00
2031-11-30 12:25:00|2031-11-30 12:25:00|2031-11-30 12:25:00|2031-11-30 12:25:00
1976-12-23 11:21:00|1976-12-23 11:21:00|1976-12-23 11:21:00|1976-12-23 11:21:00
1972-07-31 13:22:00|1972-07-31 13:22:00|1972-07-31 13:22:00|1972-07-31 13:22:00
1976-12-23 04:41:00|1976-12-23 04:41:00|1976-12-23 04:41:00|1976-12-23 04:41:00
2023-02-21 13:25:00|2023-02-21 13:25:00|2023-02-21 13:25:00|2023-02-21 13:25:00

-LOG TimestampTruncHourFuncTest
-STATEMENT MATCH (p:person) RETURN date_trunc("Hours", p.registerTime)
---- 8
2011-08-20 11:00:00
2008-11-03 15:00:00
1911-08-20 02:00:00
2031-11-30 12:00:00
1976-12-23 11:00:00
1972-07-31 13:00:00
1976-12-23 04:00:00
2023-02-21 13:00:00

-STATEMENT MATCH (p:person) RETURN date_trunc("Hours", cast(p.registerTime, "TIMESTAMP_NS")),
                                   date_trunc("Hours", cast(p.registerTime, "TIMESTAMP_MS")),
                                   date_trunc("Hours", cast(p.registerTime, "TIMESTAMP_SEC")),
                                   date_trunc("Hours", cast(p.registerTime, "TIMESTAMP_TZ"));
---- 8
2011-08-20 11:00:00|2011-08-20 11:00:00|2011-08-20 11:00:00|2011-08-20 11:00:00
2008-11-03 15:00:00|2008-11-03 15:00:00|2008-11-03 15:00:00|2008-11-03 15:00:00
1911-08-20 02:00:00|1911-08-20 02:00:00|1911-08-20 02:00:00|1911-08-20 02:00:00
2031-11-30 12:00:00|2031-11-30 12:00:00|2031-11-30 12:00:00|2031-11-30 12:00:00
1976-12-23 11:00:00|1976-12-23 11:00:00|1976-12-23 11:00:00|1976-12-23 11:00:00
1972-07-31 13:00:00|1972-07-31 13:00:00|1972-07-31 13:00:00|1972-07-31 13:00:00
1976-12-23 04:00:00|1976-12-23 04:00:00|1976-12-23 04:00:00|1976-12-23 04:00:00
2023-02-21 13:00:00|2023-02-21 13:00:00|2023-02-21 13:00:00|2023-02-21 13:00:00

-LOG TimestampCenturyFuncTest
-STATEMENT MATCH (p:person) RETURN century(p.registerTime)
---- 8
21
21
20
21
20
20
20
21

-STATEMENT MATCH (p:person) RETURN century(cast(p.registerTime, "TIMESTAMP_NS")),
                                   century(cast(p.registerTime, "TIMESTAMP_MS")),
                                   century(cast(p.registerTime, "TIMESTAMP_SEC")),
                                   century(cast(p.registerTime, "TIMESTAMP_TZ"));
---- 8
21|21|21|21
21|21|21|21
20|20|20|20
21|21|21|21
20|20|20|20
20|20|20|20
20|20|20|20
21|21|21|21

-LOG TimestampDaynameFuncTest
-STATEMENT MATCH (p:person) RETURN dayname(p.registerTime)
---- 8
Saturday
Monday
Sunday
Sunday
Thursday
Monday
Thursday
Tuesday

-STATEMENT MATCH (p:person) RETURN dayname(cast(p.registerTime, "TIMESTAMP_NS")),
                                   dayname(cast(p.registerTime, "TIMESTAMP_MS")),
                                   dayname(cast(p.registerTime, "TIMESTAMP_SEC")),
                                   dayname(cast(p.registerTime, "TIMESTAMP_TZ"));
---- 8
Saturday|Saturday|Saturday|Saturday
Monday|Monday|Monday|Monday
Sunday|Sunday|Sunday|Sunday
Sunday|Sunday|Sunday|Sunday
Thursday|Thursday|Thursday|Thursday
Monday|Monday|Monday|Monday
Thursday|Thursday|Thursday|Thursday
Tuesday|Tuesday|Tuesday|Tuesday


-LOG TimestampMonthNameFuncTest
-STATEMENT MATCH (p:person) RETURN monthname(p.registerTime)
---- 8
August
November
August
November
December
July
December
February

-STATEMENT MATCH (p:person) RETURN monthname(cast(p.registerTime, "TIMESTAMP_NS")),
                                   monthname(cast(p.registerTime, "TIMESTAMP_MS")),
                                   monthname(cast(p.registerTime, "TIMESTAMP_SEC")),
                                   monthname(cast(p.registerTime, "TIMESTAMP_TZ"));
---- 8
August|August|August|August
November|November|November|November
August|August|August|August
November|November|November|November
December|December|December|December
July|July|July|July
December|December|December|December
February|February|February|February

-LOG TimestampLastDayFuncTest
-STATEMENT MATCH (p:person) RETURN last_day(p.registerTime)
---- 8
2011-08-31
2008-11-30
1911-08-31
2031-11-30
1976-12-31
1972-07-31
1976-12-31
2023-02-28

-STATEMENT MATCH (p:person) RETURN last_day(cast(p.registerTime, "TIMESTAMP_NS")),
                                   last_day(cast(p.registerTime, "TIMESTAMP_MS")),
                                   last_day(cast(p.registerTime, "TIMESTAMP_SEC")),
                                   last_day(cast(p.registerTime, "TIMESTAMP_TZ"));
---- 8
2011-08-31|2011-08-31|2011-08-31|2011-08-31
2008-11-30|2008-11-30|2008-11-30|2008-11-30
1911-08-31|1911-08-31|1911-08-31|1911-08-31
2031-11-30|2031-11-30|2031-11-30|2031-11-30
1976-12-31|1976-12-31|1976-12-31|1976-12-31
1972-07-31|1972-07-31|1972-07-31|1972-07-31
1976-12-31|1976-12-31|1976-12-31|1976-12-31
2023-02-28|2023-02-28|2023-02-28|2023-02-28

-LOG Int64EpochMsFuncTest
-STATEMENT MATCH (p:person) RETURN epoch_ms(p.age)
---- 8
1970-01-01 00:00:00.035
1970-01-01 00:00:00.03
1970-01-01 00:00:00.045
1970-01-01 00:00:00.02
1970-01-01 00:00:00.02
1970-01-01 00:00:00.025
1970-01-01 00:00:00.04
1970-01-01 00:00:00.083

-LOG Int64ToTimestampFuncTest
-STATEMENT MATCH (p:person) RETURN to_timestamp(p.age)
---- 8
1970-01-01 00:00:35
1970-01-01 00:00:30
1970-01-01 00:00:45
1970-01-01 00:00:20
1970-01-01 00:00:20
1970-01-01 00:00:25
1970-01-01 00:00:40
1970-01-01 00:01:23

-LOG LargeInt64ToTimestampFuncTest
-STATEMENT RETURN to_timestamp(to_int128(9223372036854)), to_timestamp(-224372936854)
---- 1
294247-01-10 04:00:53.999616|5142-11-27 (BC) 00:12:26

-LOG LargeInt64ToTimestampErrorTest
-STATEMENT RETURN to_timestamp(9223372036854775808)
---- error
Conversion exception: Could not convert epoch seconds to TIMESTAMP

-LOG TimestampGreatestFuncTest
-STATEMENT MATCH (p:person) RETURN greatest(p.registerTime, timestamp("2006-02-12 11:25:33"))
---- 8
2011-08-20 11:25:30
2008-11-03 15:25:30.000526
2006-02-12 11:25:33
2031-11-30 12:25:30
2006-02-12 11:25:33
2006-02-12 11:25:33
2006-02-12 11:25:33
2023-02-21 13:25:30

-STATEMENT MATCH (p:person) RETURN greatest(cast(p.registerTime, "TIMESTAMP_NS"), cast("2008-11-03 15:25:30.0005", "TIMESTAMP_SEC")),
                                   greatest(cast(p.registerTime, "TIMESTAMP_MS"), cast("2008-11-03 15:25:30.0005", "TIMESTAMP")),
                                   greatest(cast(p.registerTime, "TIMESTAMP_SEC"), cast("2008-11-03 15:25:30.0005", "TIMESTAMP_NS")),
                                   greatest(cast(p.registerTime, "TIMESTAMP_TZ"), cast("2008-11-03 15:25:30.0005", "TIMESTAMP_MS"));
---- 8
2008-11-03 15:25:30.000526|2008-11-03 15:25:30.0005|2008-11-03 15:25:30.0005|2008-11-03 15:25:30.000526
2008-11-03 15:25:30|2008-11-03 15:25:30.0005|2008-11-03 15:25:30.0005|2008-11-03 15:25:30
2008-11-03 15:25:30|2008-11-03 15:25:30.0005|2008-11-03 15:25:30.0005|2008-11-03 15:25:30
2008-11-03 15:25:30|2008-11-03 15:25:30.0005|2008-11-03 15:25:30.0005|2008-11-03 15:25:30
2008-11-03 15:25:30|2008-11-03 15:25:30.0005|2008-11-03 15:25:30.0005|2008-11-03 15:25:30
2011-08-20 11:25:30|2011-08-20 11:25:30|2011-08-20 11:25:30|2011-08-20 11:25:30
2023-02-21 13:25:30|2023-02-21 13:25:30|2023-02-21 13:25:30|2023-02-21 13:25:30
2031-11-30 12:25:30|2031-11-30 12:25:30|2031-11-30 12:25:30|2031-11-30 12:25:30

-LOG TimestampLeastFuncTest
-STATEMENT MATCH (p:person) RETURN least(p.registerTime, timestamp("2006-02-12 11:25:33"))
---- 8
2006-02-12 11:25:33
2006-02-12 11:25:33
1911-08-20 02:32:21
2006-02-12 11:25:33
1976-12-23 11:21:42
1972-07-31 13:22:30.678559
1976-12-23 04:41:42
2006-02-12 11:25:33

-STATEMENT RETURN least(cast("2008-11-03 15:25:30.000493", "TIMESTAMP_NS"), cast("2008-11-03 15:25:30.0005", "TIMESTAMP_SEC")),
            least(cast("2008-11-03 15:25:30.000493", "TIMESTAMP_NS"), cast("2008-11-03 15:25:30.0005", "TIMESTAMP")),
            least(cast("2008-11-03 15:25:30.000493", "TIMESTAMP_SEC"), cast("2008-11-03 15:25:30.0005", "TIMESTAMP_NS")),
            least(cast("2008-11-03 15:25:30.000493", "TIMESTAMP_TZ"), cast("2008-11-03 15:25:30.0005", "TIMESTAMP_MS"));
---- 1
2008-11-03 15:25:30|2008-11-03 15:25:30.000493|2008-11-03 15:25:30|2008-11-03 15:25:30

-LOG TimestampComparisonAcrossNodesNonEquality
-STATEMENT MATCH (a:person)-[e1:knows]->(b:person) WHERE a.registerTime <> b.registerTime RETURN COUNT(*)
---- 1
14

-LOG TimestampComparisonAcrossNodesLessThan
-STATEMENT MATCH (a:person)-[e1:knows]->(b:person) WHERE a.registerTime < b.registerTime RETURN COUNT(*)
---- 1
6

-LOG TimestampComparisonAcrossNodesLessThanOrEqualTo
-STATEMENT MATCH (a:person)-[e1:knows]->(b:person) WHERE a.registerTime <= b.registerTime RETURN COUNT(*)
---- 1
6

-LOG TimestampComparisonAcrossNodesGreaterThan
-STATEMENT MATCH (a:person)-[e1:knows]->(b:person) WHERE a.registerTime > b.registerTime RETURN COUNT(*)
---- 1
8

-LOG TimestampLiteralGreaterThanComparison
-STATEMENT MATCH (a:person)-[e1:knows]->(b:person) WHERE b.registerTime > timestamp('2005-11-03 13:25:30.000526') RETURN COUNT(*)
-ENUMERATE
---- 1
9

-LOG TimestampLiteralLessThanComparison
-STATEMENT MATCH (a:person)-[e1:knows]->(b:person) WHERE e1.meetTime < timestamp('1979-08-25 19:07:22') RETURN COUNT(*)
-ENUMERATE
---- 1
4

-LOG TimestampComparisonAcrossNodesEquality
-STATEMENT MATCH (a:person)-[e1:knows]->(b:person) WHERE a.registerTime = b.registerTime RETURN COUNT(*)
-ENUMERATE
---- 1
0

-LOG TimestampComparisonAcrossNodesGreaterThanOrEqualTo
-STATEMENT MATCH (a:person)-[e1:knows]->(b:person) WHERE a.registerTime >= b.registerTime RETURN COUNT(*)
-ENUMERATE
---- 1
8

-LOG TimestampComparisonAcrossEdges
-STATEMENT MATCH (a:person)<-[e1:knows]-(b:person)-[e2:knows]->(c:person) WHERE e1.meetTime = e2.meetTime AND id(a) <> id(c) RETURN COUNT(*)
-ENUMERATE
---- 1
2

-LOG TimestampComparisonAcrossEdgeAndNode
-STATEMENT MATCH (a:person)-[e1:knows]->(b:person) WHERE a.registerTime > e1.meetTime  RETURN COUNT(*)
-ENUMERATE
---- 1
7
