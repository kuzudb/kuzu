-DATASET CSV tinysnb

--

-CASE NestTypeImplicitCast

-LOG ListAny
-STATEMENT RETURN [], [[]], [{'b': NULL}];
---- 1
[]|[[]]|[{b: }]

-LOG StructAny
-STATEMENT RETURN {'a': NULL}, {'c': []}, {'d': {'x': NULL}};
---- 1
{a: }|{c: []}|{d: {x: }}

-LOG MapAny
-STATEMENT RETURN map([1,2], [NULL, NULL]), map([1,2], ['a', NULL]);
---- 1
{1=, 2=}|{1=a, 2=}
-STATEMENT RETURN map([NULL, NULL], [1, 2]);
---- error
Runtime exception: Null value key is not allowed in map.

-LOG ListImplicitCast
-STATEMENT CREATE NODE TABLE T0(a SERIAL, b INT64[], c DOUBLE[], d STRING[], PRIMARY KEY(a));
---- ok
-STATEMENT CREATE (:T0 {b: [1.0, 2.0], c: [1, 2], d: [3, 5]});
---- ok
-STATEMENT MATCH (a:T0) RETURN a.a, a.b, a.c, a.d;
---- 1
0|[1,2]|[1.000000,2.000000]|[3,5]

-LOG 3248
-STATEMENT CREATE NODE TABLE Item(id UINT64, item STRING, price DOUBLE, vector DOUBLE[2], PRIMARY KEY (id));
---- ok
-STATEMENT CREATE (a:Item {id: 1, item: 'apple', price: 2.0, vector: [3.1, 4.1]});
---- ok
-STATEMENT MERGE (b:Item {id: 2, item: 'banana', price: 1.0, vector: [5.9, 26.5]});
---- ok
-STATEMENT MATCH (a:Item) RETURN a.item, a.price, array_cosine_similarity(a.vector, [6.0, 25.0]) AS sim ORDER BY sim DESC
---- 2
apple|2.000000|0.916383
banana|1.000000|0.999864
-STATEMENT MATCH (a:Item) RETURN a.item, a.price, array_cosine_similarity([6.0, 25.0], a.vector) AS sim ORDER BY sim DESC
---- 2
apple|2.000000|0.916383
banana|1.000000|0.999864
-STATEMENT MATCH (a:Item) RETURN a.item, a.price, array_distance([6.0, 25.0], a.vector) AS sim ORDER BY sim DESC
---- 2
apple|2.000000|21.100237
banana|1.000000|1.503330
-STATEMENT MATCH (a:Item) RETURN a.item, a.price, array_inner_product([6.0, 25.0], a.vector) AS sim ORDER BY sim DESC
---- 2
apple|2.000000|121.100000
banana|1.000000|697.900000
-STATEMENT RETURN array_cosine_similarity([1, 2], [3.0, 4.0]);
---- error
Binder exception: ARRAY_COSINE_SIMILARITY requires argument type to be FLOAT[] or DOUBLE[].
-STATEMENT RETURN array_cosine_similarity([1.0, 2.0], [3.0, 4.0]);
---- error
Binder exception: ARRAY_COSINE_SIMILARITY requires at least one argument to be ARRAY but all parameters are LIST.
-STATEMENT RETURN array_cosine_similarity(cast([1.0, 2.0], 'DOUBLE[2]'), [3.0, 4.0]);
---- 1
0.983870
-STATEMENT RETURN array_cosine_similarity(cast([1.0, 2.0] as DOUBLE[2]), [3.0, 4.0]);
---- 1
0.983870

-LOG DocListExample
-STATEMENT RETURN ["Alice", 1] AS l;
---- error
Binder exception: Expression Alice has data type STRING but expected INT64. Implicit cast is not supported.
-STATEMENT RETURN CAST([3,4,12,11], 'INT64[4]');
---- 1
[3,4,12,11]
-STATEMENT RETURN CAST([[5,2,1],[2,3],[15,64,74]], 'INT64[][3]');
---- 1
[[5,2,1],[2,3],[15,64,74]]
-STATEMENT UNWIND CAST([[1,2,3],[3],[4,5]], 'INT64[][3]') AS x UNWIND x AS y RETURN y;
---- 6
1
2
3
3
4
5
-STATEMENT RETURN CAST([3,4,12,11] as INT64[4]);
---- 1
[3,4,12,11]
-STATEMENT RETURN CAST([[5,2,1],[2,3],[15,64,74]] as INT64[][3]);
---- 1
[[5,2,1],[2,3],[15,64,74]]
-STATEMENT UNWIND CAST([[1,2,3],[3],[4,5]] as INT64[][3]) AS x UNWIND x AS y RETURN y;
---- 6
1
2
3
3
4
5

-CASE DECIMALCAST
-STATEMENT UNWIND [CAST(127, 'INT8')] AS A RETURN CAST(A, 'DECIMAL(3, 0)');
---- 1
127
-STATEMENT UNWIND [CAST(127, 'INT8')] AS A RETURN CAST(A, 'DECIMAL(3, 1)');
---- error
Overflow exception: To Decimal Cast Failed: 127 is not in DECIMAL(3, 1) range
-STATEMENT UNWIND[CAST(1000, 'INT16')] AS A RETURN CAST(A, 'DECIMAL(3, 0)');
---- error
Overflow exception: To Decimal Cast Failed: 1000 is not in DECIMAL(3, 0) range
-STATEMENT UNWIND ['-99999999999999999999999999999999999999'] AS A RETURN CAST(A, 'DECIMAL(38, 0)');
---- 1
-99999999999999999999999999999999999999
-STATEMENT UNWIND [123.123, 123.125, 123.126, -123.125, -123.124] AS A WITH CAST(A, 'DECIMAL') AS B RETURN CAST(B, 'DECIMAL(18, 2)');
---- 5
123.12
123.13
123.13
-123.13
-123.12
-STATEMENT UNWIND [999.99] AS A WITH CAST(A, 'DECIMAL') AS B RETURN CAST(B, 'DECIMAL(5, 2)');
---- 1
999.99
-STATEMENT UNWIND [999.99] AS A WITH CAST(A, 'DECIMAL') AS B WITH CAST(B, 'DECIMAL(5, 2)') AS C RETURN CAST(C, 'DECIMAL(4, 1)');
---- error
Overflow exception: Decimal Cast Failed: input 999.99 is not in range of DECIMAL(4, 1)
-STATEMENT UNWIND [30, 31, 32, 33, 34, -100000.9123] AS A RETURN CAST(A, 'DECIMAL') > 32.01;
---- 6
False
False
False
True
True
False
-STATEMENT UNWIND [30, 31, 32, 33, 34, -100000.9123] AS A RETURN CAST(A, 'DECIMAL') > 32;
---- 6
False
False
False
True
True
False
-CASE DecimalToString
-STATEMENT UNWIND [1.2, 2.3, 3.4] AS A WITH CAST(A, 'decimal(4, 1)') AS col16, CAST(A, 'decimal(9, 2)') AS col32, CAST(A, 'decimal(18, 3)') AS col64, CAST(A, 'decimal(38, 19)') AS col128 RETURN CAST(col16, 'STRING'), CAST(col32, 'string'), cast(col64, 'string'), cast(col128, 'string')
---- 3
1.2|1.20|1.200|1.2000000000000000000
2.3|2.30|2.300|2.3000000000000000000
3.4|3.40|3.400|3.4000000000000000000


