-DATASET CSV tinysnb
# We currently don't support list lambda functions if the list size if larger than the vector capacity
-SKIP_VECTOR_CAPACITY_TESTS
--

-CASE Any

-STATEMENT MATCH (a:person) RETURN a.fName, any(name in list_transform(a.workedHours, x-> x - 7) WHERE name = 5)
---- 8
Alice|False
Bob|True
Carol|False
Dan|False
Elizabeth|False
Farooq|False
Greg|False
Hubert Blaine Wolfeschlegelsteinhausenbergerdorff|True

-STATEMENT RETURN ANY(length in [1,2,3] where any (height in [3,5,6] where height = 5))
---- 1
True

-STATEMENT MATCH (a:person) RETURN a.ID, a.workedHours, any(length in a.workedHours where a.ID - 5 = length)
---- 8
0|[10,5]|False
2|[12,8]|False
3|[4,5]|False
5|[1,9]|False
7|[2]|True
8|[3,4,5,6,7]|True
9|[1]|False
10|[10,11,12,3,4,5,6,7]|True

-STATEMENT MATCH (a:person) RETURN a.fName, any(name in a.usedNames WHERE name = 'Aida')
---- 8
Alice|True
Bob|False
Carol|False
Dan|False
Elizabeth|False
Farooq|False
Greg|False
Hubert Blaine Wolfeschlegelsteinhausenbergerdorff|False

-STATEMENT MATCH (a:person) RETURN a.fName, any(name in a.workedHours WHERE name = 5)
---- 8
Alice|True
Bob|False
Carol|True
Dan|False
Elizabeth|False
Farooq|True
Greg|False
Hubert Blaine Wolfeschlegelsteinhausenbergerdorff|True

-STATEMENT MATCH (a:person) RETURN a.fName, any(length in [3,2,5] where length=3)
---- 8
Alice|True
Bob|True
Carol|True
Dan|True
Elizabeth|True
Farooq|True
Greg|True
Hubert Blaine Wolfeschlegelsteinhausenbergerdorff|True

-STATEMENT MATCH (a:person) RETURN a.fName, any(name in a.workedHours[2:] WHERE name = 5)
---- 8
Alice|True
Bob|False
Carol|True
Dan|False
Elizabeth|False
Farooq|True
Greg|False
Hubert Blaine Wolfeschlegelsteinhausenbergerdorff|True

-STATEMENT MATCH (a:person) RETURN a.fName, all(name in a.workedHours WHERE name % 5 = 0)
---- 8
Alice|True
Bob|False
Carol|False
Dan|False
Elizabeth|False
Farooq|False
Greg|False
Hubert Blaine Wolfeschlegelsteinhausenbergerdorff|False

-STATEMENT MATCH (a:person) RETURN a.fName, none(name in a.workedHours WHERE name % 5 = 0)
---- 8
Alice|False
Bob|True
Carol|False
Dan|True
Elizabeth|True
Farooq|False
Greg|True
Hubert Blaine Wolfeschlegelsteinhausenbergerdorff|False

-STATEMENT MATCH (a:person) RETURN a.fName, single(name in a.workedHours WHERE name % 5 = 0)
---- 8
Alice|False
Bob|False
Carol|True
Dan|False
Elizabeth|False
Farooq|True
Greg|False
Hubert Blaine Wolfeschlegelsteinhausenbergerdorff|False

-STATEMENT MATCH (a:person) RETURN a.fName, all(name in a.workedHours WHERE true)
---- 8
Alice|True
Bob|True
Carol|True
Dan|True
Elizabeth|True
Farooq|True
Greg|True
Hubert Blaine Wolfeschlegelsteinhausenbergerdorff|True

-STATEMENT MATCH (a:person) RETURN a.fName, none(name in a.workedHours WHERE false)
---- 8
Alice|True
Bob|True
Carol|True
Dan|True
Elizabeth|True
Farooq|True
Greg|True
Hubert Blaine Wolfeschlegelsteinhausenbergerdorff|True

# TODO: Double check if we should handle instead of erroring
-STATEMENT RETURN any(name in NULL WHERE name = 5)
---- error
Binder exception:  has data type ANY but LIST was expected.


-CASE ListPredicateWithoutWhereError
-STATEMENT RETURN NONE(x in [1,2,3])
---- error
Parser exception: Invalid input <RETURN NONE(x in [1,2,3])>: expected rule oC_RegularQuery (line: 1, offset: 24)
"RETURN NONE(x in [1,2,3])"
                         ^

-STATEMENT RETURN ALL(x in [1,2,3])
---- error
Parser exception: Invalid input <RETURN ALL(x in [1,2,3])>: expected rule oC_RegularQuery (line: 1, offset: 23)
"RETURN ALL(x in [1,2,3])"
                        ^

-STATEMENT RETURN ANY(x in [1,2,3])
---- error
Parser exception: Invalid input <RETURN ANY(x in [1,2,3])>: expected rule oC_RegularQuery (line: 1, offset: 23)
"RETURN ANY(x in [1,2,3])"
                        ^

-STATEMENT RETURN SINGLE(x in [1,2,3])
---- error
Parser exception: Invalid input <RETURN SINGLE(x in [1,2,3])>: expected rule oC_RegularQuery (line: 1, offset: 26)
"RETURN SINGLE(x in [1,2,3])"
                           ^
-CASE ListPredicateInWhere
-STATEMENT MATCH (a:person) WHERE none(name in a.usedNames WHERE name = 'Aida') RETURN a.fName
---- 7
Bob
Carol
Dan
Elizabeth
Farooq
Greg
Hubert Blaine Wolfeschlegelsteinhausenbergerdorff

-STATEMENT MATCH (a:person) WHERE any(courseScore in a.courseScoresPerTerm WHERE courseScore = [8,8]) RETURN a.fName
---- 1
Dan

-STATEMENT MATCH (a:person) WHERE all(workedHours in a.workedHours WHERE workedHours >= 5) RETURN a.fName
---- 2
Alice
Bob

-STATEMENT MATCH (a:person) WHERE single(usedName in a.usedNames WHERE usedName in ['Daniel', 'Bobby']) RETURN a.fName
---- 2
Bob
Dan
