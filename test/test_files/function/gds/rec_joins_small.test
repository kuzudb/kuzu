# Original single label graph, which consists of person1 and knows11 edges looks as follows:
# p1_0->p1_1->p1_2->p1_3->p1_4 and 2 "shortcut" edges directly from p1_2->p1_4.
# There are 2 copies of the nodes used throughout the tests: person1 and person2. These get internal table_id_t's 0 and 1.
# There are 4 copies of the edges used throughout the tests: knows11, knows12, knows21, and knows22. knows{i}{j}
# connect person{i} to person{j} with the same structure.
# Multilabel1 graph: contains knows12 and knows21.
# Multilabel2 graph: contains knows11, knows12, knows21, knows22.
-DATASET CSV gds-rec-joins-small

--

-CASE GDSSmall

-LOG VarLenJoinsUBLessThanLBError
-STATEMENT PROJECT GRAPH PK (person1, knows11)
           MATCH (a:person1)
           CALL var_len_joins(PK, a, 2, 1, "FWD")
           RETURN *;
---- error
Runtime exception: Lower bound length of recursive join operations need to be less than or equal to upper bound. Given lower bound is: 2 and upper bound is: 1.

-LOG VarLenJoinsUBTooHighError
-STATEMENT PROJECT GRAPH PK (person1, knows11)
           MATCH (a:person1)
           CALL var_len_joins(PK, a, 1, 10000,"FWD")
           RETURN *;
---- error
Runtime exception: Recursive join operations only works for non-positive upper bound iterations that are up to 255. Given upper bound is: 10000.

-LOG VarLenJoinsLBNonPositiveError
-STATEMENT PROJECT GRAPH PK (person1, knows11)
           MATCH (a:person1)
           CALL var_len_joins(PK, a, -1, 3, "FWD")
           RETURN *;
---- error
Runtime exception: Lower and upper bound lengths of recursive join operations need to be non-negative. Given lower bound is: -1 and upper bound is: 3.

-LOG ShortestPathsJoinsUBNonPositiveError
-STATEMENT PROJECT GRAPH PK (person1, knows11)
           MATCH (a:person1)
           CALL all_sp_paths(PK, a, -5, "FWD")
           RETURN *;
---- error
Runtime exception: Lower and upper bound lengths of recursive join operations need to be non-negative. Given lower bound is: 1 and upper bound is: -5.

-LOG ShortestPathsJoinsUBNonPositiveError
-STATEMENT PROJECT GRAPH PK (person1, knows11)
           MATCH (a:person1)
           CALL all_sp_paths(PK, a, 0, "FWD")
           RETURN *;
---- error
Runtime exception: Shortest path operations only works for positive upper bound iterations. Given upper bound is: 0.

-LOG VarLenJoins
-STATEMENT PROJECT GRAPH PK (person1, knows11)
           MATCH (a:person1) WHERE a.ID = 0
           CALL var_len_joins(PK, a, 1, 30, "FWD")
           RETURN a.ID, _node.ID, length, pathNodeIDs, pathEdgeIDs;
---- 6
0|1|1|[]|[2:0]
0|2|2|[0:1]|[2:0,2:1]
0|3|3|[0:1,0:2]|[2:0,2:1,2:2]
0|4|3|[0:1,0:2]|[2:0,2:1,2:4]
0|4|3|[0:1,0:2]|[2:0,2:1,2:5]
0|4|4|[0:1,0:2,0:3]|[2:0,2:1,2:2,2:3]
-STATEMENT PROJECT GRAPH PK (person1, knows11)
           MATCH (a:person1) WHERE a.ID = 4
           CALL var_len_joins(PK, a, 1, 30, "BWD")
           RETURN a.ID, _node.ID, length, pathNodeIDs, pathEdgeIDs;
---- 10
4|0|3|[0:2,0:1]|[2:4,2:1,2:0]
4|0|3|[0:2,0:1]|[2:5,2:1,2:0]
4|0|4|[0:3,0:2,0:1]|[2:3,2:2,2:1,2:0]
4|1|2|[0:2]|[2:4,2:1]
4|1|2|[0:2]|[2:5,2:1]
4|1|3|[0:3,0:2]|[2:3,2:2,2:1]
4|2|1|[]|[2:4]
4|2|1|[]|[2:5]
4|2|2|[0:3]|[2:3,2:2]
4|3|1|[]|[2:3]
-STATEMENT PROJECT GRAPH PK (person1, knows11)
           MATCH (a:person1) WHERE a.ID = 1
           CALL var_len_joins(PK, a, 1, 2, "BOTH")
           RETURN a.ID, _node.ID, length, pathNodeIDs, pathEdgeIDs;
---- 7
1|0|1|[]|[2:0]
1|1|2|[0:0]|[2:0,2:0]
1|1|2|[0:2]|[2:1,2:1]
1|2|1|[]|[2:1]
1|3|2|[0:2]|[2:1,2:2]
1|4|2|[0:2]|[2:1,2:4]
1|4|2|[0:2]|[2:1,2:5]

-LOG VarLenJoinsMultilabel1
-STATEMENT PROJECT GRAPH PK (person1, person2, knows12, knows21)
           MATCH (a:person1) WHERE a.ID = 0
           CALL var_len_joins(PK, a, 1, 30, "FWD")
           RETURN a.ID, _node.ID, length, pathNodeIDs, pathEdgeIDs;
---- 6
0|1|1|[]|[3:0]
0|2|2|[1:1]|[3:0,4:1]
0|3|3|[1:1,0:2]|[3:0,4:1,3:2]
0|4|3|[1:1,0:2]|[3:0,4:1,3:4]
0|4|3|[1:1,0:2]|[3:0,4:1,3:5]
0|4|4|[1:1,0:2,1:3]|[3:0,4:1,3:2,4:3]

-LOG VarLenJoinsMultilabel2
-STATEMENT PROJECT GRAPH PK (person1, person2, knows11, knows12, knows21, knows22)
           MATCH (a:person1) WHERE a.ID = 0
           CALL var_len_joins(PK, a, 1, 30, "FWD")
           RETURN length, count(*)
---- 4
1|2
2|4
3|24
4|16

-LOG VarLenJoinsLowerBoundZeroUpperBoundOne
-STATEMENT PROJECT GRAPH PK (person1, knows11)
           MATCH (a:person1) WHERE a.ID = 0
           CALL var_len_joins(PK, a, 0, 2, "FWD")
           RETURN a.ID, _node.ID, length, pathNodeIDs, pathEdgeIDs;
---- 5
0|0|0|[]|[]
0|1|1|[]|[2:0]
0|2|2|[0:1]|[2:0,2:1]
0|3|0|[]|[]
0|4|0|[]|[]

-LOG VarLenJoinsLowerBoundZeroUpperBoundZero
-STATEMENT PROJECT GRAPH PK (person1, knows11)
           MATCH (a:person1) WHERE a.ID = 0
           CALL var_len_joins(PK, a, 0, 0, "FWD")
           RETURN a.ID, _node.ID, length, pathNodeIDs, pathEdgeIDs;
---- 5
0|0|0|[]|[]
0|1|0|[]|[]
0|2|0|[]|[]
0|3|0|[]|[]
0|4|0|[]|[]

-LOG VarLenJoinsLowerBound1
-STATEMENT PROJECT GRAPH PK (person1, knows11)
           MATCH (a:person1) WHERE a.ID = 0
           CALL var_len_joins(PK, a, 2, 3, "FWD")
           RETURN a.ID, _node.ID, length, pathNodeIDs, pathEdgeIDs;
---- 4
0|2|2|[0:1]|[2:0,2:1]
0|3|3|[0:1,0:2]|[2:0,2:1,2:2]
0|4|3|[0:1,0:2]|[2:0,2:1,2:4]
0|4|3|[0:1,0:2]|[2:0,2:1,2:5]

-LOG VarLenJoinsLowerBound2
-STATEMENT PROJECT GRAPH PK (person1, knows11)
           MATCH (a:person1) WHERE a.ID = 0
           CALL var_len_joins(PK, a, 4, 30, "FWD")
           RETURN a.ID, _node.ID, length, pathNodeIDs, pathEdgeIDs;
---- 1
0|4|4|[0:1,0:2,0:3]|[2:0,2:1,2:2,2:3]

-LOG VarLenJoinsEmptyPaths
-STATEMENT PROJECT GRAPH PK (person1, knows11)
           MATCH (a:person1) WHERE a.ID = 4
           CALL var_len_joins(PK, a, 1, 4, "FWD")
           RETURN a.ID, _node.ID, length, pathNodeIDs;
---- 0


-LOG AllSPDestinations
-STATEMENT PROJECT GRAPH PK (person1, knows11)
           MATCH (a:person1) WHERE a.ID = 0
           CALL all_sp_destinations(PK, a, 30, "FWD")
           RETURN a.ID, _node.ID;
---- 5
0|1
0|2
0|3
0|4
0|4

-LOG AllSPDestinationsMultilabel1
-STATEMENT PROJECT GRAPH PK (person1, person2, knows12, knows21)
           MATCH (a:person1) WHERE a.ID = 0
           CALL all_sp_destinations(PK, a, 30, "FWD")
           RETURN a.ID, _node.ID;
---- 6
0|1
0|2
0|3
0|4
0|4
0|4

-LOG AllSPDestinationsMultilabel2
-STATEMENT PROJECT GRAPH PK (person1, person2, knows11, knows12, knows21, knows22)
           MATCH (a:person1) WHERE a.ID = 0
           CALL all_sp_destinations(PK, a, 30, "FWD")
           RETURN a.ID, _node.ID;
---- 30
0|1
0|1
0|2
0|2
0|2
0|2
0|3
0|3
0|3
0|3
0|3
0|3
0|3
0|3
0|4
0|4
0|4
0|4
0|4
0|4
0|4
0|4
0|4
0|4
0|4
0|4
0|4
0|4
0|4
0|4

-LOG AllSPLengths
-STATEMENT PROJECT GRAPH PK (person1, knows11)
           MATCH (a:person1) WHERE a.ID = 0
           CALL all_sp_lengths(PK, a, 30, "FWD")
           RETURN a.ID, _node.ID, length;
---- 5
0|1|1
0|2|2
0|3|3
0|4|3
0|4|3

-LOG AllSPLengthsMultilabel1
-STATEMENT PROJECT GRAPH PK (person1, person2, knows12, knows21)
           MATCH (a:person1) WHERE a.ID = 0
           CALL all_sp_lengths(PK, a, 30, "FWD")
           RETURN a.ID, _node.ID, length;
---- 6
0|1|1
0|2|2
0|3|3
0|4|3
0|4|3
0|4|4

-LOG AllSPLengthsMultilabel2
-STATEMENT PROJECT GRAPH PK (person1, person2, knows11, knows12, knows21, knows22)
           MATCH (a:person1) WHERE a.ID = 0
           CALL all_sp_lengths(PK, a, 30, "FWD")
           RETURN a.ID, _node.ID, length;
---- 30
0|1|1
0|1|1
0|2|2
0|2|2
0|2|2
0|2|2
0|3|3
0|3|3
0|3|3
0|3|3
0|3|3
0|3|3
0|3|3
0|3|3
0|4|3
0|4|3
0|4|3
0|4|3
0|4|3
0|4|3
0|4|3
0|4|3
0|4|3
0|4|3
0|4|3
0|4|3
0|4|3
0|4|3
0|4|3
0|4|3

-LOG AllSPPaths
-STATEMENT PROJECT GRAPH PK (person1, knows11)
           MATCH (a:person1) WHERE a.ID = 0
           CALL all_sp_paths(PK, a, 5, "FWD")
           RETURN a.ID, _node.ID, length, pathNodeIDs, pathEdgeIDs;
---- 5
0|1|1|[]|[2:0]
0|2|2|[0:1]|[2:0,2:1]
0|3|3|[0:1,0:2]|[2:0,2:1,2:2]
0|4|3|[0:1,0:2]|[2:0,2:1,2:4]
0|4|3|[0:1,0:2]|[2:0,2:1,2:5]
-LOG AllSPPaths
-STATEMENT PROJECT GRAPH PK (person1, knows11)
           MATCH (a:person1) WHERE a.ID = 4
           CALL all_sp_paths(PK, a, 5, "BOTH")
           RETURN a.ID, _node.ID, length, pathNodeIDs, pathEdgeIDs;
---- 7
4|0|3|[0:2,0:1]|[2:4,2:1,2:0]
4|0|3|[0:2,0:1]|[2:5,2:1,2:0]
4|1|2|[0:2]|[2:4,2:1]
4|1|2|[0:2]|[2:5,2:1]
4|2|1|[]|[2:4]
4|2|1|[]|[2:5]
4|3|1|[]|[2:3]

-LOG AllSPPathsMultilabel1
-STATEMENT PROJECT GRAPH PK (person1, person2, knows12, knows21)
           MATCH (a:person1) WHERE a.ID = 0
           CALL all_sp_paths(PK, a, 30, "FWD")
           RETURN a.ID, _node.ID, length, pathNodeIDs, pathEdgeIDs;
---- 6
0|1|1|[]|[3:0]
0|2|2|[1:1]|[3:0,4:1]
0|3|3|[1:1,0:2]|[3:0,4:1,3:2]
0|4|3|[1:1,0:2]|[3:0,4:1,3:4]
0|4|3|[1:1,0:2]|[3:0,4:1,3:5]
0|4|4|[1:1,0:2,1:3]|[3:0,4:1,3:2,4:3]

-LOG AllSPPathsMultilabel2
-STATEMENT PROJECT GRAPH PK (person1, person2, knows11, knows12, knows21, knows22)
           MATCH (a:person1) WHERE a.ID = 0
           CALL all_sp_paths(PK, a, 30, "FWD")
           RETURN a.ID, _node.ID, length, pathNodeIDs, pathEdgeIDs;
---- 30
0|1|1|[]|[2:0]
0|1|1|[]|[3:0]
0|2|2|[0:1]|[2:0,2:1]
0|2|2|[0:1]|[2:0,3:1]
0|2|2|[1:1]|[3:0,4:1]
0|2|2|[1:1]|[3:0,5:1]
0|3|3|[0:1,0:2]|[2:0,2:1,2:2]
0|3|3|[0:1,0:2]|[2:0,2:1,3:2]
0|3|3|[0:1,1:2]|[2:0,3:1,4:2]
0|3|3|[0:1,1:2]|[2:0,3:1,5:2]
0|3|3|[1:1,0:2]|[3:0,4:1,2:2]
0|3|3|[1:1,0:2]|[3:0,4:1,3:2]
0|3|3|[1:1,1:2]|[3:0,5:1,4:2]
0|3|3|[1:1,1:2]|[3:0,5:1,5:2]
0|4|3|[0:1,0:2]|[2:0,2:1,2:4]
0|4|3|[0:1,0:2]|[2:0,2:1,2:5]
0|4|3|[0:1,0:2]|[2:0,2:1,3:4]
0|4|3|[0:1,0:2]|[2:0,2:1,3:5]
0|4|3|[0:1,1:2]|[2:0,3:1,4:4]
0|4|3|[0:1,1:2]|[2:0,3:1,4:5]
0|4|3|[0:1,1:2]|[2:0,3:1,5:4]
0|4|3|[0:1,1:2]|[2:0,3:1,5:5]
0|4|3|[1:1,0:2]|[3:0,4:1,2:4]
0|4|3|[1:1,0:2]|[3:0,4:1,2:5]
0|4|3|[1:1,0:2]|[3:0,4:1,3:4]
0|4|3|[1:1,0:2]|[3:0,4:1,3:5]
0|4|3|[1:1,1:2]|[3:0,5:1,4:4]
0|4|3|[1:1,1:2]|[3:0,5:1,4:5]
0|4|3|[1:1,1:2]|[3:0,5:1,5:4]
0|4|3|[1:1,1:2]|[3:0,5:1,5:5]

-LOG SingleSPDestinations
-STATEMENT PROJECT GRAPH PK (person1, knows11)
           MATCH (a:person1) WHERE a.ID = 0
           CALL single_sp_destinations(PK, a, 30, "FWD")
           RETURN a.ID, _node.ID;
---- 4
0|1
0|2
0|3
0|4

-LOG SingleSPDestinationsMultilabel1
-STATEMENT PROJECT GRAPH PK (person1, person2, knows12, knows21)
           MATCH (a:person1) WHERE a.ID = 0
           CALL single_sp_destinations(PK, a, 30, "FWD")
           RETURN a.ID, _node.ID;
---- 5
0|1
0|2
0|3
0|4
0|4

-LOG SingleSPDestinationsMultilabel2
-STATEMENT PROJECT GRAPH PK (person1, person2, knows11, knows12, knows21, knows22)
           MATCH (a:person1) WHERE a.ID = 0
           CALL single_sp_destinations(PK, a, 30, "FWD")
           RETURN a.ID, _node.ID
---- 8
0|1
0|1
0|2
0|2
0|3
0|3
0|4
0|4

-LOG SingleSPLengths
-STATEMENT PROJECT GRAPH PK (person1, knows11)
           MATCH (a:person1) WHERE a.ID = 0
           CALL single_sp_lengths(PK, a, 30, "FWD")
           RETURN a.ID, _node.ID, length;
---- 4
0|1|1
0|2|2
0|3|3
0|4|3

-LOG SingleSPLengthsMultilabel1
-STATEMENT PROJECT GRAPH PK (person1, person2, knows12, knows21)
           MATCH (a:person1) WHERE a.ID = 0
           CALL single_sp_lengths(PK, a, 30, "FWD")
           RETURN a.ID, _node.ID, length;
---- 5
0|1|1
0|2|2
0|3|3
0|4|3
0|4|4

-LOG SingleSPLengthsMultilabel2
-STATEMENT PROJECT GRAPH PK (person1, person2, knows11, knows12, knows21, knows22)
           MATCH (a:person1) WHERE a.ID = 0
           CALL single_sp_lengths(PK, a, 30, "FWD")
           RETURN a.ID, _node.ID, length
---- 8
0|1|1
0|1|1
0|2|2
0|2|2
0|3|3
0|3|3
0|4|3
0|4|3

-LOG SingleSPPaths
-STATEMENT PROJECT GRAPH PK (person1, knows11)
           MATCH (a:person1) WHERE a.ID = 0
           CALL single_sp_paths(PK, a, 5, "FWD")
           RETURN a.ID, _node.ID, length, pathNodeIDs, pathEdgeIDs;
---- 4
0|1|1|[]|[2:0]
0|2|2|[0:1]|[2:0,2:1]
0|3|3|[0:1,0:2]|[2:0,2:1,2:2]
0|4|3|[0:1,0:2]|[2:0,2:1,2:4]
-STATEMENT PROJECT GRAPH PK (person1, knows11)
           MATCH (a:person1) WHERE a.ID = 2
           CALL single_sp_paths(PK, a, 5, "BOTH")
           RETURN a.ID, _node.ID, length, pathNodeIDs, pathEdgeIDs;
---- 4
2|0|2|[0:1]|[2:1,2:0]
2|1|1|[]|[2:1]
2|3|1|[]|[2:2]
2|4|1|[]|[2:4]

-LOG SingleSPPathsMultilabel1
-STATEMENT PROJECT GRAPH PK (person1, person2, knows12, knows21)
           MATCH (a:person1) WHERE a.ID = 0
           CALL single_sp_paths(PK, a, 30, "FWD")
           RETURN a.ID, _node.ID, length, pathNodeIDs, pathEdgeIDs;
---- 5
0|1|1|[]|[3:0]
0|2|2|[1:1]|[3:0,4:1]
0|3|3|[1:1,0:2]|[3:0,4:1,3:2]
0|4|3|[1:1,0:2]|[3:0,4:1,3:4]
0|4|4|[1:1,0:2,1:3]|[3:0,4:1,3:2,4:3]

-LOG SingleSPPathsMultilabel2
-STATEMENT PROJECT GRAPH PK (person1, person2, knows11, knows12, knows21, knows22)
           MATCH (a:person1) WHERE a.ID = 0
           CALL single_sp_paths(PK, a, 30, "FWD")
           RETURN length, count(*)
---- 3
1|2
2|2
3|4
