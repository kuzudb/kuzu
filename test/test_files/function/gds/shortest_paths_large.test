-DATASET CSV gds-shortest-paths-large

--

-CASE SingleSPLengthsLargeSingleLabel
-STATEMENT PROJECT GRAPH PK (person1, knows11)
           MATCH (a:person1) WHERE a.ID = 1
           CALL single_sp_lengths(PK, a, 4, true)
           RETURN length, count(*);
---- 5
0|1
1|10
2|100
3|1000
4|10000

# The first output tuples 11 comes from the fact that we also output 0-length paths, i.e., the from from source node
# to source node. Both for that path and the 10 paths of length 1, we output an empty pathNodeIDs, since there are no
# intermediate nodes.
-CASE SingleSPPathsLargeSingleLabel
-STATEMENT PROJECT GRAPH PK (person1, knows11)
           MATCH (a:person1) WHERE a.ID = 1
           CALL single_sp_paths(PK, a, 4, true)
           RETURN size(pathNodeIDs), count(*);
---- 4
0|11
1|100
2|1000
3|10000


# This query will start from person1.1 and the traversal will stay in person1 nodes, visiting 10, 100, 1000, and 10000
# nodes in 4 iterations.
-CASE SingleSPLengthsLargeMultilabel1
-STATEMENT PROJECT GRAPH PK (person1, person2, knows12, knows21)
           MATCH (a:person1) WHERE a.ID = 1
           CALL single_sp_lengths(PK, a, 4, true)
           RETURN length, count(*);
---- 5
0|1
1|10
2|100
3|1000
4|10000

# See CASEs SingleSPLengthsLargeMultilabel1 & SingleSPPathsLargeSingleLabel for the explanation on the expected output.
-CASE SingleSPPathsLargeMultilabel1
-STATEMENT PROJECT GRAPH PK (person1, person2, knows12, knows21)
           MATCH (a:person1) WHERE a.ID = 1
           CALL single_sp_paths(PK, a, 4, true)
           RETURN size(pathNodeIDs), count(*);
---- 4
0|11
1|100
2|1000
3|10000

# This query will start from person1.1 and zigzag a similar BFS as MultiLabel1 but the layers will zigzag as person2,
# person1, person2, person1
-CASE SingleSPLengthsLargeMultilabel2
-STATEMENT PROJECT GRAPH PK (person1, person2, knows11, knows12)
           MATCH (a:person1) WHERE a.ID = 1
           CALL single_sp_lengths(PK, a, 4, true)
           RETURN length, count(*);
---- 5
0|1
1|20
2|200
3|2000
4|20000

# See CASEs SingleSPLengthsLargeMultilabel2 & SingleSPPathsLargeSingleLabel for the explanation on the expected output.
-CASE SingleSPPathsLargeMultilabel2
-STATEMENT PROJECT GRAPH PK (person1, person2, knows11, knows12)
           MATCH (a:person1) WHERE a.ID = 1
           CALL single_sp_paths(PK, a, 4, true)
           RETURN size(pathNodeIDs), count(*);
---- 4
0|21
1|200
2|2000
3|20000

# This query will start from person1.1 and traverse person1 and person2 layers in tandem. So should give for each
# length 2 times the result of SPLargeMultilabel2, except for length 0 (which is only person1.1)
-CASE SingleSPLengthsLargeMultilabel3
-STATEMENT PROJECT GRAPH PK (person1, person2, knows11, knows12, knows21)
           MATCH (a:person1) WHERE a.ID = 1
           CALL single_sp_lengths(PK, a, 4, true)
           RETURN length, count(*);
---- 5
0|1
1|20
2|200
3|2000
4|20000

# See CASEs SingleSPLengthsLargeMultilabel3 & SingleSPPathsLargeSingleLabel for the explanation on the expected output.
-CASE SingleSPPathsLargeMultilabel3
-STATEMENT PROJECT GRAPH PK (person1, person2, knows11, knows12, knows21)
           MATCH (a:person1) WHERE a.ID = 1
           CALL single_sp_paths(PK, a, 4, true)
           RETURN size(pathNodeIDs), count(*);
---- 4
0|21
1|200
2|2000
3|20000
