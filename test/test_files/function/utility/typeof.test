-DATASET CSV tinysnb

--

-CASE ConstantTest

-LOG NullTest
-STATEMENT RETURN typeof(NULL);
---- 1
NULL

-LOG BoolTest
-STATEMENT RETURN typeof(true);
---- 1
BOOL

-STATEMENT RETURN typeof(false);
---- 1
BOOL

-LOG INT64Test
-STATEMENT RETURN typeof(cast(1, "INT64"));
---- 1
INT64

-LOG INT32Test
-STATEMENT RETURN typeof(cast(-1, "INT32"));
---- 1
INT32

-LOG INT16Test
-STATEMENT RETURN typeof(cast(1, "INT16"));
---- 1
INT16

-LOG INT8Test
-STATEMENT RETURN typeof(cast(-1, "INT8"));
---- 1
INT8

-LOG UINT64Test
-STATEMENT RETURN typeof(cast(1, "UINT64"));
---- 1
UINT64

-LOG UINT32Test
-STATEMENT RETURN typeof(cast(1, "UINT32"));
---- 1
UINT32

-LOG UINT16Test
-STATEMENT RETURN typeof(cast(1, "UINT16"));
---- 1
UINT16

-LOG UINT8Test
-STATEMENT RETURN typeof(cast(1, "UINT8"));
---- 1
UINT8

-LOG INT128Test
-STATEMENT RETURN typeof(cast(1, "INT128"));
---- 1
INT128

-LOG DoubleTest
-STATEMENT RETURN typeof(cast(1, "DOUBLE"));
---- 1
DOUBLE

-LOG FloatTest
-STATEMENT RETURN typeof(cast(1, "FLOAT"));
---- 1
FLOAT

-LOG DateTest
-STATEMENT RETURN typeof(date('2022-06-06'));
---- 1
DATE

-LOG TimestampTest
-STATEMENT RETURN typeof(timestamp("1970-01-01 00:00:00.004666-10"));
---- 1
TIMESTAMP

-LOG IntervalTest
-STATEMENT RETURN typeof(interval("1 year 2 days"));
---- 1
INTERVAL

-LOG StringTest
-STATEMENT RETURN typeof("hello");
---- 1
STRING

-LOG BlobTest
-STATEMENT RETURN typeof(BLOB('\\xBC\\xBD\\xBA\\xAA'));
---- 1
BLOB

-LOG ListTest
-STATEMENT RETURN typeof([[1, 2, 3], [4, 5]]);
---- 1
INT64[][]

-LOG ArrayTest
-STATEMENT RETURN typeof(CAST([1, 2, 3], "INT32[3]"));
---- 1
INT32[3]

-LOG StructTest
-STATEMENT RETURN typeof({a: 1, b: 2});
---- 1
STRUCT(a INT64, b INT64)

-LOG MapTest
-STATEMENT RETURN typeof(map([1, 2], ['a', 'b']));
---- 1
MAP(INT64, STRING)

-LOG UnionTest
-STATEMENT RETURN typeof(union_value(a := 1));
---- 1
UNION(a INT64)

-LOG UUIDTest
-STATEMENT RETURN typeof(gen_random_uuid());
---- 1
UUID

-LOG NodeTest
-STATEMENT MATCH (p:person) RETURN typeof(p) LIMIT 1;
---- 1
NODE

-LOG RelTest
-STATEMENT MATCH (a:person)-[e:knows]->(b:person) RETURN typeof(e) LIMIT 1;
---- 1
REL

-LOG RecursiveRelTest
-STATEMENT MATCH p = (a:person)-[e:knows]->(b:person) RETURN typeof(p) LIMIT 1;
---- 1
RECURSIVE_REL
