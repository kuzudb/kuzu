-DATASET CSV tinysnb

--

-CASE ListPrependGeneralTests
-LOG ListPrependListOfINT64
-STATEMENT MATCH (a:person) RETURN list_prepend(a.workedHours, a.age)
---- 8
[35,10,5]
[30,12,8]
[45,4,5]
[20,1,9]
[20,2]
[25,3,4,5,6,7]
[40,1]
[83,10,11,12,3,4,5,6,7]

-LOG ListPrependListOfINT32
-STATEMENT MATCH (m:movies) RETURN list_prepend([m.length], m.length)
---- 3
[126,126]
[2544,2544]
[298,298]

-LOG ListPrependListOfINT16
-STATEMENT MATCH (:person)-[s:studyAt]->(:organisation) RETURN list_prepend([s.length], s.length)
---- 3
[5,5]
[55,55]
[22,22]

-LOG ListPrependListOfINT8
-STATEMENT MATCH (:person)-[s:studyAt]->(:organisation) RETURN list_prepend([s.level], s.level)
---- 3
[5,5]
[120,120]
[2,2]

-LOG ListPrependListOfUINT64
-STATEMENT MATCH (:person)-[s:studyAt]->(:organisation) RETURN list_prepend([s.code], s.code)
---- 3
[9223372036854775808,9223372036854775808]
[6689,6689]
[23,23]

-LOG ListPrependListOfUINT32
-STATEMENT MATCH (:person)-[s:studyAt]->(:organisation) RETURN list_prepend([s.temperature], s.temperature)
---- 3
[32800,32800]
[1,1]
[20,20]

-LOG ListPrependListOfUINT16
-STATEMENT MATCH (:person)-[s:studyAt]->(:organisation) RETURN list_prepend([s.ulength], s.ulength)
---- 3
[33768,33768]
[90,90]
[180,180]

-LOG ListPrependListOfUINT8
-STATEMENT MATCH (:person)-[s:studyAt]->(:organisation) RETURN list_prepend([s.ulevel], s.ulevel)
---- 3
[250,250]
[220,220]
[12,12]

-LOG ListPrependListOfINT128
-STATEMENT MATCH (:person)-[s:studyAt]->(:organisation) RETURN list_prepend([s.hugedata], s.hugedata)
---- 3
[1844674407370955161811111111,1844674407370955161811111111]
[-1844674407370955161511,-1844674407370955161511]
[-15,-15]

-LOG ListPrependListOfFloat
-STATEMENT MATCH (a:person) RETURN list_prepend([a.height], a.height)
---- 8
[1.731000,1.731000]
[0.990000,0.990000]
[1.000000,1.000000]
[1.300000,1.300000]
[1.463000,1.463000]
[1.510000,1.510000]
[1.600000,1.600000]
[1.323000,1.323000]

-LOG ListPrependListOfStrings
-STATEMENT MATCH (a:person) RETURN array_prepend(a.usedNames, a.fName)
---- 8
[Alice,Aida]
[Bob,Bobby]
[Carol,Carmen,Fred]
[Dan,Wolfeschlegelstein,Daniel]
[Elizabeth,Ein]
[Farooq,Fesdwe]
[Greg,Grad]
[Hubert Blaine Wolfeschlegelsteinhausenbergerdorff,Ad,De,Hi,Kye,Orlan]

-LOG ListPrependListOfBools
-STATEMENT MATCH (a:person) RETURN list_prepend([a.isStudent, a.isWorker], a.isStudent)
---- 8
[True,True,False]
[True,True,False]
[False,False,True]
[False,False,True]
[False,False,True]
[True,True,False]
[False,False,False]
[False,False,True]

-LOG ListPrependListOfDoubles
-STATEMENT MATCH (a:person) RETURN list_prepend([a.eyeSight], a.eyeSight)
---- 8
[5.000000,5.000000]
[5.100000,5.100000]
[5.000000,5.000000]
[4.800000,4.800000]
[4.700000,4.700000]
[4.500000,4.500000]
[4.900000,4.900000]
[4.900000,4.900000]

-LOG ListPrependListOfDates
-STATEMENT MATCH (a:person) RETURN list_prepend([a.birthdate], a.birthdate)
---- 8
[1900-01-01,1900-01-01]
[1900-01-01,1900-01-01]
[1940-06-22,1940-06-22]
[1950-07-23,1950-07-23]
[1980-10-26,1980-10-26]
[1980-10-26,1980-10-26]
[1980-10-26,1980-10-26]
[1990-11-27,1990-11-27]

-LOG ListPrependListOfTimestamps
-STATEMENT MATCH (a:person) RETURN list_prepend([a.registerTime], a.registerTime)
---- 8
[2011-08-20 11:25:30,2011-08-20 11:25:30]
[2008-11-03 15:25:30.000526,2008-11-03 15:25:30.000526]
[1911-08-20 02:32:21,1911-08-20 02:32:21]
[2031-11-30 12:25:30,2031-11-30 12:25:30]
[1976-12-23 11:21:42,1976-12-23 11:21:42]
[1972-07-31 13:22:30.678559,1972-07-31 13:22:30.678559]
[1976-12-23 04:41:42,1976-12-23 04:41:42]
[2023-02-21 13:25:30,2023-02-21 13:25:30]

-LOG ListPrependListOfIntervals
-STATEMENT MATCH (a:person) RETURN list_prepend([a.lastJobDuration], a.lastJobDuration)
---- 8
[3 years 2 days 13:02:00,3 years 2 days 13:02:00]
[10 years 5 months 13:00:00.000024,10 years 5 months 13:00:00.000024]
[48:24:11,48:24:11]
[10 years 5 months 13:00:00.000024,10 years 5 months 13:00:00.000024]
[48:24:11,48:24:11]
[00:18:00.024,00:18:00.024]
[10 years 5 months 13:00:00.000024,10 years 5 months 13:00:00.000024]
[3 years 2 days 13:02:00,3 years 2 days 13:02:00]

-LOG ListPrependListOfListOfInts
-STATEMENT MATCH (a:person) RETURN array_push_front(a.courseScoresPerTerm, [a.age, a.age])
---- 8
[[35,35],[10,8],[6,7,8]]
[[30,30],[8,9],[9,10]]
[[45,45],[8,10]]
[[20,20],[7,4],[8,8],[9]]
[[20,20],[6],[7],[8]]
[[25,25],[8]]
[[40,40],[10]]
[[83,83],[7],[10],[6,7]]

-LOG ListPrependInternalID
-STATEMENT MATCH (a:person) RETURN list_prepend([id(a)], id(a))
---- 8
[0:0,0:0]
[0:1,0:1]
[0:2,0:2]
[0:3,0:3]
[0:4,0:4]
[0:5,0:5]
[0:6,0:6]
[0:7,0:7]

-CASE ListPrependNullAndEmptyChecks
-LOG Prepend string into empty list
-STATEMENT RETURN LIST_PREPEND([], '5')
---- 1
[5]
-LOG Prepend num into empty list
-STATEMENT RETURN LIST_PREPEND([], 7)
---- 1
[7]
-LOG Prepend null into empty list
-STATEMENT RETURN LIST_PREPEND([], null)
---- 1

-LOG Prepend null into null
-STATEMENT RETURN LIST_PREPEND(null, null)
---- 1
