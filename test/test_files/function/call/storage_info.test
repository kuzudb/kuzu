-DATASET CSV tinysnb
--

-CASE DictionaryCompression
-SKIP_IN_MEM
-STATEMENT create node table tab(id serial, primary key (id))
---- ok
-STATEMENT create rel table edge(from tab to tab, value string)
---- ok
-STATEMENT unwind range (1, 150000) as i create (:tab)
---- ok
-STATEMENT checkpoint
---- ok
-STATEMENT copy edge from (unwind range (0, 149998) as i return i, i + 1, 'hello')
---- ok
-STATEMENT call storage_info('edge') where compression <> 'UNCOMPRESSED' and compression <> 'BOOLEAN_BITPACKING' and compression <> 'CONSTANT' with count(*) as num_compressed_cols
           call storage_info('edge') where (column_name = 'fwd_value_data' or column_name = 'bwd_value_data') and node_group_id = 0 return num_pages = 1 or num_compressed_cols = 0
---- 2
True
True

-CASE CallStorageInfo
# Expected outputs depend on number of node groups
-SKIP_NODE_GROUP_SIZE_TESTS
-STATEMENT MATCH (p:person) RETURN COUNT(p)
---- 1
8
-STATEMENT CALL storage_info('person') RETURN COUNT(*)
---- 1
58
# TODO(Guodong/Sam): FIX-ME
#-STATEMENT CALL storage_info('knows') RETURN COUNT(*)
#---- 1
#252
-STATEMENT CALL storage_info('workAt') RETURN COUNT(*)
---- 1
28

-CASE ConstantNullInfo
-STATEMENT CALL storage_info('person') WHERE column_name='person_null' AND compression<>'CONSTANT' RETURN COUNT(*)
---- 1
0

-CASE DisableFloatListDataCompression
-STATEMENT CALL storage_info('meets') WHERE column_name='fwd_location_data' AND compression <> 'UNCOMPRESSED' RETURN COUNT(*);
---- 1
0
-STATEMENT CALL storage_info('meets') WHERE column_name='bwd_location_data' AND compression <> 'UNCOMPRESSED' RETURN COUNT(*);
---- 1
0
