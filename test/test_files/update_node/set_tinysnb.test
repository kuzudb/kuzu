-GROUP TinySnbSetNodeTest
-DATASET CSV tinysnb

--

-CASE SetNodeInt64PropTest
-STATEMENT MATCH (a:person) WHERE a.ID=0 SET a.age=20 + 50
---- ok
-STATEMENT MATCH (a:person) WHERE a.ID=0 RETURN a.age
---- 1
70

-CASE SetNodeInt32PropTest
-STATEMENT MATCH (a:movies) WHERE a.name='Roma' SET a.length=2.2
---- ok
-STATEMENT MATCH (a:movies) WHERE a.name='Roma' RETURN a.length
---- 1
2

-CASE SetNodeDoublePropTest
-STATEMENT MATCH (a:person) WHERE a.ID=0 SET a.eyeSight=1.0
---- ok
-STATEMENT MATCH (a:person) WHERE a.ID=0 RETURN a.eyeSight
---- 1
1.000000

-CASE SetNodeFloatPropTest
-STATEMENT MATCH (a:person) WHERE a.ID=0 SET a.height=12
---- ok
-STATEMENT MATCH (a:person) WHERE a.ID=0 RETURN a.height
---- 1
12.000000

-CASE SetNodeBoolPropTest
-STATEMENT MATCH (a:person) WHERE a.ID=0 SET a.isStudent=false
---- ok
-STATEMENT MATCH (a:person) WHERE a.ID=0 RETURN a.isStudent
---- 1
False

-CASE SetNodeDatePropTest
-STATEMENT MATCH (a:person) WHERE a.ID=0 SET a.birthdate='2200-10-10'
---- ok
-STATEMENT MATCH (a:person) WHERE a.ID=0 RETURN a.birthdate
---- 1
2200-10-10

-CASE SetNodeTimestampPropTest
-STATEMENT MATCH (a:person) WHERE a.ID=0 SET a.registerTime='2200-10-10 12:01:01'
---- ok
-STATEMENT MATCH (a:person) WHERE a.ID=0 RETURN a.registerTime
---- 1
2200-10-10 12:01:01

-CASE SetNodeEmptyStringPropTest
-STATEMENT MATCH (a:person) WHERE a.ID=0 SET a.fName=''
---- ok
-STATEMENT MATCH (a:person) WHERE a.ID=0 RETURN a.fName
---- 1

# end of SetNodeEmptyStringPropTest

-CASE SetNodeShortStringPropTest
-STATEMENT MATCH (a:person) WHERE a.ID=0 SET a.fName=string(22)
---- ok
-STATEMENT MATCH (a:person) WHERE a.ID=0 RETURN a.fName
---- 1
22

-CASE SetNodeLongStringPropTest
-STATEMENT MATCH (a:person) WHERE a.ID=0 SET a.fName='abcdefghijklmnopqrstuvwxyz'
---- ok
-STATEMENT MATCH (a:person) WHERE a.ID=0 RETURN a.fName
---- 1
abcdefghijklmnopqrstuvwxyz

-CASE SetVeryLongListErrorsTest
-DEFINE STRING_EXCEEDS_OVERFLOW ARANGE 0 5990
-STATEMENT BEGIN TRANSACTION
---- ok
-STATEMENT MATCH (a:person) WHERE a.ID=0 SET a.fName="${STRING_EXCEEDS_OVERFLOW}"
---- error
Runtime exception: Maximum length of strings is 4096. Input string's length is 28846.

-CASE SetNodeIntervalPropTest
-STATEMENT MATCH (a:person) WHERE a.ID=0 SET a.lastJobDuration=interval('1 years 1 days')
---- ok
-STATEMENT MATCH (a:person) WHERE a.ID=0 RETURN a.lastJobDuration
---- 1
1 year 1 day

-CASE SetNodePropNullTest
-STATEMENT MATCH (a:person) SET a.age=null
---- ok
-STATEMENT MATCH (a:person) RETURN a.age
---- 8








# end of SetNodePropNullTest. Empty lines represent the expected null values

-CASE SetBothUnflatTest
-STATEMENT MATCH (a:person) SET a.age=a.ID
---- ok
-STATEMENT MATCH (a:person) WHERE a.ID < 4 RETURN a.ID, a.age
---- 3
0|0
2|2
3|3

-CASE SetFlatUnFlatTest
-STATEMENT MATCH (a:person)-[:knows]->(b:person) WHERE a.ID=0 SET a.age=b.age
---- ok
-STATEMENT MATCH (a:person) WHERE a.ID < 4 RETURN a.ID, a.age
---- 3
0|20
2|30
3|45

-CASE SetUnFlatFlatTest
-STATEMENT MATCH (a:person)-[:knows]->(b:person) WHERE b.ID=2 AND a.ID = 0 SET b.age=a.age
---- ok
-STATEMENT MATCH (a:person) WHERE a.ID < 4 RETURN a.ID, a.age
---- 3
0|35
2|35
3|45

-CASE SetTwoHopTest
-STATEMENT MATCH (a:person)-[:knows]->(b:person)-[:knows]->(c:person) WHERE b.ID=0 AND c.fName = 'Bob' SET a.age=c.age
---- ok
-STATEMENT MATCH (a:person) WHERE a.ID < 6 RETURN a.ID, a.age
---- 4
0|35
2|30
3|30
5|30

-CASE SetTwoHopNullTest
-STATEMENT MATCH (a:person)-[:knows]->(b:person)-[:knows]->(c:person) SET a.age=null
---- ok
-STATEMENT MATCH (a:person) RETURN a.ID, a.age
---- 8
0|
10|83
2|
3|
5|
7|20
8|25
9|40

-CASE SetIndexNestedLoopJoinTest
-STATEMENT MATCH (a:person), (b:person) WHERE a.ID = b.ID SET a.age=b.gender
---- ok
-STATEMENT MATCH (a:person) RETURN a.ID, a.age
---- 8
0|1
10|2
2|2
3|1
5|2
7|1
8|2
9|2

-CASE SetRelInt16PropTest
-STATEMENT MATCH (a:person)-[e:studyAt]->(b:organisation) WHERE a.ID = 0 SET e.length=99
---- ok
-STATEMENT MATCH (a:person)-[e:studyAt]->(b:organisation) RETURN e.length
---- 3
22
55
99

-CASE SetNodeListOfIntPropTest
-STATEMENT MATCH (a:person) WHERE a.ID=0 SET a.workedHours=[10,20]
---- ok
-STATEMENT MATCH (a:person) WHERE a.ID=0 RETURN a.workedHours
---- 1
[10,20]

-CASE SetNodeListOfShortStringPropTest
-STATEMENT MATCH (a:person) WHERE a.ID=0 SET a.usedNames=['intel','microsoft']
---- ok
-STATEMENT MATCH (a:person) WHERE a.ID=0 RETURN a.usedNames
---- 1
[intel,microsoft]

-CASE SetNodeListOfLongStringPropTest
-STATEMENT MATCH (a:person) WHERE a.ID=0 SET a.usedNames=['abcndwjbwesdsd','microsofthbbjuwgedsd']
---- ok
-STATEMENT MATCH (a:person) WHERE a.ID=0 RETURN a.usedNames
---- 1
[abcndwjbwesdsd,microsofthbbjuwgedsd]

-CASE SetNodeListofListPropTest
-STATEMENT MATCH (a:person) WHERE a.ID=8 SET a.courseScoresPerTerm=[[10,20],[0,0,0]]
---- ok
-STATEMENT MATCH (a:person) WHERE a.ID=8 RETURN a.courseScoresPerTerm
---- 1
[[10,20],[0,0,0]]

-CASE SETMultiLabelNodePropTest
-STATEMENT MATCH (a) WHERE a.ID < 2 SET a.age = 1;
---- ok
-STATEMENT MATCH (a) WHERE a.ID < 2 RETURN a.ID, a.age;
---- 2
0|1
1|
-STATEMENT CREATE NODE TABLE play(ID INT64, name STRING, PRIMARY KEY(ID));
---- ok
-STATEMENT CREATE (a:play {ID: 0, name: 'AA'});
---- ok
-STATEMENT MATCH (a:organisation:play) RETURN a.ID, a.name;
---- 4
0|AA
1|ABFsUni
4|CsWork
6|DEsWork
-STATEMENT MATCH (a:organisation:play) WHERE a.ID < 2 SET a.name = string(a.ID * 10);
---- ok
-STATEMENT MATCH (a:organisation:play) WHERE a.ID < 2 RETURN a.ID, a.name;
---- 2
0|0
1|10

-CASE SETMultiLabelWithPruning
-STATEMENT MATCH (a:person)-[:knows]->(b) WHERE a.ID=0 SET b.name = "a", b.fName = "XX" RETURN b.name, b.fName;
---- 3
|XX
|XX
|XX
-STATEMENT MATCH (b) RETURN b.name, b.fName
---- 14
ABFsUni|
CsWork|
DEsWork|
Roma|
Sóló cón tu párejâ|
The 😂😃🧘🏻‍♂️🌍🌦️🍞🚗 movie|
|Alice
|Elizabeth
|Farooq
|Greg
|Hubert Blaine Wolfeschlegelsteinhausenbergerdorff
|XX
|XX
|XX
-STATEMENT MATCH (a:person)-[e:knows|:studyAt]->(b:person) WHERE a.ID=0 SET e.year = 2023, e.date = date("2023-11-11") RETURN e.year, e.date;
---- 3
|2023-11-11
|2023-11-11
|2023-11-11
-STATEMENT MATCH (a:person)-[e:knows|:studyAt]->(b:person:organisation) WHERE a.ID=0 RETURN e.year, e.date;
---- 4
2021|
|2023-11-11
|2023-11-11
|2023-11-11

-CASE SetNonNullValueWithWriteTransaction
-STATEMENT BEGIN TRANSACTION
---- ok
-STATEMENT MATCH (a:person) WHERE a.ID=0 RETURN a.age
---- 1
35
-STATEMENT MATCH (a:person) WHERE a.ID=0 SET a.age=70
---- ok
-STATEMENT MATCH (a:person) WHERE a.ID=0 RETURN a.age
---- 1
70

-CASE SetNullValueWithWriteTransaction
-STATEMENT BEGIN TRANSACTION
---- ok
-STATEMENT MATCH (a:person) WHERE a.ID=0 RETURN a.age
---- 1
35
-STATEMENT MATCH (a:person) WHERE a.ID=0 SET a.age=NULL
---- ok
-STATEMENT MATCH (a:person) WHERE a.ID=0 RETURN a.age
---- 1

-CASE MultipleSetListValue
-STATEMENT BEGIN TRANSACTION
---- ok
-STATEMENT MATCH (a:person) WHERE a.ID=10 SET a.usedNames=['abcndwjbwesdsd','microsofthbbjuwgedsd']
---- ok
-STATEMENT MATCH (a:person) WHERE a.ID=5 SET a.usedNames=['abcndwjbwesdsd','microsofthbbjuwgedsd']
---- ok
-STATEMENT MATCH (a:person) WHERE a.ID=2 SET a.usedNames=['abcndwjbwesdsd','microsofthbbjuwgedsd']
---- ok
-STATEMENT MATCH (a:person) WHERE a.ID=3 SET a.usedNames=['abcndwjbwesdsd','microsofthbbjuwgedsd']
---- ok
-STATEMENT COMMIT
---- ok
-STATEMENT MATCH (a:person) WHERE a.ID=10 RETURN a.usedNames
---- 1
[abcndwjbwesdsd,microsofthbbjuwgedsd]
-STATEMENT MATCH (a:person) WHERE a.ID=5 RETURN a.usedNames
---- 1
[abcndwjbwesdsd,microsofthbbjuwgedsd]


-CASE OptionalSET
-STATEMENT OPTIONAL MATCH (a:person) WHERE a.ID > 100 SET a.fName = 'a' RETURN a.fName;
---- 1

-STATEMENT MATCH (a:person) WHERE a.ID < 3 RETURN a.fName;
---- 2
Alice
Bob
-STATEMENT OPTIONAL MATCH (a) WHERE a.ID > 100 SET a.name, a.fName;
----1

-STATEMENT MATCH (a)  WHERE a.ID < 3 RETURN a.name, a.fName;
---- 3
ABFsUni|
|Alice
|Bob
