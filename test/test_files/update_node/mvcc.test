-DATASET CSV empty

--

-CASE Create1
-STATEMENT CREATE NODE TABLE test(id INT64, name STRING, isTrue BOOLEAN, birthday DATE, PRIMARY KEY(id));
---- ok
-STATEMENT CREATE (a:test {id:0, name:'A', isTrue:True, birthday:Date('2019-01-01')})
---- ok
-STATEMENT MATCH (a:test) RETURN a.id, a.name, a.isTrue, a.birthday
---- 1
0|A|True|2019-01-01

-CASE Create2
-STATEMENT BEGIN TRANSACTION
---- ok
-STATEMENT CREATE NODE TABLE test(id INT64, name STRING, isTrue BOOLEAN, birthday DATE, PRIMARY KEY(id));
---- ok
-STATEMENT CREATE (a:test {id:0, name:'A', isTrue:True, birthday:Date('2019-01-01')})
---- ok
-STATEMENT MATCH (a:test) RETURN a.id, a.name, a.isTrue, a.birthday
---- 1
0|A|True|2019-01-01
-STATEMENT MATCH (a:test) RETURN a.id, a.name, a.isTrue, a.birthday
---- 1
0|A|True|2019-01-01
-STATEMENT COMMIT
---- ok
-STATEMENT MATCH (a:test) RETURN a.id, a.name, a.isTrue, a.birthday
---- 1
0|A|True|2019-01-01

-CASE Create3
#-STATEMENT CALL auto_checkpoint=false;
#---- ok
-STATEMENT CREATE NODE TABLE test(id INT64, PRIMARY KEY(id));
---- ok
-STATEMENT CREATE (a:test {id:0})
---- ok
-STATEMENT CREATE (a:test {id:1})
---- ok
-STATEMENT CREATE (a:test {id:2})
---- ok
-STATEMENT CREATE (a:test {id:3})
---- ok
-STATEMENT CREATE (a:test {id:4})
---- ok
-STATEMENT CREATE (a:test {id:5})
---- ok
-STATEMENT CREATE (a:test {id:6})
---- ok
-STATEMENT CREATE (a:test {id:7})
---- ok
-STATEMENT CREATE (a:test {id:8})
---- ok
-STATEMENT CREATE (a:test {id:9})
---- ok
-STATEMENT CREATE (a:test {id:10})
---- ok
#-STATEMENT CALL CHECKPOINT() RETURN *;
#---- ok
-STATEMENT MATCH (a:test) RETURN a.id
---- 11
0
1
2
3
4
5
6
7
8
9
10

-CASE Create4
-STATEMENT CALL threads=1;
---- ok
#-STATEMENT CALL auto_checkpoint=false;
#---- ok
-STATEMENT CREATE NODE TABLE test(id INT64, PRIMARY KEY(id));
---- ok
-STATEMENT CREATE (a:test {id:0})
---- ok
-STATEMENT CREATE (a:test {id:1})
---- ok
-STATEMENT CREATE (a:test {id:2})
---- ok
-STATEMENT CREATE (a:test {id:3})
---- ok
-STATEMENT CREATE (a:test {id:4})
---- ok
-STATEMENT CREATE (a:test {id:5})
---- ok
#-STATEMENT CALL CHECKPOINT() RETURN *;
#---- ok
-STATEMENT MATCH (a:test) RETURN a.id
---- 6
0
1
2
3
4
5
-STATEMENT CREATE (a:test {id:6})
---- ok
-STATEMENT CREATE (a:test {id:7})
---- ok
-STATEMENT CREATE (a:test {id:8})
---- ok
-STATEMENT CREATE (a:test {id:9})
---- ok
-STATEMENT CREATE (a:test {id:10})
---- ok
#-STATEMENT CALL CHECKPOINT() RETURN *;
#---- ok
-STATEMENT MATCH (a:test) RETURN a.id
---- 11
0
1
2
3
4
5
6
7
8
9
10

-CASE CreateWithDelete
-STATEMENT CREATE NODE TABLE test(id INT64, PRIMARY KEY(id));
---- ok
-STATEMENT BEGIN TRANSACTION;
---- ok
-STATEMENT CREATE (a:test {id:0})
---- ok
-STATEMENT CREATE (a:test {id:1})
---- ok
-STATEMENT CREATE (a:test {id:2})
---- ok
-STATEMENT CREATE (a:test {id:3})
---- ok
-STATEMENT MATCH (t:test) WHERE t.id < 2 DELETE t
---- ok
-STATEMENT MATCH (a:test) RETURN a.id
---- 2
2
3
-STATEMENT COMMIT
---- ok
-STATEMENT MATCH (a:test) RETURN a.id
---- 2
2
3

-CASE CopyTinysnbPerson
-STATEMENT create node table person (ID INt64, fName StRING, gender INT64, isStudent BoOLEAN, isWorker BOOLEAN, age INT64, eyeSight DOUBLE, birthdate DATE, registerTime TIMESTAMP, lastJobDuration interval, workedHours INT64[], usedNames STRING[], courseScoresPerTerm INT64[][], grades INT64[4], height float, u UUID, PRIMARY KEY (ID));
---- ok
-STATEMENT COPY person FROM "${KUZU_ROOT_DIRECTORY}/dataset/tinysnb/vPerson.csv" (HeaDER=true, deLim=',');
---- ok
-STATEMENT MATCH (p:person) RETURN COUNT(*)
---- 1
5
-STATEMENT COPY person FROM "${KUZU_ROOT_DIRECTORY}/dataset/tinysnb/vPerson2.csv";
---- ok
-STATEMENT MATCH (p:person) RETURN COUNT(*)
---- 1
8

-CASE CopyTinySnbPersonAndKnows
#-STATEMENT CALL auto_checkpoint=false;
#---- ok
-STATEMENT create node table person (ID INt64, fName StRING, gender INT64, isStudent BoOLEAN, isWorker BOOLEAN, age INT64, eyeSight DOUBLE, birthdate DATE, registerTime TIMESTAMP, lastJobDuration interval, workedHours INT64[], usedNames STRING[], courseScoresPerTerm INT64[][], grades INT64[4], height float, u UUID, PRIMARY KEY (ID));
---- ok
-STATEMENT COPY person FROM "${KUZU_ROOT_DIRECTORY}/dataset/tinysnb/vPerson.csv" (HeaDER=true, deLim=',');
---- ok
-STATEMENT MATCH (p:person) RETURN COUNT(*)
---- 1
5
-STATEMENT COPY person FROM "${KUZU_ROOT_DIRECTORY}/dataset/tinysnb/vPerson2.csv";
---- ok
-STATEMENT MATCH (p:person) RETURN p.ID
---- 8
0
10
2
3
5
7
8
9
-STATEMENT create rel table knows (FROM person TO person, date DATE, meetTime TIMESTAMP, validInterval INTERVAL, comments STRING[], summary STRUCT(locations STRING[], transfer STRUCT(day DATE, amount INT64[])), notes UNION(firstmet DATE, type INT16, comment STRING), someMap MAP(STRING, STRING), MANY_MAnY);
---- ok
-STATEMENT COPY knows FROM "${KUZU_ROOT_DIRECTORY}/dataset/tinysnb/eKnows.csv";
---- ok
-STATEMENT MATCH (p:person)-[k:knows]->(p2:person) RETURN COUNT(*)
---- 1
6
-STATEMENT MATCH (p:person)-[k:knows]->(p2:person) RETURN k.date
---- 6
2021-06-30
2021-06-30
2021-06-30
2021-06-30
1950-05-14
1950-05-14
-STATEMENT COPY knows FROM "${KUZU_ROOT_DIRECTORY}/dataset/tinysnb/eKnows_2.csv";
---- ok
-STATEMENT MATCH (p:person)-[k:knows]->(p2:person) RETURN COUNT(*)
---- 1
14
-STATEMENT MATCH (p:person)-[k:knows]->(p2:person) RETURN k.date
---- 14
1950-05-14
1950-05-14
1950-05-14
1950-05-14
1905-12-12
1905-12-12
2000-01-01
2000-01-01
2021-06-30
2021-06-30
2021-06-30
2021-06-30
2021-06-30
2021-06-30
-STATEMENT MATCH (p1:person), (p2:person) WHERE p1.ID=2 AND p2.ID=9 CREATE (p1)-[e:knows]->(p2)
---- ok
-STATEMENT MATCH (p:person)-[k:knows]->(p2:person) RETURN COUNT(*)
---- 1
15
-STATEMENT MATCH (p:person)-[k:knows]->(p2:person) RETURN k.date
---- 15
1950-05-14
1950-05-14
1950-05-14
1950-05-14
1905-12-12
1905-12-12
2000-01-01
2000-01-01
2021-06-30
2021-06-30
2021-06-30
2021-06-30
2021-06-30
2021-06-30
