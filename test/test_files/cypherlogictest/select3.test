# these tests are generated by converting corresponding 
# SQLLogicTest SQL cases into Cypher cases
# with the eventual goal of creating an equivalent CypherLogicTest
-GROUP CypherLogicTest
-DATASET CSV EMPTY

--

-CASE Select3
-STATEMENT CREATE NODE TABLE t1(ID SERIAL, a INT32, b INT32, c INT32, d INT32, e INT32, PRIMARY KEY(ID))
---- ok
-STATEMENT CREATE (:t1 {e:NULL,c:102,b:NULL,d:101,a:104})
---- ok
-STATEMENT CREATE (:t1 {a:107,c:106,d:108,e:109,b:105})
---- ok
-STATEMENT CREATE (:t1 {e:110,d:114,b:112,a:NULL,c:113})
---- ok
-STATEMENT CREATE (:t1 {d:116,c:119,e:117,a:115,b:NULL})
---- ok
-STATEMENT CREATE (:t1 {c:123,d:122,b:124,e:NULL,a:121})
---- ok
-STATEMENT CREATE (:t1 {a:127,d:128,b:129,e:126,c:125})
---- ok
-STATEMENT CREATE (:t1 {e:132,c:134,a:131,d:133,b:130})
---- ok
-STATEMENT CREATE (:t1 {a:138,d:136,b:139,e:135,c:137})
---- ok
-STATEMENT CREATE (:t1 {e:144,c:141,d:140,a:142,b:143})
---- ok
-STATEMENT CREATE (:t1 {b:145,a:149,e:146,d:NULL,c:147})
---- ok
-STATEMENT CREATE (:t1 {b:151,c:150,a:153,d:NULL,e:NULL})
---- ok
-STATEMENT CREATE (:t1 {c:155,e:157,a:159,d:NULL,b:158})
---- ok
-STATEMENT CREATE (:t1 {c:161,b:160,a:163,d:164,e:162})
---- ok
-STATEMENT CREATE (:t1 {b:167,d:NULL,a:168,e:165,c:166})
---- ok
-STATEMENT CREATE (:t1 {d:171,b:170,c:172,e:173,a:174})
---- ok
-STATEMENT CREATE (:t1 {e:177,c:176,a:179,d:NULL,b:175})
---- ok
-STATEMENT CREATE (:t1 {b:181,e:180,a:182,d:183,c:184})
---- ok
-STATEMENT CREATE (:t1 {c:187,a:188,b:186,e:189,d:185})
---- ok
-STATEMENT CREATE (:t1 {d:190,b:194,c:193,e:192,a:191})
---- ok
-STATEMENT CREATE (:t1 {a:199,e:197,b:198,d:196,c:195})
---- ok
-STATEMENT CREATE (:t1 {b:NULL,c:202,d:203,a:201,e:204})
---- ok
-STATEMENT CREATE (:t1 {c:208,e:NULL,a:NULL,b:206,d:207})
---- ok
-STATEMENT CREATE (:t1 {c:214,e:210,a:213,d:212,b:211})
---- ok
-STATEMENT CREATE (:t1 {b:218,c:215,a:216,d:217,e:219})
---- ok
-STATEMENT CREATE (:t1 {b:223,e:221,d:222,a:220,c:224})
---- ok
-STATEMENT CREATE (:t1 {d:226,e:227,b:228,a:229,c:225})
---- ok
-STATEMENT CREATE (:t1 {a:234,c:231,b:232,e:230,d:233})
---- ok
-STATEMENT CREATE (:t1 {e:237,b:236,a:239,c:NULL,d:238})
---- ok
-STATEMENT CREATE (:t1 {e:NULL,c:244,b:240,a:243,d:NULL})
---- ok
-STATEMENT CREATE (:t1 {e:246,d:248,c:247,b:249,a:245})
---- ok
-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1
---- hash rowsort
30 tuples hashing to efdbaa4d180e7867bec1c4d897bd25b9

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1 ORDER BY col_1
---- hash rowsort
30 tuples hashing to efdbaa4d180e7867bec1c4d897bd25b9

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2
---- hash rowsort
30 tuples hashing to f5182c92f97475673097a499ce82ae64

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2 ORDER BY col_1, col_2
---- hash rowsort
30 tuples hashing to f5182c92f97475673097a499ce82ae64

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.e > t1.c OR t1.e < t1.d) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, abs(t1.b - t1.c) AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5
---- hash rowsort
11 tuples hashing to 625899fde153a4e776b22705ac30f7fb

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.e > t1.c OR t1.e < t1.d) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, abs(t1.b - t1.c) AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5 ORDER BY col_2, col_4
---- hash rowsort
11 tuples hashing to 625899fde153a4e776b22705ac30f7fb

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.d > t1.e RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, abs(t1.b - t1.c) AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5
---- hash rowsort
11 tuples hashing to 625899fde153a4e776b22705ac30f7fb

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.d > t1.e RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, abs(t1.b - t1.c) AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5 ORDER BY col_3, col_2, col_5, col_1, col_4
---- hash rowsort
11 tuples hashing to 625899fde153a4e776b22705ac30f7fb

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND t1.d > t1.e AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, abs(t1.b - t1.c) AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5
---- hash rowsort
11 tuples hashing to 625899fde153a4e776b22705ac30f7fb

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND t1.d > t1.e AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, abs(t1.b - t1.c) AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5 ORDER BY col_3, col_2, col_1, col_5
---- hash rowsort
11 tuples hashing to 625899fde153a4e776b22705ac30f7fb

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.e AS col_3, t1.d AS col_4, t1.a + t1.b * 2 AS col_5
---- hash rowsort
3 tuples hashing to a9ad8d5d73081dc1d90969f10a494afa

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.e AS col_3, t1.d AS col_4, t1.a + t1.b * 2 AS col_5 ORDER BY col_4, col_2, col_3, col_5
---- hash rowsort
3 tuples hashing to a9ad8d5d73081dc1d90969f10a494afa

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3
---- hash rowsort
30 tuples hashing to 0f041784f194ec63cf2a252e8dc9b8d2

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3 ORDER BY col_1, col_2, col_3
---- hash rowsort
30 tuples hashing to 0f041784f194ec63cf2a252e8dc9b8d2

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.e > t1.a AND t1.e < t1.b) AND t1.b > t1.c RETURN t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.c - t1.d AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.e > t1.a AND t1.e < t1.b) AND t1.b > t1.c RETURN t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.c - t1.d AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4 ORDER BY col_3, col_2
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.e > t1.a AND t1.e < t1.b) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.c - t1.d AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.e > t1.a AND t1.e < t1.b) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.c - t1.d AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4 ORDER BY col_2, col_3, col_1
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.b > t1.c RETURN t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.c - t1.d AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.b > t1.c RETURN t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.c - t1.d AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4 ORDER BY col_1, col_2
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.c - t1.d AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.c - t1.d AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4 ORDER BY col_4, col_2
---- 0


-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.d > t1.e RETURN t1.e AS col_1, t1.a AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.d - t1.e AS col_5
---- hash rowsort
16 tuples hashing to 1165928153cf03fadf7d270e4efc8a8b

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.d > t1.e RETURN t1.e AS col_1, t1.a AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.d - t1.e AS col_5 ORDER BY col_3, col_1, col_5, col_2, col_4
---- hash rowsort
16 tuples hashing to 1165928153cf03fadf7d270e4efc8a8b

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.e AS col_1, t1.a AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.d - t1.e AS col_5
---- hash rowsort
16 tuples hashing to 1165928153cf03fadf7d270e4efc8a8b

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.e AS col_1, t1.a AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.d - t1.e AS col_5 ORDER BY col_4, col_1, col_5, col_3, col_2
---- hash rowsort
16 tuples hashing to 1165928153cf03fadf7d270e4efc8a8b

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1
---- hash rowsort
30 tuples hashing to f54b614acd4cb798dba29ba05152f26d

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1 ORDER BY col_1
---- hash rowsort
30 tuples hashing to f54b614acd4cb798dba29ba05152f26d

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR t1.a > t1.b RETURN t1.d - t1.e AS col_1
---- hash rowsort
24 tuples hashing to b60e9de3a50740f40cca35b98a056b8c

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR t1.a > t1.b RETURN t1.d - t1.e AS col_1 ORDER BY col_1
---- hash rowsort
24 tuples hashing to b60e9de3a50740f40cca35b98a056b8c

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR t1.d > t1.e RETURN t1.d AS col_1
---- hash rowsort
22 tuples hashing to 785796b507b0f3998ec9b04e74fa565b

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR t1.d > t1.e RETURN t1.d AS col_1 ORDER BY col_1
---- hash rowsort
22 tuples hashing to 785796b507b0f3998ec9b04e74fa565b

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR t1.a > t1.b RETURN t1.d AS col_1
---- hash rowsort
22 tuples hashing to 785796b507b0f3998ec9b04e74fa565b

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR t1.a > t1.b RETURN t1.d AS col_1 ORDER BY col_1
---- hash rowsort
22 tuples hashing to 785796b507b0f3998ec9b04e74fa565b

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b RETURN abs(t1.a) AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.c AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, t1.a + t1.b * 2 + t1.c * 3 AS col_6, t1.a - t1.b AS col_7
---- hash rowsort
17 tuples hashing to de49937f8a76d58e90ee610d71c5d209

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b RETURN abs(t1.a) AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.c AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, t1.a + t1.b * 2 + t1.c * 3 AS col_6, t1.a - t1.b AS col_7 ORDER BY col_7, col_3, col_5, col_1, col_6
---- hash rowsort
17 tuples hashing to de49937f8a76d58e90ee610d71c5d209

-STATEMENT MATCH (t1:t1) RETURN t1.d AS col_1, t1.a AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3
---- hash rowsort
30 tuples hashing to df4215319598e8101abcb5c7509649e8

-STATEMENT MATCH (t1:t1) RETURN t1.d AS col_1, t1.a AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3 ORDER BY col_2, col_3
---- hash rowsort
30 tuples hashing to df4215319598e8101abcb5c7509649e8

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.b > t1.c RETURN t1.d - t1.e AS col_1, t1.c - t1.d AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3
---- hash rowsort
24 tuples hashing to 5026537fcfcc7d06e2928e16f9b160fc

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.b > t1.c RETURN t1.d - t1.e AS col_1, t1.c - t1.d AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3 ORDER BY col_2, col_1, col_3
---- hash rowsort
24 tuples hashing to 5026537fcfcc7d06e2928e16f9b160fc

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR t1.b > t1.c OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.d - t1.e AS col_1, t1.c - t1.d AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3
---- hash rowsort
24 tuples hashing to 5026537fcfcc7d06e2928e16f9b160fc

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR t1.b > t1.c OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.d - t1.e AS col_1, t1.c - t1.d AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3 ORDER BY col_2, col_1, col_3
---- hash rowsort
24 tuples hashing to 5026537fcfcc7d06e2928e16f9b160fc

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.d - t1.e AS col_1, t1.c - t1.d AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3
---- hash rowsort
24 tuples hashing to 5026537fcfcc7d06e2928e16f9b160fc

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.d - t1.e AS col_1, t1.c - t1.d AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3 ORDER BY col_2, col_3, col_1
---- hash rowsort
24 tuples hashing to 5026537fcfcc7d06e2928e16f9b160fc

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.b > t1.c OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.d - t1.e AS col_1, t1.c - t1.d AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3
---- hash rowsort
24 tuples hashing to 5026537fcfcc7d06e2928e16f9b160fc

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.b > t1.c OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.d - t1.e AS col_1, t1.c - t1.d AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3 ORDER BY col_1, col_2
---- hash rowsort
24 tuples hashing to 5026537fcfcc7d06e2928e16f9b160fc

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.c AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.d - t1.e AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_6
---- hash rowsort
30 tuples hashing to 704e7ed2a17c496a3ca2ea1e4441eb40

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.c AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.d - t1.e AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_6 ORDER BY col_4, col_5
---- hash rowsort
30 tuples hashing to 704e7ed2a17c496a3ca2ea1e4441eb40

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.c - t1.d AS col_4, t1.b - t1.c AS col_5, t1.c AS col_6
---- hash rowsort
13 tuples hashing to 014a4e77c58e1d60b4cbbcae9e6fd9f8

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.c - t1.d AS col_4, t1.b - t1.c AS col_5, t1.c AS col_6 ORDER BY col_1, col_5, col_3, col_2
---- hash rowsort
13 tuples hashing to 014a4e77c58e1d60b4cbbcae9e6fd9f8

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND t1.d > t1.e AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2
---- hash rowsort
7 tuples hashing to 16eb6166e5b95fff42a33edd3a48d743

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND t1.d > t1.e AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2 ORDER BY col_2, col_1
---- hash rowsort
7 tuples hashing to 16eb6166e5b95fff42a33edd3a48d743

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND NOT (t1.d >= 110 AND t1.d <= 150) AND t1.d > t1.e RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2
---- hash rowsort
7 tuples hashing to 16eb6166e5b95fff42a33edd3a48d743

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND NOT (t1.d >= 110 AND t1.d <= 150) AND t1.d > t1.e RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2 ORDER BY col_2, col_1
---- hash rowsort
7 tuples hashing to 16eb6166e5b95fff42a33edd3a48d743

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.e > t1.c OR t1.e < t1.d) AND t1.d > t1.e RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2
---- hash rowsort
7 tuples hashing to 16eb6166e5b95fff42a33edd3a48d743

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.e > t1.c OR t1.e < t1.d) AND t1.d > t1.e RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2 ORDER BY col_1, col_2
---- hash rowsort
7 tuples hashing to 16eb6166e5b95fff42a33edd3a48d743

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND NOT (t1.d >= 110 AND t1.d <= 150) AND t1.a > t1.b RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.b - t1.c AS col_3, t1.b AS col_4, abs(t1.a) AS col_5, t1.a - t1.b AS col_6
---- hash rowsort
9 tuples hashing to 53281ade33cc2a4f0c7178ec3fb32ac9

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND NOT (t1.d >= 110 AND t1.d <= 150) AND t1.a > t1.b RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.b - t1.c AS col_3, t1.b AS col_4, abs(t1.a) AS col_5, t1.a - t1.b AS col_6 ORDER BY col_5, col_1, col_3, col_4, col_2, col_6
---- hash rowsort
9 tuples hashing to 53281ade33cc2a4f0c7178ec3fb32ac9

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.a > t1.b AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.b - t1.c AS col_3, t1.b AS col_4, abs(t1.a) AS col_5, t1.a - t1.b AS col_6
---- hash rowsort
9 tuples hashing to 53281ade33cc2a4f0c7178ec3fb32ac9

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.a > t1.b AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.b - t1.c AS col_3, t1.b AS col_4, abs(t1.a) AS col_5, t1.a - t1.b AS col_6 ORDER BY col_6, col_5, col_1, col_2, col_4
---- hash rowsort
9 tuples hashing to 53281ade33cc2a4f0c7178ec3fb32ac9

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND NOT (t1.d >= 110 AND t1.d <= 150) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.b - t1.c AS col_3, t1.b AS col_4, abs(t1.a) AS col_5, t1.a - t1.b AS col_6
---- hash rowsort
9 tuples hashing to 53281ade33cc2a4f0c7178ec3fb32ac9

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND NOT (t1.d >= 110 AND t1.d <= 150) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.b - t1.c AS col_3, t1.b AS col_4, abs(t1.a) AS col_5, t1.a - t1.b AS col_6 ORDER BY col_1, col_2, col_3, col_4, col_6
---- hash rowsort
9 tuples hashing to 53281ade33cc2a4f0c7178ec3fb32ac9

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.a > t1.b RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.b - t1.c AS col_3, t1.b AS col_4, abs(t1.a) AS col_5, t1.a - t1.b AS col_6
---- hash rowsort
9 tuples hashing to 53281ade33cc2a4f0c7178ec3fb32ac9

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.a > t1.b RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.b - t1.c AS col_3, t1.b AS col_4, abs(t1.a) AS col_5, t1.a - t1.b AS col_6 ORDER BY col_4, col_3, col_1
---- hash rowsort
9 tuples hashing to 53281ade33cc2a4f0c7178ec3fb32ac9

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR t1.b > t1.c RETURN t1.a - t1.b AS col_1, t1.d AS col_2, t1.c - t1.d AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5
---- hash rowsort
25 tuples hashing to 576840b23ec5d6d330aa4d3e0dc39f72

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR t1.b > t1.c RETURN t1.a - t1.b AS col_1, t1.d AS col_2, t1.c - t1.d AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5 ORDER BY col_3, col_5, col_1, col_2
---- hash rowsort
25 tuples hashing to 576840b23ec5d6d330aa4d3e0dc39f72

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a - t1.b AS col_1, t1.d AS col_2, t1.c - t1.d AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5
---- hash rowsort
25 tuples hashing to 576840b23ec5d6d330aa4d3e0dc39f72

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a - t1.b AS col_1, t1.d AS col_2, t1.c - t1.d AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5 ORDER BY col_5, col_1, col_3
---- hash rowsort
25 tuples hashing to 576840b23ec5d6d330aa4d3e0dc39f72

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.d - t1.e AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.a + t1.b * 2 AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, t1.b - t1.c AS col_5
---- hash rowsort
10 tuples hashing to 8db9d8b1ba3193ca98ca00b75b91c254

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.d - t1.e AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.a + t1.b * 2 AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, t1.b - t1.c AS col_5 ORDER BY col_3, col_1, col_4
---- hash rowsort
10 tuples hashing to 8db9d8b1ba3193ca98ca00b75b91c254

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, abs(t1.b - t1.c) AS col_3
---- hash rowsort
30 tuples hashing to 92f7b45a92fe532b1299be0000c55ad3

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, abs(t1.b - t1.c) AS col_3 ORDER BY col_3, col_2, col_1
---- hash rowsort
30 tuples hashing to 92f7b45a92fe532b1299be0000c55ad3

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.b > t1.c RETURN t1.a - t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.b AS col_3, abs(t1.a) AS col_4, t1.a AS col_5
---- 1
-2|1902|129|127|127

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.b > t1.c RETURN t1.a - t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.b AS col_3, abs(t1.a) AS col_4, t1.a AS col_5 ORDER BY col_3, col_2, col_4, col_5
---- 1
-2|1902|129|127|127

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a - t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.b AS col_3, abs(t1.a) AS col_4, t1.a AS col_5
---- 1
-2|1902|129|127|127

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a - t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.b AS col_3, abs(t1.a) AS col_4, t1.a AS col_5 ORDER BY col_1, col_2, col_4
---- 1
-2|1902|129|127|127

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.b > t1.c AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a - t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.b AS col_3, abs(t1.a) AS col_4, t1.a AS col_5
---- 1
-2|1902|129|127|127

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.b > t1.c AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a - t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.b AS col_3, abs(t1.a) AS col_4, t1.a AS col_5 ORDER BY col_5, col_1, col_4, col_3, col_2
---- 1
-2|1902|129|127|127

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.d > t1.e AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.b AS col_2, t1.c AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_6, t1.e AS col_7
---- hash rowsort
7 tuples hashing to c6962d3e1379a8ba798e11d0212e4c52

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.d > t1.e AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.b AS col_2, t1.c AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_6, t1.e AS col_7 ORDER BY col_2, col_5, col_4, col_7, col_1, col_3
---- hash rowsort
7 tuples hashing to c6962d3e1379a8ba798e11d0212e4c52

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.d > t1.e RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.b AS col_2, t1.c AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_6, t1.e AS col_7
---- hash rowsort
7 tuples hashing to c6962d3e1379a8ba798e11d0212e4c52

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.d > t1.e RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.b AS col_2, t1.c AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_6, t1.e AS col_7 ORDER BY col_4, col_3, col_1
---- hash rowsort
7 tuples hashing to c6962d3e1379a8ba798e11d0212e4c52

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND NOT (t1.d >= 110 AND t1.d <= 150) AND t1.d > t1.e RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.b AS col_2, t1.c AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_6, t1.e AS col_7
---- hash rowsort
7 tuples hashing to c6962d3e1379a8ba798e11d0212e4c52

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND NOT (t1.d >= 110 AND t1.d <= 150) AND t1.d > t1.e RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.b AS col_2, t1.c AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_6, t1.e AS col_7 ORDER BY col_5, col_4, col_2
---- hash rowsort
7 tuples hashing to c6962d3e1379a8ba798e11d0212e4c52

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.e > t1.c OR t1.e < t1.d) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.b AS col_3
---- hash rowsort
8 tuples hashing to 751c63ea90408c884abfeed87b4bb660

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.e > t1.c OR t1.e < t1.d) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.b AS col_3 ORDER BY col_1, col_3
---- hash rowsort
8 tuples hashing to 751c63ea90408c884abfeed87b4bb660

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.c > t1.d RETURN t1.a AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.b AS col_3
---- hash rowsort
8 tuples hashing to 751c63ea90408c884abfeed87b4bb660

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.c > t1.d RETURN t1.a AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.b AS col_3 ORDER BY col_3, col_1, col_2
---- hash rowsort
8 tuples hashing to 751c63ea90408c884abfeed87b4bb660

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.c > t1.d AND (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.b AS col_3
---- hash rowsort
8 tuples hashing to 751c63ea90408c884abfeed87b4bb660

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.c > t1.d AND (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.b AS col_3 ORDER BY col_2, col_1
---- hash rowsort
8 tuples hashing to 751c63ea90408c884abfeed87b4bb660

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR t1.b > t1.c RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.d - t1.e AS col_3, t1.e AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, abs(t1.b - t1.c) AS col_6, t1.a + t1.b * 2 + t1.c * 3 AS col_7
---- hash rowsort
26 tuples hashing to a296d6044702bfcca834c0a3e55f6ba2

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR t1.b > t1.c RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.d - t1.e AS col_3, t1.e AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, abs(t1.b - t1.c) AS col_6, t1.a + t1.b * 2 + t1.c * 3 AS col_7 ORDER BY col_7, col_5, col_6
---- hash rowsort
26 tuples hashing to a296d6044702bfcca834c0a3e55f6ba2

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.b > t1.c OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.d - t1.e AS col_3, t1.e AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, abs(t1.b - t1.c) AS col_6, t1.a + t1.b * 2 + t1.c * 3 AS col_7
---- hash rowsort
26 tuples hashing to a296d6044702bfcca834c0a3e55f6ba2

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.b > t1.c OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.d - t1.e AS col_3, t1.e AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, abs(t1.b - t1.c) AS col_6, t1.a + t1.b * 2 + t1.c * 3 AS col_7 ORDER BY col_2, col_6, col_4, col_5, col_3, col_1, col_7
---- hash rowsort
26 tuples hashing to a296d6044702bfcca834c0a3e55f6ba2

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND t1.b > t1.c AND t1.a > t1.b RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND t1.b > t1.c AND t1.a > t1.b RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2 ORDER BY col_2, col_1
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND t1.a > t1.b AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND t1.a > t1.b AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2 ORDER BY col_1, col_2
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.e > t1.a AND t1.e < t1.b) AND t1.a > t1.b RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.e > t1.a AND t1.e < t1.b) AND t1.a > t1.b RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2 ORDER BY col_2, col_1
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, abs(t1.b - t1.c) AS col_2, t1.d AS col_3, t1.d - t1.e AS col_4
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, abs(t1.b - t1.c) AS col_2, t1.d AS col_3, t1.d - t1.e AS col_4 ORDER BY col_3, col_1, col_4, col_2
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, abs(t1.b - t1.c) AS col_2, t1.d AS col_3, t1.d - t1.e AS col_4
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, abs(t1.b - t1.c) AS col_2, t1.d AS col_3, t1.d - t1.e AS col_4 ORDER BY col_1, col_2, col_4
---- 0


-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, abs(t1.b - t1.c) AS col_2, t1.d AS col_3, t1.d - t1.e AS col_4
---- 0


-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, abs(t1.b - t1.c) AS col_2, t1.d AS col_3, t1.d - t1.e AS col_4 ORDER BY col_3, col_4, col_1, col_2
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, abs(t1.b - t1.c) AS col_2, t1.d AS col_3, t1.d - t1.e AS col_4
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, abs(t1.b - t1.c) AS col_2, t1.d AS col_3, t1.d - t1.e AS col_4 ORDER BY col_1, col_3
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.a > t1.b AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.b - t1.c AS col_1, t1.b AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.a > t1.b AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.b - t1.c AS col_1, t1.b AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3 ORDER BY col_3, col_1, col_2
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.a > t1.b RETURN t1.b - t1.c AS col_1, t1.b AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.a > t1.b RETURN t1.b - t1.c AS col_1, t1.b AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3 ORDER BY col_3, col_1
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.a > t1.b RETURN t1.b - t1.c AS col_1, t1.b AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.a > t1.b RETURN t1.b - t1.c AS col_1, t1.b AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3 ORDER BY col_1, col_2, col_3
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.b - t1.c AS col_1, t1.b AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.b - t1.c AS col_1, t1.b AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3 ORDER BY col_1, col_2, col_3
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a - t1.b AS col_2, t1.e AS col_3, t1.d - t1.e AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5
---- hash rowsort
13 tuples hashing to e7caf19cab674a9b810cf6eecbc4dd1f

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a - t1.b AS col_2, t1.e AS col_3, t1.d - t1.e AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5 ORDER BY col_2, col_3
---- hash rowsort
13 tuples hashing to e7caf19cab674a9b810cf6eecbc4dd1f

-STATEMENT MATCH (t1:t1) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1
---- hash rowsort
30 tuples hashing to 62634e04a17da0e006feac1d867155ac

-STATEMENT MATCH (t1:t1) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1 ORDER BY col_1
---- hash rowsort
30 tuples hashing to 62634e04a17da0e006feac1d867155ac

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a - t1.b AS col_2, abs(t1.b - t1.c) AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5, t1.b - t1.c AS col_6
---- hash rowsort
16 tuples hashing to 666008eb6a2f5ac71610c3222b7e526b

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a - t1.b AS col_2, abs(t1.b - t1.c) AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5, t1.b - t1.c AS col_6 ORDER BY col_6, col_5, col_3, col_4
---- hash rowsort
16 tuples hashing to 666008eb6a2f5ac71610c3222b7e526b

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.a > t1.b RETURN t1.a - t1.b AS col_1, t1.a AS col_2, t1.c AS col_3
---- hash rowsort
8 tuples hashing to ee8e768686f5954a5ddd0a36e7dc490e

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.a > t1.b RETURN t1.a - t1.b AS col_1, t1.a AS col_2, t1.c AS col_3 ORDER BY col_1, col_3, col_2
---- hash rowsort
8 tuples hashing to ee8e768686f5954a5ddd0a36e7dc490e

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a - t1.b AS col_1, t1.a AS col_2, t1.c AS col_3
---- hash rowsort
8 tuples hashing to ee8e768686f5954a5ddd0a36e7dc490e

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a - t1.b AS col_1, t1.a AS col_2, t1.c AS col_3 ORDER BY col_2, col_3, col_1
---- hash rowsort
8 tuples hashing to ee8e768686f5954a5ddd0a36e7dc490e

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.b - t1.c AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.b AS col_4, t1.c - t1.d AS col_5, t1.a + t1.b * 2 AS col_6
---- hash rowsort
30 tuples hashing to e803e5295107a58c50597423e0b571b7

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.b - t1.c AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.b AS col_4, t1.c - t1.d AS col_5, t1.a + t1.b * 2 AS col_6 ORDER BY col_4, col_5, col_1, col_2, col_3
---- hash rowsort
30 tuples hashing to e803e5295107a58c50597423e0b571b7

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.d - t1.e AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.a AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5
---- hash rowsort
2 tuples hashing to 804f8389c33b35bc51e0fc6d89adf857

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.d - t1.e AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.a AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5 ORDER BY col_5, col_2, col_4
---- hash rowsort
2 tuples hashing to 804f8389c33b35bc51e0fc6d89adf857

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.a > t1.b RETURN t1.a + t1.b * 2 AS col_1
---- hash rowsort
18 tuples hashing to 5d782557f607a892c3a0d52c06aae3ca

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.a > t1.b RETURN t1.a + t1.b * 2 AS col_1 ORDER BY col_1
---- hash rowsort
18 tuples hashing to 5d782557f607a892c3a0d52c06aae3ca

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 AS col_1
---- hash rowsort
18 tuples hashing to 5d782557f607a892c3a0d52c06aae3ca

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 AS col_1 ORDER BY col_1
---- hash rowsort
18 tuples hashing to 5d782557f607a892c3a0d52c06aae3ca

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.a + t1.b * 2 AS col_3, t1.a AS col_4, t1.d - t1.e AS col_5, t1.b AS col_6
---- hash rowsort
11 tuples hashing to 3bcdb2890ff4528da0929919501bb028

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.a + t1.b * 2 AS col_3, t1.a AS col_4, t1.d - t1.e AS col_5, t1.b AS col_6 ORDER BY col_6, col_2, col_1, col_4, col_5, col_3
---- hash rowsort
11 tuples hashing to 3bcdb2890ff4528da0929919501bb028

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR t1.b > t1.c OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.b - t1.c AS col_2, abs(t1.a) AS col_3, abs(t1.b - t1.c) AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_6
---- hash rowsort
19 tuples hashing to 79b36002d97af06b70dbd04e09768ea6

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR t1.b > t1.c OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.b - t1.c AS col_2, abs(t1.a) AS col_3, abs(t1.b - t1.c) AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_6 ORDER BY col_2, col_4, col_5, col_3
---- hash rowsort
19 tuples hashing to 79b36002d97af06b70dbd04e09768ea6

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.b > t1.c OR (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.b - t1.c AS col_2, abs(t1.a) AS col_3, abs(t1.b - t1.c) AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_6
---- hash rowsort
19 tuples hashing to 79b36002d97af06b70dbd04e09768ea6

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.b > t1.c OR (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.b - t1.c AS col_2, abs(t1.a) AS col_3, abs(t1.b - t1.c) AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_6 ORDER BY col_3, col_4, col_6, col_1, col_5
---- hash rowsort
19 tuples hashing to 79b36002d97af06b70dbd04e09768ea6

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.e AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3
---- hash rowsort
11 tuples hashing to acb7faddee415dc26b2a6146b018a2e5

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.e AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3 ORDER BY col_2, col_1
---- hash rowsort
11 tuples hashing to acb7faddee415dc26b2a6146b018a2e5

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.e > t1.a AND t1.e < t1.b) RETURN t1.e AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3
---- hash rowsort
11 tuples hashing to acb7faddee415dc26b2a6146b018a2e5

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.e > t1.a AND t1.e < t1.b) RETURN t1.e AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3 ORDER BY col_2, col_1, col_3
---- hash rowsort
11 tuples hashing to acb7faddee415dc26b2a6146b018a2e5

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND t1.d > t1.e RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.d - t1.e AS col_2, t1.d AS col_3
---- hash rowsort
7 tuples hashing to 8604975782e66cb0d8a41bbc6616943b

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND t1.d > t1.e RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.d - t1.e AS col_2, t1.d AS col_3 ORDER BY col_1, col_2, col_3
---- hash rowsort
7 tuples hashing to 8604975782e66cb0d8a41bbc6616943b

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.d - t1.e AS col_2, t1.d AS col_3
---- hash rowsort
7 tuples hashing to 8604975782e66cb0d8a41bbc6616943b

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.d - t1.e AS col_2, t1.d AS col_3 ORDER BY col_2, col_3, col_1
---- hash rowsort
7 tuples hashing to 8604975782e66cb0d8a41bbc6616943b

-STATEMENT MATCH (t1:t1) RETURN t1.a AS col_1, t1.b - t1.c AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3
---- hash rowsort
30 tuples hashing to 04e6fdff07da4c8f095e13082e8e00f4

-STATEMENT MATCH (t1:t1) RETURN t1.a AS col_1, t1.b - t1.c AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3 ORDER BY col_1, col_3
---- hash rowsort
30 tuples hashing to 04e6fdff07da4c8f095e13082e8e00f4

-STATEMENT MATCH (t1:t1) RETURN abs(t1.b - t1.c) AS col_1, t1.e AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5, t1.c - t1.d AS col_6, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_7
---- hash rowsort
30 tuples hashing to 00d975fcd333dceae276901cb144bc31

-STATEMENT MATCH (t1:t1) RETURN abs(t1.b - t1.c) AS col_1, t1.e AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5, t1.c - t1.d AS col_6, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_7 ORDER BY col_4, col_3, col_1, col_7, col_2
---- hash rowsort
30 tuples hashing to 00d975fcd333dceae276901cb144bc31

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a - t1.b AS col_1
---- hash rowsort
24 tuples hashing to e06610bd9fa1097f42e363fcc8d6546f

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a - t1.b AS col_1 ORDER BY col_1
---- hash rowsort
24 tuples hashing to e06610bd9fa1097f42e363fcc8d6546f

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND t1.b > t1.c AND t1.c > t1.d RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1
---- 1
1918

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND t1.b > t1.c AND t1.c > t1.d RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1 ORDER BY col_1
---- 1
1918

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND t1.b > t1.c AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1
---- 1
1918

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND t1.b > t1.c AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1 ORDER BY col_1
---- 1
1918

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND t1.c > t1.d AND t1.b > t1.c RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1
---- 1
1918

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND t1.c > t1.d AND t1.b > t1.c RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1 ORDER BY col_1
---- 1
1918

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1
---- hash rowsort
30 tuples hashing to 445b0172de37f3ca0ed777000309cef8

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1 ORDER BY col_1
---- hash rowsort
30 tuples hashing to 445b0172de37f3ca0ed777000309cef8

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.b AS col_1, t1.a + t1.b * 2 AS col_2, t1.a AS col_3
---- 2
139|416|138
143|428|142

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.b AS col_1, t1.a + t1.b * 2 AS col_2, t1.a AS col_3 ORDER BY col_3, col_1, col_2
---- 2
139|416|138
143|428|142

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.b > t1.c RETURN t1.b AS col_1, t1.a + t1.b * 2 AS col_2, t1.a AS col_3
---- 2
139|416|138
143|428|142

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.b > t1.c RETURN t1.b AS col_1, t1.a + t1.b * 2 AS col_2, t1.a AS col_3 ORDER BY col_1, col_3
---- 2
139|416|138
143|428|142

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.b > t1.c AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.b AS col_1, t1.a + t1.b * 2 AS col_2, t1.a AS col_3
---- 2
139|416|138
143|428|142

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.b > t1.c AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.b AS col_1, t1.a + t1.b * 2 AS col_2, t1.a AS col_3 ORDER BY col_2, col_1
---- 2
139|416|138
143|428|142

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN abs(t1.a) AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.c - t1.d AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_6, t1.b AS col_7
---- hash rowsort
8 tuples hashing to a50fc61a88af6982597f73b3314f59da

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN abs(t1.a) AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.c - t1.d AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_6, t1.b AS col_7 ORDER BY col_4, col_2
---- hash rowsort
8 tuples hashing to a50fc61a88af6982597f73b3314f59da

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN abs(t1.a) AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.c - t1.d AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_6, t1.b AS col_7
---- hash rowsort
8 tuples hashing to a50fc61a88af6982597f73b3314f59da

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN abs(t1.a) AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.c - t1.d AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_6, t1.b AS col_7 ORDER BY col_6, col_1, col_5, col_3
---- hash rowsort
8 tuples hashing to a50fc61a88af6982597f73b3314f59da

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.c - t1.d AS col_1, t1.d - t1.e AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5
---- hash rowsort
30 tuples hashing to 0791d44e972a767c2504291f010d4972

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.c - t1.d AS col_1, t1.d - t1.e AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5 ORDER BY col_1, col_4, col_3
---- hash rowsort
30 tuples hashing to 0791d44e972a767c2504291f010d4972

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.c - t1.d AS col_1, t1.d - t1.e AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, abs(t1.b - t1.c) AS col_5, abs(t1.a) AS col_6
---- hash rowsort
2 tuples hashing to 9eaadc75d7510bdbda42f0e20cb844ce

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.c - t1.d AS col_1, t1.d - t1.e AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, abs(t1.b - t1.c) AS col_5, abs(t1.a) AS col_6 ORDER BY col_1, col_3, col_2, col_5, col_4, col_6
---- hash rowsort
2 tuples hashing to 9eaadc75d7510bdbda42f0e20cb844ce

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.b - t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, abs(t1.b - t1.c) AS col_3, t1.e AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, t1.a + t1.b * 2 AS col_6
---- hash rowsort
3 tuples hashing to 7c35a636d311a88ef8bb09c15b20ad71

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.b - t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, abs(t1.b - t1.c) AS col_3, t1.e AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, t1.a + t1.b * 2 AS col_6 ORDER BY col_4, col_1, col_3, col_6, col_2
---- hash rowsort
3 tuples hashing to 7c35a636d311a88ef8bb09c15b20ad71

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.b - t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, abs(t1.b - t1.c) AS col_3, t1.e AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, t1.a + t1.b * 2 AS col_6
---- hash rowsort
3 tuples hashing to 7c35a636d311a88ef8bb09c15b20ad71

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.b - t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, abs(t1.b - t1.c) AS col_3, t1.e AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, t1.a + t1.b * 2 AS col_6 ORDER BY col_1, col_2, col_3
---- hash rowsort
3 tuples hashing to 7c35a636d311a88ef8bb09c15b20ad71

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.a AS col_5
---- hash rowsort
26 tuples hashing to cae83537053e6a1c420be61ebf16a9de

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.a AS col_5 ORDER BY col_4, col_5, col_2, col_1, col_3
---- hash rowsort
26 tuples hashing to cae83537053e6a1c420be61ebf16a9de

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.a - t1.b AS col_4, abs(t1.a) AS col_5, t1.d AS col_6
---- hash rowsort
19 tuples hashing to 0446a9accb80cccec6bc4d954353b3d5

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.a - t1.b AS col_4, abs(t1.a) AS col_5, t1.d AS col_6 ORDER BY col_4, col_1, col_3
---- hash rowsort
19 tuples hashing to 0446a9accb80cccec6bc4d954353b3d5

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.a - t1.b AS col_4, abs(t1.a) AS col_5, t1.d AS col_6
---- hash rowsort
19 tuples hashing to 0446a9accb80cccec6bc4d954353b3d5

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.a - t1.b AS col_4, abs(t1.a) AS col_5, t1.d AS col_6 ORDER BY col_3, col_2, col_1, col_6
---- hash rowsort
19 tuples hashing to 0446a9accb80cccec6bc4d954353b3d5

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.e > t1.a AND t1.e < t1.b) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, abs(t1.b - t1.c) AS col_5
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.e > t1.a AND t1.e < t1.b) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, abs(t1.b - t1.c) AS col_5 ORDER BY col_2, col_5, col_4, col_1
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, abs(t1.b - t1.c) AS col_5
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, abs(t1.b - t1.c) AS col_5 ORDER BY col_3, col_2
---- 0


-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.e AS col_1, abs(t1.a) AS col_2, t1.a AS col_3, t1.b - t1.c AS col_4, t1.c - t1.d AS col_5, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_6, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_7
---- hash rowsort
17 tuples hashing to 7b07e3c0f239408babff1fbcf766a95b

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.e AS col_1, abs(t1.a) AS col_2, t1.a AS col_3, t1.b - t1.c AS col_4, t1.c - t1.d AS col_5, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_6, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_7 ORDER BY col_4, col_1, col_3
---- hash rowsort
17 tuples hashing to 7b07e3c0f239408babff1fbcf766a95b

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.a - t1.b AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.c - t1.d AS col_5, abs(t1.a) AS col_6, t1.a + t1.b * 2 + t1.c * 3 AS col_7
---- hash rowsort
2 tuples hashing to ed079ee74d21042f3af7d5b35a3f49c7

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.a - t1.b AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.c - t1.d AS col_5, abs(t1.a) AS col_6, t1.a + t1.b * 2 + t1.c * 3 AS col_7 ORDER BY col_7, col_3
---- hash rowsort
2 tuples hashing to ed079ee74d21042f3af7d5b35a3f49c7

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2
---- hash rowsort
30 tuples hashing to 0bdb710608975d536cdcc249e7766277

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2 ORDER BY col_2, col_1
---- hash rowsort
30 tuples hashing to 0bdb710608975d536cdcc249e7766277

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR NOT (t1.d >= 110 AND t1.d <= 150) OR t1.d > t1.e RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a - t1.b AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, abs(t1.b - t1.c) AS col_5, t1.d AS col_6
---- hash rowsort
26 tuples hashing to 0e7e4265ef0ff00ba6f163a5f391c6b6

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR NOT (t1.d >= 110 AND t1.d <= 150) OR t1.d > t1.e RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a - t1.b AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, abs(t1.b - t1.c) AS col_5, t1.d AS col_6 ORDER BY col_2, col_4, col_3, col_5
---- hash rowsort
26 tuples hashing to 0e7e4265ef0ff00ba6f163a5f391c6b6

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR NOT (t1.d >= 110 AND t1.d <= 150) OR t1.b > t1.c RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a - t1.b AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, abs(t1.b - t1.c) AS col_5, t1.d AS col_6
---- hash rowsort
26 tuples hashing to 0e7e4265ef0ff00ba6f163a5f391c6b6

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR NOT (t1.d >= 110 AND t1.d <= 150) OR t1.b > t1.c RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a - t1.b AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, abs(t1.b - t1.c) AS col_5, t1.d AS col_6 ORDER BY col_1, col_2, col_3
---- hash rowsort
26 tuples hashing to 0e7e4265ef0ff00ba6f163a5f391c6b6

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR t1.b > t1.c OR t1.d > t1.e RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a - t1.b AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, abs(t1.b - t1.c) AS col_5, t1.d AS col_6
---- hash rowsort
26 tuples hashing to 0e7e4265ef0ff00ba6f163a5f391c6b6

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR t1.b > t1.c OR t1.d > t1.e RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a - t1.b AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, abs(t1.b - t1.c) AS col_5, t1.d AS col_6 ORDER BY col_3, col_4, col_5, col_6, col_1, col_2
---- hash rowsort
26 tuples hashing to 0e7e4265ef0ff00ba6f163a5f391c6b6

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.b - t1.c AS col_1
---- hash rowsort
26 tuples hashing to b5a149362df4e3e63625f989babd69f3

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.b - t1.c AS col_1 ORDER BY col_1
---- hash rowsort
26 tuples hashing to b5a149362df4e3e63625f989babd69f3

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, abs(t1.b - t1.c) AS col_4, t1.b - t1.c AS col_5
---- 1
106|1067|1612|1|-1

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, abs(t1.b - t1.c) AS col_4, t1.b - t1.c AS col_5 ORDER BY col_1, col_5, col_2, col_3
---- 1
106|1067|1612|1|-1

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, abs(t1.b - t1.c) AS col_3, t1.c - t1.d AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5
---- hash rowsort
22 tuples hashing to eb1aebf3bea3b025c376cea652805430

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, abs(t1.b - t1.c) AS col_3, t1.c - t1.d AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5 ORDER BY col_2, col_5
---- hash rowsort
22 tuples hashing to eb1aebf3bea3b025c376cea652805430

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, abs(t1.b - t1.c) AS col_3, t1.c - t1.d AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5
---- hash rowsort
22 tuples hashing to eb1aebf3bea3b025c376cea652805430

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, abs(t1.b - t1.c) AS col_3, t1.c - t1.d AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5 ORDER BY col_4, col_1, col_3
---- hash rowsort
22 tuples hashing to eb1aebf3bea3b025c376cea652805430

-STATEMENT MATCH (t1:t1) RETURN t1.b - t1.c AS col_1, t1.a + t1.b * 2 AS col_2, t1.c AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4
---- hash rowsort
30 tuples hashing to 06fab51c5d572097d0468c8bfc192e5e

-STATEMENT MATCH (t1:t1) RETURN t1.b - t1.c AS col_1, t1.a + t1.b * 2 AS col_2, t1.c AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4 ORDER BY col_3, col_1
---- hash rowsort
30 tuples hashing to 06fab51c5d572097d0468c8bfc192e5e

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.a > t1.b AND t1.d > t1.e RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.a + t1.b * 2 AS col_3
---- 2
333|132|391
333|182|544

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.a > t1.b AND t1.d > t1.e RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.a + t1.b * 2 AS col_3 ORDER BY col_1, col_3, col_2
---- 2
333|132|391
333|182|544

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND t1.a > t1.b AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.a + t1.b * 2 AS col_3
---- 2
333|132|391
333|182|544

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND t1.a > t1.b AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.a + t1.b * 2 AS col_3 ORDER BY col_1, col_2
---- 2
333|132|391
333|182|544

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.a > t1.b RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.a + t1.b * 2 AS col_3
---- 2
333|132|391
333|182|544

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.a > t1.b RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.a + t1.b * 2 AS col_3 ORDER BY col_3, col_2, col_1
---- 2
333|132|391
333|182|544

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.d > t1.e RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.a + t1.b * 2 AS col_3
---- 2
333|132|391
333|182|544

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.d > t1.e RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.a + t1.b * 2 AS col_3 ORDER BY col_1, col_2
---- 2
333|132|391
333|182|544

-STATEMENT MATCH (t1:t1) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1
---- hash rowsort
30 tuples hashing to 0075716954dbc259c5e8ac65568a6fa7

-STATEMENT MATCH (t1:t1) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1 ORDER BY col_1
---- hash rowsort
30 tuples hashing to 0075716954dbc259c5e8ac65568a6fa7

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3
---- hash rowsort
8 tuples hashing to 648507a4dbddda84349348d9e729301a

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3 ORDER BY col_2, col_3
---- hash rowsort
8 tuples hashing to 648507a4dbddda84349348d9e729301a

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.b > t1.c AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.b - t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.a + t1.b * 2 AS col_3
---- 1
1|2878|579

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.b > t1.c AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.b - t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.a + t1.b * 2 AS col_3 ORDER BY col_3, col_1, col_2
---- 1
1|2878|579

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.b > t1.c RETURN t1.b - t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.a + t1.b * 2 AS col_3
---- 1
1|2878|579

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.b > t1.c RETURN t1.b - t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.a + t1.b * 2 AS col_3 ORDER BY col_2, col_1
---- 1
1|2878|579

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.e > t1.a AND t1.e < t1.b) AND t1.b > t1.c RETURN t1.b - t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.a + t1.b * 2 AS col_3
---- 1
1|2878|579

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.e > t1.a AND t1.e < t1.b) AND t1.b > t1.c RETURN t1.b - t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.a + t1.b * 2 AS col_3 ORDER BY col_1, col_3, col_2
---- 1
1|2878|579

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.a - t1.b AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5, abs(t1.b - t1.c) AS col_6
---- hash rowsort
3 tuples hashing to 9d671178044eae485f5cf0534e508635

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.a - t1.b AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5, abs(t1.b - t1.c) AS col_6 ORDER BY col_2, col_1, col_5, col_4, col_6
---- hash rowsort
3 tuples hashing to 9d671178044eae485f5cf0534e508635

-STATEMENT MATCH (t1:t1) RETURN t1.d AS col_1, t1.c - t1.d AS col_2
---- hash rowsort
30 tuples hashing to 91395206c5a9ae2e3ba90eaaf9fbcad3

-STATEMENT MATCH (t1:t1) RETURN t1.d AS col_1, t1.c - t1.d AS col_2 ORDER BY col_2, col_1
---- hash rowsort
30 tuples hashing to 91395206c5a9ae2e3ba90eaaf9fbcad3

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1
---- 1
0

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1 ORDER BY col_1
---- 1
0

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.b > t1.c AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1
---- 1
0

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.b > t1.c AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1 ORDER BY col_1
---- 1
0

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND t1.d > t1.e RETURN t1.e AS col_1
---- 4
126
135
230
246

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND t1.d > t1.e RETURN t1.e AS col_1 ORDER BY col_1
---- 4
126
135
230
246

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN abs(t1.a) AS col_1
---- hash rowsort
15 tuples hashing to ee5e469b70e69479c72ba919407850bf

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN abs(t1.a) AS col_1 ORDER BY col_1
---- hash rowsort
15 tuples hashing to ee5e469b70e69479c72ba919407850bf

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.e > t1.c OR t1.e < t1.d) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.d - t1.e AS col_1
---- 7
-1
-1
-4
1
1
3


-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.e > t1.c OR t1.e < t1.d) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.d - t1.e AS col_1 ORDER BY col_1
---- 7
-1
-1
-4
1
1
3


-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.d - t1.e AS col_1
---- 7
-1
-1
-4
1
1
3


-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.d - t1.e AS col_1 ORDER BY col_1
---- 7
-1
-1
-4
1
1
3


-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.e > t1.c OR t1.e < t1.d) RETURN t1.d - t1.e AS col_1
---- 7
-1
-1
-4
1
1
3


-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.e > t1.c OR t1.e < t1.d) RETURN t1.d - t1.e AS col_1 ORDER BY col_1
---- 7
-1
-1
-4
1
1
3


-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.e > t1.c OR t1.e < t1.d) RETURN t1.d - t1.e AS col_1
---- 7
-1
-1
-4
1
1
3


-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.e > t1.c OR t1.e < t1.d) RETURN t1.d - t1.e AS col_1 ORDER BY col_1
---- 7
-1
-1
-4
1
1
3


-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.e AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2
---- hash rowsort
21 tuples hashing to a9be16fd86cadea20cb762d9a2090294

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.e AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2 ORDER BY col_1, col_2
---- hash rowsort
21 tuples hashing to a9be16fd86cadea20cb762d9a2090294

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.e > t1.c OR t1.e < t1.d) RETURN t1.c - t1.d AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.b AS col_4
---- hash rowsort
11 tuples hashing to 4e3ac00cf2b93946420454f833057599

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.e > t1.c OR t1.e < t1.d) RETURN t1.c - t1.d AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.b AS col_4 ORDER BY col_3, col_1, col_2
---- hash rowsort
11 tuples hashing to 4e3ac00cf2b93946420454f833057599

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.a AS col_2, t1.d AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.e AS col_5, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_6
---- hash rowsort
30 tuples hashing to 56e98b4b3a1fa4e42c1c1ab37ec6b275

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.a AS col_2, t1.d AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.e AS col_5, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_6 ORDER BY col_1, col_2
---- hash rowsort
30 tuples hashing to 56e98b4b3a1fa4e42c1c1ab37ec6b275

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR t1.a > t1.b RETURN t1.a AS col_1, abs(t1.b - t1.c) AS col_2, t1.a - t1.b AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.b - t1.c AS col_5
---- hash rowsort
20 tuples hashing to 35ca6f386a2103ff887bdabee6e9f57b

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR t1.a > t1.b RETURN t1.a AS col_1, abs(t1.b - t1.c) AS col_2, t1.a - t1.b AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.b - t1.c AS col_5 ORDER BY col_3, col_1, col_2
---- hash rowsort
20 tuples hashing to 35ca6f386a2103ff887bdabee6e9f57b

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.a > t1.b OR (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a AS col_1, abs(t1.b - t1.c) AS col_2, t1.a - t1.b AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.b - t1.c AS col_5
---- hash rowsort
20 tuples hashing to 35ca6f386a2103ff887bdabee6e9f57b

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.a > t1.b OR (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a AS col_1, abs(t1.b - t1.c) AS col_2, t1.a - t1.b AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.b - t1.c AS col_5 ORDER BY col_2, col_4, col_5, col_3
---- hash rowsort
20 tuples hashing to 35ca6f386a2103ff887bdabee6e9f57b

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.d > t1.e RETURN abs(t1.b - t1.c) AS col_1, t1.d - t1.e AS col_2, t1.c - t1.d AS col_3, t1.c AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_6, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_7
---- hash rowsort
9 tuples hashing to af765695bd98c6763d19286966e6a502

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.d > t1.e RETURN abs(t1.b - t1.c) AS col_1, t1.d - t1.e AS col_2, t1.c - t1.d AS col_3, t1.c AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_6, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_7 ORDER BY col_1, col_3, col_7, col_2, col_5, col_4, col_6
---- hash rowsort
9 tuples hashing to af765695bd98c6763d19286966e6a502

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN abs(t1.b - t1.c) AS col_1, t1.d - t1.e AS col_2, t1.c - t1.d AS col_3, t1.c AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_6, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_7
---- hash rowsort
9 tuples hashing to af765695bd98c6763d19286966e6a502

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN abs(t1.b - t1.c) AS col_1, t1.d - t1.e AS col_2, t1.c - t1.d AS col_3, t1.c AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_6, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_7 ORDER BY col_7, col_3, col_4, col_6, col_2, col_1, col_5
---- hash rowsort
9 tuples hashing to af765695bd98c6763d19286966e6a502

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a - t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2
---- hash rowsort
17 tuples hashing to 7321b17b6a187df6e53c93c4a884c4ef

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a - t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2 ORDER BY col_1, col_2
---- hash rowsort
17 tuples hashing to 7321b17b6a187df6e53c93c4a884c4ef

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a - t1.b AS col_2, t1.a + t1.b * 2 AS col_3, t1.d - t1.e AS col_4, t1.b AS col_5
---- hash rowsort
11 tuples hashing to 6cd575f6cfe055cbb767f7016afe50dc

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a - t1.b AS col_2, t1.a + t1.b * 2 AS col_3, t1.d - t1.e AS col_4, t1.b AS col_5 ORDER BY col_3, col_2, col_1
---- hash rowsort
11 tuples hashing to 6cd575f6cfe055cbb767f7016afe50dc

-STATEMENT MATCH (t1:t1) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.a + t1.b * 2 AS col_3, t1.b AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5, abs(t1.a) AS col_6
---- hash rowsort
30 tuples hashing to 42b78d57d03b1997e8e426f74ce3dcb4

-STATEMENT MATCH (t1:t1) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.a + t1.b * 2 AS col_3, t1.b AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5, abs(t1.a) AS col_6 ORDER BY col_6, col_5
---- hash rowsort
30 tuples hashing to 42b78d57d03b1997e8e426f74ce3dcb4

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN abs(t1.a) AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.a - t1.b AS col_4, t1.e AS col_5
---- hash rowsort
8 tuples hashing to 8101d4d66a4c1d7abfcde0fc4f8d485b

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN abs(t1.a) AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.a - t1.b AS col_4, t1.e AS col_5 ORDER BY col_3, col_5, col_4
---- hash rowsort
8 tuples hashing to 8101d4d66a4c1d7abfcde0fc4f8d485b

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.a + t1.b * 2 AS col_1, abs(t1.a) AS col_2, t1.e AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5
---- hash rowsort
30 tuples hashing to 38b77b849a6098cb98a50e86ed967db9

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.a + t1.b * 2 AS col_1, abs(t1.a) AS col_2, t1.e AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5 ORDER BY col_5, col_2
---- hash rowsort
30 tuples hashing to 38b77b849a6098cb98a50e86ed967db9

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR t1.a > t1.b RETURN abs(t1.b - t1.c) AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.c AS col_5, t1.e AS col_6, t1.d AS col_7
---- hash rowsort
28 tuples hashing to ef668449d0dcfaf39a9176380099a7ba

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR t1.a > t1.b RETURN abs(t1.b - t1.c) AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.c AS col_5, t1.e AS col_6, t1.d AS col_7 ORDER BY col_4, col_2, col_5
---- hash rowsort
28 tuples hashing to ef668449d0dcfaf39a9176380099a7ba

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR t1.a > t1.b OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN abs(t1.b - t1.c) AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.c AS col_5, t1.e AS col_6, t1.d AS col_7
---- hash rowsort
28 tuples hashing to ef668449d0dcfaf39a9176380099a7ba

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR t1.a > t1.b OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN abs(t1.b - t1.c) AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.c AS col_5, t1.e AS col_6, t1.d AS col_7 ORDER BY col_1, col_6, col_7, col_5, col_3
---- hash rowsort
28 tuples hashing to ef668449d0dcfaf39a9176380099a7ba

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR t1.c > t1.d OR t1.d > t1.e RETURN t1.c - t1.d AS col_1, t1.b - t1.c AS col_2
---- hash rowsort
28 tuples hashing to 92f4dc74ff83b62db81402a1d57321c6

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR t1.c > t1.d OR t1.d > t1.e RETURN t1.c - t1.d AS col_1, t1.b - t1.c AS col_2 ORDER BY col_1, col_2
---- hash rowsort
28 tuples hashing to 92f4dc74ff83b62db81402a1d57321c6

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR t1.c > t1.d OR t1.a > t1.b RETURN t1.c - t1.d AS col_1, t1.b - t1.c AS col_2
---- hash rowsort
28 tuples hashing to 92f4dc74ff83b62db81402a1d57321c6

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR t1.c > t1.d OR t1.a > t1.b RETURN t1.c - t1.d AS col_1, t1.b - t1.c AS col_2 ORDER BY col_2, col_1
---- hash rowsort
28 tuples hashing to 92f4dc74ff83b62db81402a1d57321c6

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR t1.a > t1.b OR t1.c > t1.d RETURN t1.c - t1.d AS col_1, t1.b - t1.c AS col_2
---- hash rowsort
28 tuples hashing to 92f4dc74ff83b62db81402a1d57321c6

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR t1.a > t1.b OR t1.c > t1.d RETURN t1.c - t1.d AS col_1, t1.b - t1.c AS col_2 ORDER BY col_1, col_2
---- hash rowsort
28 tuples hashing to 92f4dc74ff83b62db81402a1d57321c6

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d RETURN abs(t1.b - t1.c) AS col_1, t1.a AS col_2
---- hash rowsort
13 tuples hashing to 5406a45aaa7e9eb6eac7c2ce28e885ff

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d RETURN abs(t1.b - t1.c) AS col_1, t1.a AS col_2 ORDER BY col_1, col_2
---- hash rowsort
13 tuples hashing to 5406a45aaa7e9eb6eac7c2ce28e885ff

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e > t1.c OR t1.e < t1.d) AND t1.b > t1.c RETURN t1.b - t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.a AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, t1.c AS col_5
---- hash rowsort
4 tuples hashing to 3938ff52656417a17bb221a7e4c3c1f8

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e > t1.c OR t1.e < t1.d) AND t1.b > t1.c RETURN t1.b - t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.a AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, t1.c AS col_5 ORDER BY col_3, col_1, col_5, col_4, col_2
---- hash rowsort
4 tuples hashing to 3938ff52656417a17bb221a7e4c3c1f8

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND t1.b > t1.c AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.b - t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.a AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, t1.c AS col_5
---- hash rowsort
4 tuples hashing to 3938ff52656417a17bb221a7e4c3c1f8

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND t1.b > t1.c AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.b - t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.a AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, t1.c AS col_5 ORDER BY col_3, col_5, col_4, col_2, col_1
---- hash rowsort
4 tuples hashing to 3938ff52656417a17bb221a7e4c3c1f8

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.e > t1.c OR t1.e < t1.d) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.b - t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.a AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, t1.c AS col_5
---- hash rowsort
4 tuples hashing to 3938ff52656417a17bb221a7e4c3c1f8

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.e > t1.c OR t1.e < t1.d) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.b - t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.a AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, t1.c AS col_5 ORDER BY col_1, col_3
---- hash rowsort
4 tuples hashing to 3938ff52656417a17bb221a7e4c3c1f8

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.b - t1.c AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3
---- 2
-1|333|1612
4|222|1902

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.b - t1.c AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3 ORDER BY col_3, col_1, col_2
---- 2
-1|333|1612
4|222|1902

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.a AS col_3, t1.d AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_6, t1.a - t1.b AS col_7
---- hash rowsort
30 tuples hashing to c81b7313892ce609e90e6e0f2b1ca608

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.a AS col_3, t1.d AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_6, t1.a - t1.b AS col_7 ORDER BY col_3, col_1, col_5, col_2, col_6, col_4, col_7
---- hash rowsort
30 tuples hashing to c81b7313892ce609e90e6e0f2b1ca608

-STATEMENT MATCH (t1:t1) RETURN t1.a AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.a + t1.b * 2 AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5, abs(t1.a) AS col_6
---- hash rowsort
30 tuples hashing to da7a9f1ebbdc3b6c29d8133f7b52278a

-STATEMENT MATCH (t1:t1) RETURN t1.a AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.a + t1.b * 2 AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5, abs(t1.a) AS col_6 ORDER BY col_2, col_6, col_1, col_4, col_3
---- hash rowsort
30 tuples hashing to da7a9f1ebbdc3b6c29d8133f7b52278a

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.d AS col_4, t1.a AS col_5
---- hash rowsort
30 tuples hashing to a823d93738137acbc5cb8b0dd778dc04

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.d AS col_4, t1.a AS col_5 ORDER BY col_5, col_3, col_2, col_4
---- hash rowsort
30 tuples hashing to a823d93738137acbc5cb8b0dd778dc04

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a - t1.b AS col_2
---- hash rowsort
11 tuples hashing to 447047f122de558251d285760d37a2b0

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a - t1.b AS col_2 ORDER BY col_2, col_1
---- hash rowsort
11 tuples hashing to 447047f122de558251d285760d37a2b0

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) RETURN t1.c - t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.b - t1.c AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.c AS col_5, t1.d - t1.e AS col_6, abs(t1.a) AS col_7
---- hash rowsort
3 tuples hashing to bb448dd78cc4a09fcfe69987f3a68624

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) RETURN t1.c - t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.b - t1.c AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.c AS col_5, t1.d - t1.e AS col_6, abs(t1.a) AS col_7 ORDER BY col_7, col_4, col_1
---- hash rowsort
3 tuples hashing to bb448dd78cc4a09fcfe69987f3a68624

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.c AS col_1, t1.b - t1.c AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, abs(t1.a) AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, t1.a AS col_6
---- hash rowsort
8 tuples hashing to 80996a703bc2719fae8f2e61e1b2ce0f

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.c AS col_1, t1.b - t1.c AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, abs(t1.a) AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, t1.a AS col_6 ORDER BY col_4, col_1, col_2, col_3, col_6, col_5
---- hash rowsort
8 tuples hashing to 80996a703bc2719fae8f2e61e1b2ce0f

-STATEMENT MATCH (t1:t1) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a AS col_2, abs(t1.b - t1.c) AS col_3, t1.d AS col_4, abs(t1.a) AS col_5, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_6, t1.d - t1.e AS col_7
---- hash rowsort
30 tuples hashing to 9c084e33bf63a044a6454554d1b32650

-STATEMENT MATCH (t1:t1) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a AS col_2, abs(t1.b - t1.c) AS col_3, t1.d AS col_4, abs(t1.a) AS col_5, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_6, t1.d - t1.e AS col_7 ORDER BY col_3, col_1, col_5, col_6, col_4
---- hash rowsort
30 tuples hashing to 9c084e33bf63a044a6454554d1b32650

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR t1.a > t1.b OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.c - t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, abs(t1.b - t1.c) AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, abs(t1.a) AS col_5
---- hash rowsort
26 tuples hashing to 2f5a32331489c99199941a8889b06f1d

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR t1.a > t1.b OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.c - t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, abs(t1.b - t1.c) AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, abs(t1.a) AS col_5 ORDER BY col_2, col_4, col_5
---- hash rowsort
26 tuples hashing to 2f5a32331489c99199941a8889b06f1d

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.a > t1.b OR t1.b > t1.c RETURN t1.c - t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, abs(t1.b - t1.c) AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, abs(t1.a) AS col_5
---- hash rowsort
26 tuples hashing to 2f5a32331489c99199941a8889b06f1d

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.a > t1.b OR t1.b > t1.c RETURN t1.c - t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, abs(t1.b - t1.c) AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, abs(t1.a) AS col_5 ORDER BY col_4, col_5, col_1
---- hash rowsort
26 tuples hashing to 2f5a32331489c99199941a8889b06f1d

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.b > t1.c RETURN t1.c - t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, abs(t1.b - t1.c) AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, abs(t1.a) AS col_5
---- hash rowsort
26 tuples hashing to 2f5a32331489c99199941a8889b06f1d

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.b > t1.c RETURN t1.c - t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, abs(t1.b - t1.c) AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, abs(t1.a) AS col_5 ORDER BY col_1, col_5, col_3
---- hash rowsort
26 tuples hashing to 2f5a32331489c99199941a8889b06f1d

-STATEMENT MATCH (t1:t1) RETURN t1.d - t1.e AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.d AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_6, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_7
---- hash rowsort
30 tuples hashing to db82e66d4fdb6bf870977f9a0491c75e

-STATEMENT MATCH (t1:t1) RETURN t1.d - t1.e AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.d AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_6, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_7 ORDER BY col_4, col_3, col_6
---- hash rowsort
30 tuples hashing to db82e66d4fdb6bf870977f9a0491c75e

-STATEMENT MATCH (t1:t1) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.d - t1.e AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, t1.e AS col_5
---- hash rowsort
30 tuples hashing to 023d03b1fc0a53fbd3a834b23d997a23

-STATEMENT MATCH (t1:t1) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.d - t1.e AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, t1.e AS col_5 ORDER BY col_3, col_5, col_4, col_1, col_2
---- hash rowsort
30 tuples hashing to 023d03b1fc0a53fbd3a834b23d997a23

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.b - t1.c AS col_2, abs(t1.a) AS col_3, t1.d AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5, t1.b AS col_6
---- hash rowsort
30 tuples hashing to 9be77835aae24e3964177c83aa5a5946

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.b - t1.c AS col_2, abs(t1.a) AS col_3, t1.d AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5, t1.b AS col_6 ORDER BY col_1, col_5, col_3, col_6, col_4
---- hash rowsort
30 tuples hashing to 9be77835aae24e3964177c83aa5a5946

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.d AS col_1, t1.a AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5
---- hash rowsort
30 tuples hashing to 3cfed3855169db1b5c3661ccf5f0e01a

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.d AS col_1, t1.a AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5 ORDER BY col_5, col_3, col_1, col_2, col_4
---- hash rowsort
30 tuples hashing to 3cfed3855169db1b5c3661ccf5f0e01a

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.c > t1.d RETURN t1.d - t1.e AS col_1, abs(t1.b - t1.c) AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.b - t1.c AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5
---- hash rowsort
5 tuples hashing to af6ddfcc0bc5a293d17b418913e3f6c2

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.c > t1.d RETURN t1.d - t1.e AS col_1, abs(t1.b - t1.c) AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.b - t1.c AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5 ORDER BY col_5, col_1, col_4, col_2, col_3
---- hash rowsort
5 tuples hashing to af6ddfcc0bc5a293d17b418913e3f6c2

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.d - t1.e AS col_1, abs(t1.b - t1.c) AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.b - t1.c AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5
---- hash rowsort
5 tuples hashing to af6ddfcc0bc5a293d17b418913e3f6c2

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.d - t1.e AS col_1, abs(t1.b - t1.c) AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.b - t1.c AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5 ORDER BY col_1, col_4, col_3
---- hash rowsort
5 tuples hashing to af6ddfcc0bc5a293d17b418913e3f6c2

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.d AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5
---- hash rowsort
19 tuples hashing to d72582291e1670e53f55f3054e2d3daf

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.d AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5 ORDER BY col_1, col_2
---- hash rowsort
19 tuples hashing to d72582291e1670e53f55f3054e2d3daf

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.d AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5
---- hash rowsort
19 tuples hashing to d72582291e1670e53f55f3054e2d3daf

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.d AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5 ORDER BY col_2, col_3, col_4
---- hash rowsort
19 tuples hashing to d72582291e1670e53f55f3054e2d3daf

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.a > t1.b RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.c - t1.d AS col_3
---- hash rowsort
18 tuples hashing to f8c69dcb44782b0e6c9cbf8319f65a6c

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.a > t1.b RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.c - t1.d AS col_3 ORDER BY col_1, col_2, col_3
---- hash rowsort
18 tuples hashing to f8c69dcb44782b0e6c9cbf8319f65a6c

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.a > t1.b OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.c - t1.d AS col_3
---- hash rowsort
18 tuples hashing to f8c69dcb44782b0e6c9cbf8319f65a6c

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.a > t1.b OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.c - t1.d AS col_3 ORDER BY col_1, col_3
---- hash rowsort
18 tuples hashing to f8c69dcb44782b0e6c9cbf8319f65a6c

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.b - t1.c AS col_3, t1.d AS col_4, t1.c AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_6
---- hash rowsort
30 tuples hashing to cf32291913a803ba6d9011eefa055f2f

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.b - t1.c AS col_3, t1.d AS col_4, t1.c AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_6 ORDER BY col_4, col_3, col_5, col_2, col_6
---- hash rowsort
30 tuples hashing to cf32291913a803ba6d9011eefa055f2f

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.c - t1.d AS col_4
---- hash rowsort
8 tuples hashing to 2e04e05b3c5a93aad1450a5bc5ff2188

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.c - t1.d AS col_4 ORDER BY col_3, col_1, col_4, col_2
---- hash rowsort
8 tuples hashing to 2e04e05b3c5a93aad1450a5bc5ff2188

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.c - t1.d AS col_4
---- hash rowsort
8 tuples hashing to 2e04e05b3c5a93aad1450a5bc5ff2188

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.c - t1.d AS col_4 ORDER BY col_1, col_2, col_4, col_3
---- hash rowsort
8 tuples hashing to 2e04e05b3c5a93aad1450a5bc5ff2188

-STATEMENT MATCH (t1:t1) RETURN t1.b - t1.c AS col_1, abs(t1.b - t1.c) AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5
---- hash rowsort
30 tuples hashing to d927f2df643d7e8a655a8cdc0066227c

-STATEMENT MATCH (t1:t1) RETURN t1.b - t1.c AS col_1, abs(t1.b - t1.c) AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5 ORDER BY col_4, col_2, col_5, col_1, col_3
---- hash rowsort
30 tuples hashing to d927f2df643d7e8a655a8cdc0066227c

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.e > t1.a AND t1.e < t1.b) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, abs(t1.a) AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, t1.c - t1.d AS col_6, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_7
---- hash rowsort
2 tuples hashing to ba74bb26a6370037d533c7c849d06212

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.e > t1.a AND t1.e < t1.b) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, abs(t1.a) AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, t1.c - t1.d AS col_6, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_7 ORDER BY col_2, col_1, col_3, col_4, col_5
---- hash rowsort
2 tuples hashing to ba74bb26a6370037d533c7c849d06212

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND t1.b > t1.c RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, abs(t1.a) AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, t1.c - t1.d AS col_6, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_7
---- hash rowsort
2 tuples hashing to ba74bb26a6370037d533c7c849d06212

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND t1.b > t1.c RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, abs(t1.a) AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, t1.c - t1.d AS col_6, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_7 ORDER BY col_2, col_7, col_3, col_5, col_4
---- hash rowsort
2 tuples hashing to ba74bb26a6370037d533c7c849d06212

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.b - t1.c AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.c - t1.d AS col_5, t1.d AS col_6
---- hash rowsort
15 tuples hashing to d9608b5db8bb32de301c6d434dad4f3d

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.b - t1.c AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.c - t1.d AS col_5, t1.d AS col_6 ORDER BY col_1, col_2, col_5, col_3
---- hash rowsort
15 tuples hashing to d9608b5db8bb32de301c6d434dad4f3d

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.b - t1.c AS col_2, t1.a AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, t1.c - t1.d AS col_5, t1.d - t1.e AS col_6, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_7
---- hash rowsort
21 tuples hashing to 246dcfbd66a7d2ae48cdc0f9f7706702

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.b - t1.c AS col_2, t1.a AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, t1.c - t1.d AS col_5, t1.d - t1.e AS col_6, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_7 ORDER BY col_4, col_2, col_6, col_3, col_5, col_7, col_1
---- hash rowsort
21 tuples hashing to 246dcfbd66a7d2ae48cdc0f9f7706702

-STATEMENT MATCH (t1:t1) RETURN t1.b - t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2
---- hash rowsort
30 tuples hashing to d22779b3c4030aea43ca75d141ba2372

-STATEMENT MATCH (t1:t1) RETURN t1.b - t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2 ORDER BY col_2, col_1
---- hash rowsort
30 tuples hashing to d22779b3c4030aea43ca75d141ba2372

-STATEMENT MATCH (t1:t1) RETURN t1.d - t1.e AS col_1, t1.e AS col_2, t1.a - t1.b AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, t1.d AS col_5
---- hash rowsort
30 tuples hashing to 4100f710d68b2dda1c6b3e053f7de62b

-STATEMENT MATCH (t1:t1) RETURN t1.d - t1.e AS col_1, t1.e AS col_2, t1.a - t1.b AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, t1.d AS col_5 ORDER BY col_2, col_1, col_4
---- hash rowsort
30 tuples hashing to 4100f710d68b2dda1c6b3e053f7de62b

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.b - t1.c AS col_4
---- hash rowsort
27 tuples hashing to c8dfc9265b7c449a83b64290a683723e

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.b - t1.c AS col_4 ORDER BY col_1, col_4, col_2, col_3
---- hash rowsort
27 tuples hashing to c8dfc9265b7c449a83b64290a683723e

-STATEMENT MATCH (t1:t1) RETURN t1.a - t1.b AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.b AS col_3, t1.e AS col_4, t1.b - t1.c AS col_5
---- hash rowsort
30 tuples hashing to 3a0dda81c3bad8d55922c7eea65cf868

-STATEMENT MATCH (t1:t1) RETURN t1.a - t1.b AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.b AS col_3, t1.e AS col_4, t1.b - t1.c AS col_5 ORDER BY col_3, col_5, col_4, col_2, col_1
---- hash rowsort
30 tuples hashing to 3a0dda81c3bad8d55922c7eea65cf868

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.d > t1.e AND t1.c > t1.d RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, abs(t1.b - t1.c) AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3
---- hash rowsort
5 tuples hashing to 3c7ff7791b22cfda8a728f67fd74be3a

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.d > t1.e AND t1.c > t1.d RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, abs(t1.b - t1.c) AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3 ORDER BY col_2, col_1
---- hash rowsort
5 tuples hashing to 3c7ff7791b22cfda8a728f67fd74be3a

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND t1.d > t1.e AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, abs(t1.b - t1.c) AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3
---- hash rowsort
5 tuples hashing to 3c7ff7791b22cfda8a728f67fd74be3a

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND t1.d > t1.e AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, abs(t1.b - t1.c) AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3 ORDER BY col_1, col_3, col_2
---- hash rowsort
5 tuples hashing to 3c7ff7791b22cfda8a728f67fd74be3a

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.d > t1.e RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, abs(t1.b - t1.c) AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3
---- hash rowsort
5 tuples hashing to 3c7ff7791b22cfda8a728f67fd74be3a

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.d > t1.e RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, abs(t1.b - t1.c) AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3 ORDER BY col_1, col_2
---- hash rowsort
5 tuples hashing to 3c7ff7791b22cfda8a728f67fd74be3a

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.d AS col_2
---- hash rowsort
8 tuples hashing to 17d107726956412fb29fbcad81f2565a

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.d AS col_2 ORDER BY col_1, col_2
---- hash rowsort
8 tuples hashing to 17d107726956412fb29fbcad81f2565a

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND t1.c > t1.d AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.d AS col_2
---- hash rowsort
8 tuples hashing to 17d107726956412fb29fbcad81f2565a

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND t1.c > t1.d AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.d AS col_2 ORDER BY col_2, col_1
---- hash rowsort
8 tuples hashing to 17d107726956412fb29fbcad81f2565a

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e > t1.c OR t1.e < t1.d) AND t1.c > t1.d RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.d AS col_2
---- hash rowsort
8 tuples hashing to 17d107726956412fb29fbcad81f2565a

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e > t1.c OR t1.e < t1.d) AND t1.c > t1.d RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.d AS col_2 ORDER BY col_2, col_1
---- hash rowsort
8 tuples hashing to 17d107726956412fb29fbcad81f2565a

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN abs(t1.a) AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, t1.c - t1.d AS col_6
---- hash rowsort
2 tuples hashing to 36c8af2cf2c693cce358cd6042d0f3a0

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN abs(t1.a) AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, t1.c - t1.d AS col_6 ORDER BY col_1, col_2, col_4, col_5, col_3
---- hash rowsort
2 tuples hashing to 36c8af2cf2c693cce358cd6042d0f3a0

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b RETURN t1.a AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.a - t1.b AS col_3
---- hash rowsort
17 tuples hashing to 2abf69b4e4ff11844fc3e958d1984c2d

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b RETURN t1.a AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.a - t1.b AS col_3 ORDER BY col_2, col_3
---- hash rowsort
17 tuples hashing to 2abf69b4e4ff11844fc3e958d1984c2d

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.c - t1.d AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.b AS col_3
---- hash rowsort
3 tuples hashing to 53ae5a490732e843ec6a8cd9362fd39f

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.c - t1.d AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.b AS col_3 ORDER BY col_1, col_2, col_3
---- hash rowsort
3 tuples hashing to 53ae5a490732e843ec6a8cd9362fd39f

-STATEMENT MATCH (t1:t1) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.c - t1.d AS col_2
---- hash rowsort
30 tuples hashing to 6067a805fe438490ef5481669a9dfae0

-STATEMENT MATCH (t1:t1) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.c - t1.d AS col_2 ORDER BY col_2, col_1
---- hash rowsort
30 tuples hashing to 6067a805fe438490ef5481669a9dfae0

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.c - t1.d AS col_5
---- hash rowsort
10 tuples hashing to a7c4bfdcb5d86488e2bf8c50a2cf6e10

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.c - t1.d AS col_5 ORDER BY col_2, col_3
---- hash rowsort
10 tuples hashing to a7c4bfdcb5d86488e2bf8c50a2cf6e10

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.c > t1.d AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.c - t1.d AS col_5
---- hash rowsort
10 tuples hashing to a7c4bfdcb5d86488e2bf8c50a2cf6e10

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.c > t1.d AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.c - t1.d AS col_5 ORDER BY col_1, col_4, col_5, col_3, col_2
---- hash rowsort
10 tuples hashing to a7c4bfdcb5d86488e2bf8c50a2cf6e10

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.c > t1.d RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.c - t1.d AS col_5
---- hash rowsort
10 tuples hashing to a7c4bfdcb5d86488e2bf8c50a2cf6e10

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.c > t1.d RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.c - t1.d AS col_5 ORDER BY col_1, col_2
---- hash rowsort
10 tuples hashing to a7c4bfdcb5d86488e2bf8c50a2cf6e10

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.e AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, t1.b AS col_6, t1.b - t1.c AS col_7
---- hash rowsort
20 tuples hashing to e4345f4fe95219d9c12d3c40f128f3b5

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.e AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, t1.b AS col_6, t1.b - t1.c AS col_7 ORDER BY col_1, col_5, col_2, col_3, col_4
---- hash rowsort
20 tuples hashing to e4345f4fe95219d9c12d3c40f128f3b5

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR t1.d > t1.e RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.e AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, t1.b AS col_6, t1.b - t1.c AS col_7
---- hash rowsort
20 tuples hashing to e4345f4fe95219d9c12d3c40f128f3b5

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR t1.d > t1.e RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.e AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, t1.b AS col_6, t1.b - t1.c AS col_7 ORDER BY col_4, col_2, col_5, col_1, col_3, col_7
---- hash rowsort
20 tuples hashing to e4345f4fe95219d9c12d3c40f128f3b5

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.d > t1.e RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.e AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, t1.b AS col_6, t1.b - t1.c AS col_7
---- hash rowsort
20 tuples hashing to e4345f4fe95219d9c12d3c40f128f3b5

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.d > t1.e RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.e AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, t1.b AS col_6, t1.b - t1.c AS col_7 ORDER BY col_1, col_6, col_2, col_4, col_5, col_7
---- hash rowsort
20 tuples hashing to e4345f4fe95219d9c12d3c40f128f3b5

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2
---- hash rowsort
30 tuples hashing to 131d71f5c4130dea41c5210e648c5aab

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2 ORDER BY col_1, col_2
---- hash rowsort
30 tuples hashing to 131d71f5c4130dea41c5210e648c5aab

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 AS col_1, t1.b AS col_2
---- hash rowsort
30 tuples hashing to e8512cacb92561411fed57fc3eb48ebd

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 AS col_1, t1.b AS col_2 ORDER BY col_2, col_1
---- hash rowsort
30 tuples hashing to e8512cacb92561411fed57fc3eb48ebd

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1
---- hash rowsort
10 tuples hashing to b833e3a3ba082b2c0028b4cd08f0834d

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1 ORDER BY col_1
---- hash rowsort
10 tuples hashing to b833e3a3ba082b2c0028b4cd08f0834d

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1
---- hash rowsort
10 tuples hashing to b833e3a3ba082b2c0028b4cd08f0834d

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1 ORDER BY col_1
---- hash rowsort
10 tuples hashing to b833e3a3ba082b2c0028b4cd08f0834d

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR t1.b > t1.c RETURN t1.d AS col_1
---- hash rowsort
26 tuples hashing to f779b1cf0028b56f46858f31d9448ed0

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR t1.b > t1.c RETURN t1.d AS col_1 ORDER BY col_1
---- hash rowsort
26 tuples hashing to f779b1cf0028b56f46858f31d9448ed0

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 AS col_1, t1.d AS col_2, abs(t1.b - t1.c) AS col_3, abs(t1.a) AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5, t1.a - t1.b AS col_6, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_7
---- hash rowsort
11 tuples hashing to 59e6659e16fd838c46645ad900800f8f

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 AS col_1, t1.d AS col_2, abs(t1.b - t1.c) AS col_3, abs(t1.a) AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5, t1.a - t1.b AS col_6, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_7 ORDER BY col_6, col_5, col_4, col_7, col_2
---- hash rowsort
11 tuples hashing to 59e6659e16fd838c46645ad900800f8f

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.b AS col_3, t1.a + t1.b * 2 AS col_4, abs(t1.a) AS col_5, t1.a AS col_6, t1.a + t1.b * 2 + t1.c * 3 AS col_7
---- hash rowsort
21 tuples hashing to 3962de06046bf2f23e40e27fa63ddd38

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.b AS col_3, t1.a + t1.b * 2 AS col_4, abs(t1.a) AS col_5, t1.a AS col_6, t1.a + t1.b * 2 + t1.c * 3 AS col_7 ORDER BY col_1, col_7, col_5, col_6, col_3, col_4, col_2
---- hash rowsort
21 tuples hashing to 3962de06046bf2f23e40e27fa63ddd38

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.e > t1.c OR t1.e < t1.d) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.b AS col_3, t1.a + t1.b * 2 AS col_4, abs(t1.a) AS col_5, t1.a AS col_6, t1.a + t1.b * 2 + t1.c * 3 AS col_7
---- hash rowsort
21 tuples hashing to 3962de06046bf2f23e40e27fa63ddd38

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.e > t1.c OR t1.e < t1.d) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.b AS col_3, t1.a + t1.b * 2 AS col_4, abs(t1.a) AS col_5, t1.a AS col_6, t1.a + t1.b * 2 + t1.c * 3 AS col_7 ORDER BY col_6, col_5
---- hash rowsort
21 tuples hashing to 3962de06046bf2f23e40e27fa63ddd38

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.b > t1.c RETURN t1.c AS col_1, t1.a + t1.b * 2 AS col_2, abs(t1.b - t1.c) AS col_3
---- hash rowsort
15 tuples hashing to d50c41e742997d1380d4f4655a0dac15

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.b > t1.c RETURN t1.c AS col_1, t1.a + t1.b * 2 AS col_2, abs(t1.b - t1.c) AS col_3 ORDER BY col_1, col_3, col_2
---- hash rowsort
15 tuples hashing to d50c41e742997d1380d4f4655a0dac15

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.c AS col_1, t1.a + t1.b * 2 AS col_2, abs(t1.b - t1.c) AS col_3
---- hash rowsort
15 tuples hashing to d50c41e742997d1380d4f4655a0dac15

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.c AS col_1, t1.a + t1.b * 2 AS col_2, abs(t1.b - t1.c) AS col_3 ORDER BY col_2, col_3, col_1
---- hash rowsort
15 tuples hashing to d50c41e742997d1380d4f4655a0dac15

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR (t1.e > t1.a AND t1.e < t1.b) OR t1.d > t1.e RETURN t1.b - t1.c AS col_1, t1.b AS col_2
---- hash rowsort
22 tuples hashing to d45a7e6fff4e5feb24199a45099d3eae

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR (t1.e > t1.a AND t1.e < t1.b) OR t1.d > t1.e RETURN t1.b - t1.c AS col_1, t1.b AS col_2 ORDER BY col_1, col_2
---- hash rowsort
22 tuples hashing to d45a7e6fff4e5feb24199a45099d3eae

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR t1.d > t1.e OR (t1.e > t1.a AND t1.e < t1.b) RETURN t1.b - t1.c AS col_1, t1.b AS col_2
---- hash rowsort
22 tuples hashing to d45a7e6fff4e5feb24199a45099d3eae

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR t1.d > t1.e OR (t1.e > t1.a AND t1.e < t1.b) RETURN t1.b - t1.c AS col_1, t1.b AS col_2 ORDER BY col_2, col_1
---- hash rowsort
22 tuples hashing to d45a7e6fff4e5feb24199a45099d3eae

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR t1.d > t1.e OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.b - t1.c AS col_1, t1.b AS col_2
---- hash rowsort
22 tuples hashing to d45a7e6fff4e5feb24199a45099d3eae

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR t1.d > t1.e OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.b - t1.c AS col_1, t1.b AS col_2 ORDER BY col_2, col_1
---- hash rowsort
22 tuples hashing to d45a7e6fff4e5feb24199a45099d3eae

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.b AS col_2
---- 2
107|105
127|129

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.b AS col_2 ORDER BY col_2, col_1
---- 2
107|105
127|129

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d RETURN abs(t1.a) AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.d AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, abs(t1.b - t1.c) AS col_5
---- hash rowsort
13 tuples hashing to e7e1c21489377c85cf0f1d00fcaad3fa

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d RETURN abs(t1.a) AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.d AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, abs(t1.b - t1.c) AS col_5 ORDER BY col_3, col_4, col_5, col_2, col_1
---- hash rowsort
13 tuples hashing to e7e1c21489377c85cf0f1d00fcaad3fa

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1
---- hash rowsort
15 tuples hashing to 11ccac364a64300285613ac5a623182e

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1 ORDER BY col_1
---- hash rowsort
15 tuples hashing to 11ccac364a64300285613ac5a623182e

-STATEMENT MATCH (t1:t1) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1
---- hash rowsort
30 tuples hashing to 74b4b1d1e049d57b3610b70a67a1c32f

-STATEMENT MATCH (t1:t1) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1 ORDER BY col_1
---- hash rowsort
30 tuples hashing to 74b4b1d1e049d57b3610b70a67a1c32f

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, abs(t1.a) AS col_2
---- hash rowsort
15 tuples hashing to a512bc577af89b7ed951794c489cba1a

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, abs(t1.a) AS col_2 ORDER BY col_1, col_2
---- hash rowsort
15 tuples hashing to a512bc577af89b7ed951794c489cba1a

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2
---- hash rowsort
22 tuples hashing to 1794775185d68d144d7201d35801d4df

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2 ORDER BY col_1, col_2
---- hash rowsort
22 tuples hashing to 1794775185d68d144d7201d35801d4df

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.b AS col_3
---- hash rowsort
3 tuples hashing to 889138d8074073207de471ed31c3745d

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.b AS col_3 ORDER BY col_1, col_3, col_2
---- hash rowsort
3 tuples hashing to 889138d8074073207de471ed31c3745d

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.b AS col_3
---- hash rowsort
3 tuples hashing to 889138d8074073207de471ed31c3745d

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.b AS col_3 ORDER BY col_2, col_3, col_1
---- hash rowsort
3 tuples hashing to 889138d8074073207de471ed31c3745d

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.b AS col_2, t1.a - t1.b AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4
---- hash rowsort
5 tuples hashing to 6c24959fa9cfa848ca2180d31d069f83

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.b AS col_2, t1.a - t1.b AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4 ORDER BY col_1, col_4, col_2
---- hash rowsort
5 tuples hashing to 6c24959fa9cfa848ca2180d31d069f83

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.d > t1.e RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.b AS col_2, t1.a - t1.b AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4
---- hash rowsort
5 tuples hashing to 6c24959fa9cfa848ca2180d31d069f83

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.d > t1.e RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.b AS col_2, t1.a - t1.b AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4 ORDER BY col_2, col_1
---- hash rowsort
5 tuples hashing to 6c24959fa9cfa848ca2180d31d069f83

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.b > t1.c AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.c AS col_2, t1.b - t1.c AS col_3, t1.d AS col_4
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.b > t1.c AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.c AS col_2, t1.b - t1.c AS col_3, t1.d AS col_4 ORDER BY col_2, col_3, col_4, col_1
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.b > t1.c RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.c AS col_2, t1.b - t1.c AS col_3, t1.d AS col_4
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.b > t1.c RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.c AS col_2, t1.b - t1.c AS col_3, t1.d AS col_4 ORDER BY col_2, col_3
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.c AS col_2, t1.b - t1.c AS col_3, t1.d AS col_4
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.c AS col_2, t1.b - t1.c AS col_3, t1.d AS col_4 ORDER BY col_2, col_4, col_1
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.c - t1.d AS col_2, t1.c AS col_3
---- hash rowsort
3 tuples hashing to 34ce1cf392ee2bf1954fbd8f5bc88977

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.c - t1.d AS col_2, t1.c AS col_3 ORDER BY col_3, col_1, col_2
---- hash rowsort
3 tuples hashing to 34ce1cf392ee2bf1954fbd8f5bc88977

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b RETURN t1.c - t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.d AS col_3
---- hash rowsort
17 tuples hashing to f14a84ddf75757708d0d8b009027f493

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b RETURN t1.c - t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.d AS col_3 ORDER BY col_3, col_2
---- hash rowsort
17 tuples hashing to f14a84ddf75757708d0d8b009027f493

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, abs(t1.a) AS col_3, t1.b - t1.c AS col_4, t1.c AS col_5, t1.a - t1.b AS col_6, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_7
---- hash rowsort
21 tuples hashing to df858a683efb658599da65c456748ef4

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, abs(t1.a) AS col_3, t1.b - t1.c AS col_4, t1.c AS col_5, t1.a - t1.b AS col_6, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_7 ORDER BY col_4, col_3, col_5, col_1, col_2, col_7, col_6
---- hash rowsort
21 tuples hashing to df858a683efb658599da65c456748ef4

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.a + t1.b * 2 AS col_2
---- hash rowsort
10 tuples hashing to 8d6eac4282d6882511230a20417bf479

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.a + t1.b * 2 AS col_2 ORDER BY col_2, col_1
---- hash rowsort
10 tuples hashing to 8d6eac4282d6882511230a20417bf479

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.c AS col_3, t1.b AS col_4, t1.d - t1.e AS col_5, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_6, t1.b - t1.c AS col_7
---- hash rowsort
10 tuples hashing to 03b9c6bc33a4aba7ddad83b45e0f1b1a

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.c AS col_3, t1.b AS col_4, t1.d - t1.e AS col_5, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_6, t1.b - t1.c AS col_7 ORDER BY col_1, col_2, col_4, col_6
---- hash rowsort
10 tuples hashing to 03b9c6bc33a4aba7ddad83b45e0f1b1a

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.e > t1.c OR t1.e < t1.d) AND t1.d > t1.e RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3
---- hash rowsort
7 tuples hashing to f0c4dfe1769211bf0c301c9007bc5454

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.e > t1.c OR t1.e < t1.d) AND t1.d > t1.e RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3 ORDER BY col_2, col_3
---- hash rowsort
7 tuples hashing to f0c4dfe1769211bf0c301c9007bc5454

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND t1.d > t1.e AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3
---- hash rowsort
7 tuples hashing to f0c4dfe1769211bf0c301c9007bc5454

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND t1.d > t1.e AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3 ORDER BY col_3, col_2
---- hash rowsort
7 tuples hashing to f0c4dfe1769211bf0c301c9007bc5454

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.e > t1.c OR t1.e < t1.d) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3
---- hash rowsort
7 tuples hashing to f0c4dfe1769211bf0c301c9007bc5454

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.e > t1.c OR t1.e < t1.d) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3 ORDER BY col_1, col_2
---- hash rowsort
7 tuples hashing to f0c4dfe1769211bf0c301c9007bc5454

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.e > t1.c OR t1.e < t1.d) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3
---- hash rowsort
7 tuples hashing to f0c4dfe1769211bf0c301c9007bc5454

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.e > t1.c OR t1.e < t1.d) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3 ORDER BY col_2, col_1
---- hash rowsort
7 tuples hashing to f0c4dfe1769211bf0c301c9007bc5454

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, abs(t1.a) AS col_4, t1.a AS col_5, abs(t1.b - t1.c) AS col_6, t1.c AS col_7
---- hash rowsort
26 tuples hashing to f1a2f5b1811d37cecb505d691ab13a49

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, abs(t1.a) AS col_4, t1.a AS col_5, abs(t1.b - t1.c) AS col_6, t1.c AS col_7 ORDER BY col_3, col_2
---- hash rowsort
26 tuples hashing to f1a2f5b1811d37cecb505d691ab13a49

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.e AS col_3, t1.a - t1.b AS col_4, t1.d AS col_5, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_6
---- hash rowsort
8 tuples hashing to 8673acc669acd16171dbeb21976d6d8f

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.e AS col_3, t1.a - t1.b AS col_4, t1.d AS col_5, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_6 ORDER BY col_4, col_6, col_1, col_2, col_5, col_3
---- hash rowsort
8 tuples hashing to 8673acc669acd16171dbeb21976d6d8f

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.a > t1.b RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.e AS col_3, t1.a - t1.b AS col_4, t1.d AS col_5, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_6
---- hash rowsort
8 tuples hashing to 8673acc669acd16171dbeb21976d6d8f

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.a > t1.b RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.e AS col_3, t1.a - t1.b AS col_4, t1.d AS col_5, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_6 ORDER BY col_6, col_5, col_2, col_3
---- hash rowsort
8 tuples hashing to 8673acc669acd16171dbeb21976d6d8f

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR t1.b > t1.c OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.b - t1.c AS col_1, t1.c - t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.a AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5, t1.a - t1.b AS col_6, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_7
---- hash rowsort
25 tuples hashing to feed50bc1ffe0204132473625c16770f

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR t1.b > t1.c OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.b - t1.c AS col_1, t1.c - t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.a AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5, t1.a - t1.b AS col_6, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_7 ORDER BY col_5, col_1, col_3
---- hash rowsort
25 tuples hashing to feed50bc1ffe0204132473625c16770f

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.e > t1.c OR t1.e < t1.d) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.b - t1.c AS col_1, t1.c - t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.a AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5, t1.a - t1.b AS col_6, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_7
---- hash rowsort
25 tuples hashing to feed50bc1ffe0204132473625c16770f

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.e > t1.c OR t1.e < t1.d) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.b - t1.c AS col_1, t1.c - t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.a AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5, t1.a - t1.b AS col_6, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_7 ORDER BY col_3, col_1, col_2, col_6, col_4
---- hash rowsort
25 tuples hashing to feed50bc1ffe0204132473625c16770f

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.b - t1.c AS col_1, t1.c - t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.a AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5, t1.a - t1.b AS col_6, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_7
---- hash rowsort
25 tuples hashing to feed50bc1ffe0204132473625c16770f

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.b - t1.c AS col_1, t1.c - t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.a AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5, t1.a - t1.b AS col_6, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_7 ORDER BY col_5, col_7, col_3
---- hash rowsort
25 tuples hashing to feed50bc1ffe0204132473625c16770f

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a AS col_3, t1.e AS col_4, t1.a + t1.b * 2 AS col_5, t1.c AS col_6, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_7
---- hash rowsort
19 tuples hashing to 0d12bbd4d096b306bc441f1921ba8409

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a AS col_3, t1.e AS col_4, t1.a + t1.b * 2 AS col_5, t1.c AS col_6, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_7 ORDER BY col_3, col_1, col_2, col_7
---- hash rowsort
19 tuples hashing to 0d12bbd4d096b306bc441f1921ba8409

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a AS col_3, t1.e AS col_4, t1.a + t1.b * 2 AS col_5, t1.c AS col_6, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_7
---- hash rowsort
19 tuples hashing to 0d12bbd4d096b306bc441f1921ba8409

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a AS col_3, t1.e AS col_4, t1.a + t1.b * 2 AS col_5, t1.c AS col_6, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_7 ORDER BY col_7, col_2, col_6, col_3, col_1, col_5
---- hash rowsort
19 tuples hashing to 0d12bbd4d096b306bc441f1921ba8409

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.b > t1.c RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.e AS col_2, t1.a - t1.b AS col_3
---- hash rowsort
5 tuples hashing to 8b91e8ae95a1c510da23999745a6f6f0

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.b > t1.c RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.e AS col_2, t1.a - t1.b AS col_3 ORDER BY col_3, col_2, col_1
---- hash rowsort
5 tuples hashing to 8b91e8ae95a1c510da23999745a6f6f0

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.e AS col_2, t1.a - t1.b AS col_3
---- hash rowsort
5 tuples hashing to 8b91e8ae95a1c510da23999745a6f6f0

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.e AS col_2, t1.a - t1.b AS col_3 ORDER BY col_1, col_3
---- hash rowsort
5 tuples hashing to 8b91e8ae95a1c510da23999745a6f6f0

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, abs(t1.a) AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5
---- hash rowsort
30 tuples hashing to e48a7e154d1862a3a94a7244246efacb

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, abs(t1.a) AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5 ORDER BY col_5, col_2, col_4
---- hash rowsort
30 tuples hashing to e48a7e154d1862a3a94a7244246efacb

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN abs(t1.b - t1.c) AS col_1, abs(t1.a) AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.a + t1.b * 2 AS col_4
---- hash rowsort
26 tuples hashing to bb8f9e931a978480ded2bf7a14866ee7

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN abs(t1.b - t1.c) AS col_1, abs(t1.a) AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.a + t1.b * 2 AS col_4 ORDER BY col_1, col_4, col_2
---- hash rowsort
26 tuples hashing to bb8f9e931a978480ded2bf7a14866ee7

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b RETURN t1.c AS col_1
---- hash rowsort
17 tuples hashing to cdbf29686df3708c211f3102ab678908

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b RETURN t1.c AS col_1 ORDER BY col_1
---- hash rowsort
17 tuples hashing to cdbf29686df3708c211f3102ab678908

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a - t1.b AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, abs(t1.a) AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, abs(t1.b - t1.c) AS col_5
---- hash rowsort
5 tuples hashing to ba03f62987b959ddabb9d50bdc042c78

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a - t1.b AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, abs(t1.a) AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, abs(t1.b - t1.c) AS col_5 ORDER BY col_5, col_4, col_3
---- hash rowsort
5 tuples hashing to ba03f62987b959ddabb9d50bdc042c78

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a - t1.b AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, abs(t1.a) AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, abs(t1.b - t1.c) AS col_5
---- hash rowsort
5 tuples hashing to ba03f62987b959ddabb9d50bdc042c78

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a - t1.b AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, abs(t1.a) AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, abs(t1.b - t1.c) AS col_5 ORDER BY col_3, col_2, col_4
---- hash rowsort
5 tuples hashing to ba03f62987b959ddabb9d50bdc042c78

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.b - t1.c AS col_1
---- hash rowsort
24 tuples hashing to e1cde88d0196bdee91734f7ca7e395fb

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.b - t1.c AS col_1 ORDER BY col_1
---- hash rowsort
24 tuples hashing to e1cde88d0196bdee91734f7ca7e395fb

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.b - t1.c AS col_1
---- hash rowsort
24 tuples hashing to e1cde88d0196bdee91734f7ca7e395fb

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.b - t1.c AS col_1 ORDER BY col_1
---- hash rowsort
24 tuples hashing to e1cde88d0196bdee91734f7ca7e395fb

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.e AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.a - t1.b AS col_4, t1.d - t1.e AS col_5
---- hash rowsort
30 tuples hashing to a398ba1db1267191ce45e36d9d31e051

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.e AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.a - t1.b AS col_4, t1.d - t1.e AS col_5 ORDER BY col_1, col_5, col_3
---- hash rowsort
30 tuples hashing to a398ba1db1267191ce45e36d9d31e051

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.d AS col_2, t1.a - t1.b AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.d - t1.e AS col_5, t1.b - t1.c AS col_6
---- hash rowsort
30 tuples hashing to 1c5b84d965d2d9ba73b93a2dd0b2f2c9

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.d AS col_2, t1.a - t1.b AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.d - t1.e AS col_5, t1.b - t1.c AS col_6 ORDER BY col_2, col_1, col_6, col_4
---- hash rowsort
30 tuples hashing to 1c5b84d965d2d9ba73b93a2dd0b2f2c9

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e RETURN abs(t1.a) AS col_1, t1.a - t1.b AS col_2, t1.c AS col_3, abs(t1.b - t1.c) AS col_4
---- hash rowsort
11 tuples hashing to a43d58e83bb23ff1ad69780741f5418a

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e RETURN abs(t1.a) AS col_1, t1.a - t1.b AS col_2, t1.c AS col_3, abs(t1.b - t1.c) AS col_4 ORDER BY col_2, col_3, col_4
---- hash rowsort
11 tuples hashing to a43d58e83bb23ff1ad69780741f5418a

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2
---- hash rowsort
27 tuples hashing to af52a14c0703b0cc491c68926b0af48e

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2 ORDER BY col_1, col_2
---- hash rowsort
27 tuples hashing to af52a14c0703b0cc491c68926b0af48e

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2
---- hash rowsort
27 tuples hashing to af52a14c0703b0cc491c68926b0af48e

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2 ORDER BY col_2, col_1
---- hash rowsort
27 tuples hashing to af52a14c0703b0cc491c68926b0af48e

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a AS col_1, t1.c AS col_2, t1.a - t1.b AS col_3
---- hash rowsort
26 tuples hashing to 5329fa42a4799ac324055058aa366b22

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a AS col_1, t1.c AS col_2, t1.a - t1.b AS col_3 ORDER BY col_3, col_2
---- hash rowsort
26 tuples hashing to 5329fa42a4799ac324055058aa366b22

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c RETURN t1.b AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, abs(t1.b - t1.c) AS col_5
---- hash rowsort
13 tuples hashing to 64385d2a13bc167ba111420e6febb518

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c RETURN t1.b AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, abs(t1.b - t1.c) AS col_5 ORDER BY col_2, col_3
---- hash rowsort
13 tuples hashing to 64385d2a13bc167ba111420e6febb518

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1
---- hash rowsort
13 tuples hashing to 0172871a347e8b585d40146ff17403ac

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1 ORDER BY col_1
---- hash rowsort
13 tuples hashing to 0172871a347e8b585d40146ff17403ac

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.b AS col_2
---- 2
1067|105
1272|129

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.b AS col_2 ORDER BY col_2, col_1
---- 2
1067|105
1272|129

-STATEMENT MATCH (t1:t1) RETURN t1.e AS col_1, t1.b - t1.c AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3
---- hash rowsort
30 tuples hashing to 8c3eae551d7c73bf241fdbaa816e05b4

-STATEMENT MATCH (t1:t1) RETURN t1.e AS col_1, t1.b - t1.c AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3 ORDER BY col_1, col_2
---- hash rowsort
30 tuples hashing to 8c3eae551d7c73bf241fdbaa816e05b4

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.d AS col_2, t1.b AS col_3, t1.a AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5
---- hash rowsort
19 tuples hashing to 093a5214968b2e0db5693baf3ed91467

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.d AS col_2, t1.b AS col_3, t1.a AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5 ORDER BY col_5, col_3, col_2, col_1, col_4
---- hash rowsort
19 tuples hashing to 093a5214968b2e0db5693baf3ed91467

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.d AS col_2, t1.b AS col_3, t1.a AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5
---- hash rowsort
19 tuples hashing to 093a5214968b2e0db5693baf3ed91467

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.d AS col_2, t1.b AS col_3, t1.a AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5 ORDER BY col_2, col_3, col_5, col_1
---- hash rowsort
19 tuples hashing to 093a5214968b2e0db5693baf3ed91467

-STATEMENT MATCH (t1:t1) RETURN t1.b - t1.c AS col_1
---- hash rowsort
30 tuples hashing to c5a2b847c6c21100b32db39349809b0e

-STATEMENT MATCH (t1:t1) RETURN t1.b - t1.c AS col_1 ORDER BY col_1
---- hash rowsort
30 tuples hashing to c5a2b847c6c21100b32db39349809b0e

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.b - t1.c AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.a AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, t1.a - t1.b AS col_6
---- hash rowsort
30 tuples hashing to 7203b58cd5de45742814c45174042c36

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.b - t1.c AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.a AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, t1.a - t1.b AS col_6 ORDER BY col_5, col_1
---- hash rowsort
30 tuples hashing to 7203b58cd5de45742814c45174042c36

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.c AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.b - t1.c AS col_4, t1.d - t1.e AS col_5, t1.a + t1.b * 2 + t1.c * 3 AS col_6
---- hash rowsort
30 tuples hashing to f6654e4c0575740d1cc8c217e7653f7b

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.c AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.b - t1.c AS col_4, t1.d - t1.e AS col_5, t1.a + t1.b * 2 + t1.c * 3 AS col_6 ORDER BY col_3, col_6, col_2, col_1, col_4, col_5
---- hash rowsort
30 tuples hashing to f6654e4c0575740d1cc8c217e7653f7b

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d RETURN abs(t1.a) AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.c - t1.d AS col_3
---- hash rowsort
13 tuples hashing to a245f46b4eb4e5f324e4ff1557631696

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d RETURN abs(t1.a) AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.c - t1.d AS col_3 ORDER BY col_2, col_1
---- hash rowsort
13 tuples hashing to a245f46b4eb4e5f324e4ff1557631696

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.c AS col_1, abs(t1.b - t1.c) AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.a - t1.b AS col_5, t1.d - t1.e AS col_6, t1.a + t1.b * 2 AS col_7
---- hash rowsort
23 tuples hashing to f5eea00d2d6e134b7bc3c6b4fb048504

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.c AS col_1, abs(t1.b - t1.c) AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.a - t1.b AS col_5, t1.d - t1.e AS col_6, t1.a + t1.b * 2 AS col_7 ORDER BY col_6, col_2, col_3, col_4, col_7, col_1, col_5
---- hash rowsort
23 tuples hashing to f5eea00d2d6e134b7bc3c6b4fb048504

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b RETURN t1.a + t1.b * 2 AS col_1, t1.c - t1.d AS col_2, t1.d - t1.e AS col_3, abs(t1.a) AS col_4, t1.a - t1.b AS col_5, t1.c AS col_6, t1.b AS col_7
---- hash rowsort
17 tuples hashing to d65bf72c8bcb9166838b483257204296

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b RETURN t1.a + t1.b * 2 AS col_1, t1.c - t1.d AS col_2, t1.d - t1.e AS col_3, abs(t1.a) AS col_4, t1.a - t1.b AS col_5, t1.c AS col_6, t1.b AS col_7 ORDER BY col_1, col_6, col_2, col_5, col_3
---- hash rowsort
17 tuples hashing to d65bf72c8bcb9166838b483257204296

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR (t1.e > t1.a AND t1.e < t1.b) OR t1.c > t1.d RETURN abs(t1.b - t1.c) AS col_1, t1.c AS col_2, t1.a + t1.b * 2 AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.d - t1.e AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_6, t1.a - t1.b AS col_7
---- hash rowsort
26 tuples hashing to 1067074122ea0e1f2c7d65cce15d84a3

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR (t1.e > t1.a AND t1.e < t1.b) OR t1.c > t1.d RETURN abs(t1.b - t1.c) AS col_1, t1.c AS col_2, t1.a + t1.b * 2 AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.d - t1.e AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_6, t1.a - t1.b AS col_7 ORDER BY col_2, col_7, col_6, col_5, col_4, col_1, col_3
---- hash rowsort
26 tuples hashing to 1067074122ea0e1f2c7d65cce15d84a3

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR (t1.e > t1.c OR t1.e < t1.d) OR t1.c > t1.d RETURN abs(t1.b - t1.c) AS col_1, t1.c AS col_2, t1.a + t1.b * 2 AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.d - t1.e AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_6, t1.a - t1.b AS col_7
---- hash rowsort
26 tuples hashing to 1067074122ea0e1f2c7d65cce15d84a3

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR (t1.e > t1.c OR t1.e < t1.d) OR t1.c > t1.d RETURN abs(t1.b - t1.c) AS col_1, t1.c AS col_2, t1.a + t1.b * 2 AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.d - t1.e AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_6, t1.a - t1.b AS col_7 ORDER BY col_6, col_3
---- hash rowsort
26 tuples hashing to 1067074122ea0e1f2c7d65cce15d84a3

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR NOT (t1.d >= 110 AND t1.d <= 150) OR t1.a > t1.b RETURN t1.d - t1.e AS col_1, t1.e AS col_2, t1.a + t1.b * 2 AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, abs(t1.a) AS col_5, abs(t1.b - t1.c) AS col_6
---- hash rowsort
28 tuples hashing to b33485d8023787693e3e116f2f1847a4

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR NOT (t1.d >= 110 AND t1.d <= 150) OR t1.a > t1.b RETURN t1.d - t1.e AS col_1, t1.e AS col_2, t1.a + t1.b * 2 AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, abs(t1.a) AS col_5, abs(t1.b - t1.c) AS col_6 ORDER BY col_1, col_3, col_6, col_4, col_2
---- hash rowsort
28 tuples hashing to b33485d8023787693e3e116f2f1847a4

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR t1.a > t1.b OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.d - t1.e AS col_1, t1.e AS col_2, t1.a + t1.b * 2 AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, abs(t1.a) AS col_5, abs(t1.b - t1.c) AS col_6
---- hash rowsort
28 tuples hashing to b33485d8023787693e3e116f2f1847a4

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR t1.a > t1.b OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.d - t1.e AS col_1, t1.e AS col_2, t1.a + t1.b * 2 AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, abs(t1.a) AS col_5, abs(t1.b - t1.c) AS col_6 ORDER BY col_1, col_5, col_2
---- hash rowsort
28 tuples hashing to b33485d8023787693e3e116f2f1847a4

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR t1.c > t1.d OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.d - t1.e AS col_1, t1.e AS col_2, t1.a + t1.b * 2 AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, abs(t1.a) AS col_5, abs(t1.b - t1.c) AS col_6
---- hash rowsort
28 tuples hashing to b33485d8023787693e3e116f2f1847a4

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR t1.c > t1.d OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.d - t1.e AS col_1, t1.e AS col_2, t1.a + t1.b * 2 AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, abs(t1.a) AS col_5, abs(t1.b - t1.c) AS col_6 ORDER BY col_6, col_1
---- hash rowsort
28 tuples hashing to b33485d8023787693e3e116f2f1847a4

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.d - t1.e AS col_1
---- hash rowsort
17 tuples hashing to 045f09dca5d37db611533eab1971b231

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.d - t1.e AS col_1 ORDER BY col_1
---- hash rowsort
17 tuples hashing to 045f09dca5d37db611533eab1971b231

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR t1.d > t1.e RETURN t1.d - t1.e AS col_1
---- hash rowsort
17 tuples hashing to 045f09dca5d37db611533eab1971b231

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR t1.d > t1.e RETURN t1.d - t1.e AS col_1 ORDER BY col_1
---- hash rowsort
17 tuples hashing to 045f09dca5d37db611533eab1971b231

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.c AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3
---- hash rowsort
3 tuples hashing to 14b33901ca82e662d59a8c0dc047726f

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.c AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3 ORDER BY col_2, col_3
---- hash rowsort
3 tuples hashing to 14b33901ca82e662d59a8c0dc047726f

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND t1.d > t1.e AND t1.b > t1.c RETURN t1.a - t1.b AS col_1
---- 1
-4

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND t1.d > t1.e AND t1.b > t1.c RETURN t1.a - t1.b AS col_1 ORDER BY col_1
---- 1
-4

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND t1.b > t1.c AND t1.d > t1.e RETURN t1.a - t1.b AS col_1
---- 1
-4

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND t1.b > t1.c AND t1.d > t1.e RETURN t1.a - t1.b AS col_1 ORDER BY col_1
---- 1
-4

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND t1.b > t1.c AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a - t1.b AS col_1
---- 1
-4

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND t1.b > t1.c AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a - t1.b AS col_1 ORDER BY col_1
---- 1
-4

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND t1.d > t1.e AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a - t1.b AS col_1
---- 1
-4

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND t1.d > t1.e AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a - t1.b AS col_1 ORDER BY col_1
---- 1
-4

-STATEMENT MATCH (t1:t1) RETURN abs(t1.a) AS col_1
---- hash rowsort
30 tuples hashing to 9a6afb6b859fc856aafb6a7af11a38e4

-STATEMENT MATCH (t1:t1) RETURN abs(t1.a) AS col_1 ORDER BY col_1
---- hash rowsort
30 tuples hashing to 9a6afb6b859fc856aafb6a7af11a38e4

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.d AS col_2, t1.a - t1.b AS col_3, abs(t1.a) AS col_4, t1.c AS col_5, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_6
---- hash rowsort
15 tuples hashing to d9813d30017aede3d11579070a9140fc

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.d AS col_2, t1.a - t1.b AS col_3, abs(t1.a) AS col_4, t1.c AS col_5, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_6 ORDER BY col_3, col_2, col_4
---- hash rowsort
15 tuples hashing to d9813d30017aede3d11579070a9140fc

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.d > t1.e RETURN abs(t1.b - t1.c) AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.d AS col_4, t1.d - t1.e AS col_5
---- hash rowsort
3 tuples hashing to a4e27795a1a90b88b4bee4165129ad4b

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.d > t1.e RETURN abs(t1.b - t1.c) AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.d AS col_4, t1.d - t1.e AS col_5 ORDER BY col_2, col_4, col_5
---- hash rowsort
3 tuples hashing to a4e27795a1a90b88b4bee4165129ad4b

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.e > t1.c OR t1.e < t1.d) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN abs(t1.b - t1.c) AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.d AS col_4, t1.d - t1.e AS col_5
---- hash rowsort
3 tuples hashing to a4e27795a1a90b88b4bee4165129ad4b

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.e > t1.c OR t1.e < t1.d) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN abs(t1.b - t1.c) AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.d AS col_4, t1.d - t1.e AS col_5 ORDER BY col_5, col_1, col_2
---- hash rowsort
3 tuples hashing to a4e27795a1a90b88b4bee4165129ad4b

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.e > t1.c OR t1.e < t1.d) AND t1.d > t1.e RETURN abs(t1.b - t1.c) AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.d AS col_4, t1.d - t1.e AS col_5
---- hash rowsort
3 tuples hashing to a4e27795a1a90b88b4bee4165129ad4b

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.e > t1.c OR t1.e < t1.d) AND t1.d > t1.e RETURN abs(t1.b - t1.c) AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.d AS col_4, t1.d - t1.e AS col_5 ORDER BY col_2, col_4, col_3, col_5, col_1
---- hash rowsort
3 tuples hashing to a4e27795a1a90b88b4bee4165129ad4b

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.c - t1.d AS col_3
---- hash rowsort
8 tuples hashing to 67123f9d3cf26afca087a7139944a577

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.c - t1.d AS col_3 ORDER BY col_2, col_1
---- hash rowsort
8 tuples hashing to 67123f9d3cf26afca087a7139944a577

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1
---- hash rowsort
26 tuples hashing to 135a3445021b98b31c75dc892c625ee7

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1 ORDER BY col_1
---- hash rowsort
26 tuples hashing to 135a3445021b98b31c75dc892c625ee7

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.b - t1.c AS col_1, t1.e AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3
---- 2
-3|180|0
-4|132|0

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.b - t1.c AS col_1, t1.e AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3 ORDER BY col_2, col_1, col_3
---- 2
-3|180|0
-4|132|0

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.a > t1.b AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.b - t1.c AS col_1, t1.e AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3
---- 2
-3|180|0
-4|132|0

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.a > t1.b AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.b - t1.c AS col_1, t1.e AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3 ORDER BY col_2, col_1, col_3
---- 2
-3|180|0
-4|132|0

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.a > t1.b RETURN t1.b - t1.c AS col_1, t1.e AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3
---- 2
-3|180|0
-4|132|0

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.a > t1.b RETURN t1.b - t1.c AS col_1, t1.e AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3 ORDER BY col_2, col_3
---- 2
-3|180|0
-4|132|0

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.a > t1.b AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.b - t1.c AS col_1, t1.e AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3
---- 2
-3|180|0
-4|132|0

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.a > t1.b AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.b - t1.c AS col_1, t1.e AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3 ORDER BY col_2, col_1, col_3
---- 2
-3|180|0
-4|132|0

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.c - t1.d AS col_1, abs(t1.b - t1.c) AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.d - t1.e AS col_5
---- hash rowsort
15 tuples hashing to 1ad85c88d1fdbc2acc6b8554c4efc1b9

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.c - t1.d AS col_1, abs(t1.b - t1.c) AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.d - t1.e AS col_5 ORDER BY col_3, col_1, col_4, col_2, col_5
---- hash rowsort
15 tuples hashing to 1ad85c88d1fdbc2acc6b8554c4efc1b9

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2
---- hash rowsort
29 tuples hashing to bb4dab7fc28f43ac36df70091e062673

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2 ORDER BY col_1, col_2
---- hash rowsort
29 tuples hashing to bb4dab7fc28f43ac36df70091e062673

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2
---- hash rowsort
29 tuples hashing to bb4dab7fc28f43ac36df70091e062673

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2 ORDER BY col_2, col_1
---- hash rowsort
29 tuples hashing to bb4dab7fc28f43ac36df70091e062673

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1
---- hash rowsort
21 tuples hashing to 558d17aef1b84bc5cb6d000f08146d80

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1 ORDER BY col_1
---- hash rowsort
21 tuples hashing to 558d17aef1b84bc5cb6d000f08146d80

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.c > t1.d AND t1.b > t1.c AND (t1.e > t1.c OR t1.e < t1.d) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.d AS col_4
---- 2
1390|5|0|136
1430|6|0|140

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.c > t1.d AND t1.b > t1.c AND (t1.e > t1.c OR t1.e < t1.d) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.d AS col_4 ORDER BY col_1, col_2, col_4
---- 2
1390|5|0|136
1430|6|0|140

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.e > t1.c OR t1.e < t1.d) AND t1.b > t1.c RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.d AS col_4
---- 2
1390|5|0|136
1430|6|0|140

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.e > t1.c OR t1.e < t1.d) AND t1.b > t1.c RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.d AS col_4 ORDER BY col_1, col_2
---- 2
1390|5|0|136
1430|6|0|140

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND t1.c > t1.d AND t1.b > t1.c RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.d AS col_4
---- 2
1390|5|0|136
1430|6|0|140

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND t1.c > t1.d AND t1.b > t1.c RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.d AS col_4 ORDER BY col_1, col_3, col_2, col_4
---- 2
1390|5|0|136
1430|6|0|140

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND t1.b > t1.c AND t1.c > t1.d RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.d AS col_4
---- 2
1390|5|0|136
1430|6|0|140

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND t1.b > t1.c AND t1.c > t1.d RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.d AS col_4 ORDER BY col_2, col_3, col_1, col_4
---- 2
1390|5|0|136
1430|6|0|140

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.b AS col_2, t1.e AS col_3
---- hash rowsort
12 tuples hashing to 04fbc8747ced76bd5e39372d36c6cd56

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.b AS col_2, t1.e AS col_3 ORDER BY col_1, col_2
---- hash rowsort
12 tuples hashing to 04fbc8747ced76bd5e39372d36c6cd56

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.d > t1.e RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.b AS col_2, t1.e AS col_3
---- hash rowsort
12 tuples hashing to 04fbc8747ced76bd5e39372d36c6cd56

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.d > t1.e RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.b AS col_2, t1.e AS col_3 ORDER BY col_1, col_2, col_3
---- hash rowsort
12 tuples hashing to 04fbc8747ced76bd5e39372d36c6cd56

-STATEMENT MATCH (t1:t1) RETURN abs(t1.a) AS col_1, t1.c AS col_2, t1.c - t1.d AS col_3, t1.a - t1.b AS col_4, abs(t1.b - t1.c) AS col_5
---- hash rowsort
30 tuples hashing to c7973f84ec584b5205e6e5bde1b29849

-STATEMENT MATCH (t1:t1) RETURN abs(t1.a) AS col_1, t1.c AS col_2, t1.c - t1.d AS col_3, t1.a - t1.b AS col_4, abs(t1.b - t1.c) AS col_5 ORDER BY col_3, col_2, col_4
---- hash rowsort
30 tuples hashing to c7973f84ec584b5205e6e5bde1b29849

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.e AS col_2, t1.a + t1.b * 2 AS col_3, t1.b - t1.c AS col_4
---- hash rowsort
30 tuples hashing to f21f802495ad9e86d9467f0a8a89233a

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.e AS col_2, t1.a + t1.b * 2 AS col_3, t1.b - t1.c AS col_4 ORDER BY col_2, col_4, col_3
---- hash rowsort
30 tuples hashing to f21f802495ad9e86d9467f0a8a89233a

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR t1.c > t1.d RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.a AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4
---- hash rowsort
14 tuples hashing to eb34893f0f45a3fe06872613f6814573

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR t1.c > t1.d RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.a AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4 ORDER BY col_3, col_1, col_2, col_4
---- hash rowsort
14 tuples hashing to eb34893f0f45a3fe06872613f6814573

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR (t1.e > t1.a AND t1.e < t1.b) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.a AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4
---- hash rowsort
14 tuples hashing to eb34893f0f45a3fe06872613f6814573

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR (t1.e > t1.a AND t1.e < t1.b) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.a AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4 ORDER BY col_2, col_3, col_1, col_4
---- hash rowsort
14 tuples hashing to eb34893f0f45a3fe06872613f6814573

-STATEMENT MATCH (t1:t1) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, abs(t1.a) AS col_2, t1.d AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5, t1.e AS col_6, t1.a - t1.b AS col_7
---- hash rowsort
30 tuples hashing to 744e1c7818764ebcfc4e5f91cbc2c798

-STATEMENT MATCH (t1:t1) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, abs(t1.a) AS col_2, t1.d AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5, t1.e AS col_6, t1.a - t1.b AS col_7 ORDER BY col_1, col_5, col_6, col_7
---- hash rowsort
30 tuples hashing to 744e1c7818764ebcfc4e5f91cbc2c798

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, abs(t1.a) AS col_2
---- hash rowsort
15 tuples hashing to 8fc25640059ac6e22325dc1d3441cf1f

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, abs(t1.a) AS col_2 ORDER BY col_1, col_2
---- hash rowsort
15 tuples hashing to 8fc25640059ac6e22325dc1d3441cf1f

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.c > t1.d RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.a + t1.b * 2 AS col_3, t1.e AS col_4, abs(t1.b - t1.c) AS col_5, t1.c AS col_6, t1.a - t1.b AS col_7
---- hash rowsort
10 tuples hashing to 1c2143bbb23c135b0863948fe892809c

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.c > t1.d RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.a + t1.b * 2 AS col_3, t1.e AS col_4, abs(t1.b - t1.c) AS col_5, t1.c AS col_6, t1.a - t1.b AS col_7 ORDER BY col_7, col_5
---- hash rowsort
10 tuples hashing to 1c2143bbb23c135b0863948fe892809c

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.a + t1.b * 2 AS col_3, t1.e AS col_4, abs(t1.b - t1.c) AS col_5, t1.c AS col_6, t1.a - t1.b AS col_7
---- hash rowsort
10 tuples hashing to 1c2143bbb23c135b0863948fe892809c

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.a + t1.b * 2 AS col_3, t1.e AS col_4, abs(t1.b - t1.c) AS col_5, t1.c AS col_6, t1.a - t1.b AS col_7 ORDER BY col_4, col_6, col_2, col_7
---- hash rowsort
10 tuples hashing to 1c2143bbb23c135b0863948fe892809c

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.c > t1.d RETURN t1.b AS col_1, t1.b - t1.c AS col_2, t1.e AS col_3, t1.c AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, t1.a + t1.b * 2 + t1.c * 3 AS col_6, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_7
---- hash rowsort
13 tuples hashing to f3fb9861505a2282b1406a8e7b28909c

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.c > t1.d RETURN t1.b AS col_1, t1.b - t1.c AS col_2, t1.e AS col_3, t1.c AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, t1.a + t1.b * 2 + t1.c * 3 AS col_6, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_7 ORDER BY col_6, col_1, col_5
---- hash rowsort
13 tuples hashing to f3fb9861505a2282b1406a8e7b28909c

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.c AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, t1.a + t1.b * 2 AS col_5, t1.d AS col_6, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_7
---- hash rowsort
4 tuples hashing to a817d5c4c618f4c42b4f3b805d114cf0

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.c AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, t1.a + t1.b * 2 AS col_5, t1.d AS col_6, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_7 ORDER BY col_4, col_1, col_5, col_6, col_3
---- hash rowsort
4 tuples hashing to a817d5c4c618f4c42b4f3b805d114cf0

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.b AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4
---- hash rowsort
13 tuples hashing to 173e4994cd6ab5b27f4f842e3cb32936

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.b AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4 ORDER BY col_4, col_1, col_2
---- hash rowsort
13 tuples hashing to 173e4994cd6ab5b27f4f842e3cb32936

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e > t1.c OR t1.e < t1.d) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.b AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4
---- hash rowsort
13 tuples hashing to 173e4994cd6ab5b27f4f842e3cb32936

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e > t1.c OR t1.e < t1.d) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.b AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4 ORDER BY col_2, col_1
---- hash rowsort
13 tuples hashing to 173e4994cd6ab5b27f4f842e3cb32936

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.b AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.a - t1.b AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_6, t1.a + t1.b * 2 AS col_7
---- hash rowsort
17 tuples hashing to 5c163ac63543e0ecea6b845410a9b56c

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.b AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.a - t1.b AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_6, t1.a + t1.b * 2 AS col_7 ORDER BY col_2, col_5
---- hash rowsort
17 tuples hashing to 5c163ac63543e0ecea6b845410a9b56c

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.c - t1.d AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3
---- hash rowsort
29 tuples hashing to 1ec49f6791dd184fda345e1c050a3e0a

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.c - t1.d AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3 ORDER BY col_3, col_2
---- hash rowsort
29 tuples hashing to 1ec49f6791dd184fda345e1c050a3e0a

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.c - t1.d AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3
---- hash rowsort
29 tuples hashing to 1ec49f6791dd184fda345e1c050a3e0a

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.c - t1.d AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3 ORDER BY col_2, col_1, col_3
---- hash rowsort
29 tuples hashing to 1ec49f6791dd184fda345e1c050a3e0a

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.c - t1.d AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3
---- hash rowsort
29 tuples hashing to 1ec49f6791dd184fda345e1c050a3e0a

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.c - t1.d AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3 ORDER BY col_2, col_3
---- hash rowsort
29 tuples hashing to 1ec49f6791dd184fda345e1c050a3e0a

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.b - t1.c AS col_2, t1.d - t1.e AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.c - t1.d AS col_5, t1.a + t1.b * 2 AS col_6, t1.a AS col_7
---- hash rowsort
26 tuples hashing to b7435dc417aa7b9b48c92564eadaf539

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.b - t1.c AS col_2, t1.d - t1.e AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.c - t1.d AS col_5, t1.a + t1.b * 2 AS col_6, t1.a AS col_7 ORDER BY col_1, col_4, col_7, col_5, col_2, col_3, col_6
---- hash rowsort
26 tuples hashing to b7435dc417aa7b9b48c92564eadaf539

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.e > t1.a AND t1.e < t1.b) RETURN t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a + t1.b * 2 AS col_3
---- hash rowsort
16 tuples hashing to b017eedf1b384582bc0f9ccea450c45b

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.e > t1.a AND t1.e < t1.b) RETURN t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a + t1.b * 2 AS col_3 ORDER BY col_3, col_2, col_1
---- hash rowsort
16 tuples hashing to b017eedf1b384582bc0f9ccea450c45b

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a + t1.b * 2 AS col_3
---- hash rowsort
16 tuples hashing to b017eedf1b384582bc0f9ccea450c45b

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a + t1.b * 2 AS col_3 ORDER BY col_1, col_2
---- hash rowsort
16 tuples hashing to b017eedf1b384582bc0f9ccea450c45b

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.d AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, t1.e AS col_5
---- hash rowsort
30 tuples hashing to 910280276c633b79b275a9d294a0dd7e

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.d AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, t1.e AS col_5 ORDER BY col_4, col_5
---- hash rowsort
30 tuples hashing to 910280276c633b79b275a9d294a0dd7e

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.b > t1.c OR t1.a > t1.b RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.c - t1.d AS col_3, abs(t1.b - t1.c) AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, t1.e AS col_6
---- hash rowsort
24 tuples hashing to b0cf50305beafb1e2ef15470d870665d

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.b > t1.c OR t1.a > t1.b RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.c - t1.d AS col_3, abs(t1.b - t1.c) AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, t1.e AS col_6 ORDER BY col_4, col_2, col_1, col_3, col_5
---- hash rowsort
24 tuples hashing to b0cf50305beafb1e2ef15470d870665d

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.b > t1.c RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.c - t1.d AS col_3, abs(t1.b - t1.c) AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, t1.e AS col_6
---- hash rowsort
24 tuples hashing to b0cf50305beafb1e2ef15470d870665d

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.b > t1.c RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.c - t1.d AS col_3, abs(t1.b - t1.c) AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, t1.e AS col_6 ORDER BY col_4, col_1, col_5, col_6, col_2, col_3
---- hash rowsort
24 tuples hashing to b0cf50305beafb1e2ef15470d870665d

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR t1.a > t1.b OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.c - t1.d AS col_3, abs(t1.b - t1.c) AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, t1.e AS col_6
---- hash rowsort
24 tuples hashing to b0cf50305beafb1e2ef15470d870665d

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR t1.a > t1.b OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.c - t1.d AS col_3, abs(t1.b - t1.c) AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, t1.e AS col_6 ORDER BY col_1, col_6, col_5
---- hash rowsort
24 tuples hashing to b0cf50305beafb1e2ef15470d870665d

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) RETURN t1.e AS col_1, t1.a - t1.b AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.b AS col_4, abs(t1.a) AS col_5
---- hash rowsort
3 tuples hashing to 10166a1287dc846bc381908f1cdd9942

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) RETURN t1.e AS col_1, t1.a - t1.b AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.b AS col_4, abs(t1.a) AS col_5 ORDER BY col_2, col_5, col_4, col_1, col_3
---- hash rowsort
3 tuples hashing to 10166a1287dc846bc381908f1cdd9942

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e > t1.c OR t1.e < t1.d) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a AS col_1, t1.b - t1.c AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5, t1.e AS col_6
---- 1
107|-1|333|333|0|109

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e > t1.c OR t1.e < t1.d) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a AS col_1, t1.b - t1.c AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5, t1.e AS col_6 ORDER BY col_1, col_3, col_4, col_2
---- 1
107|-1|333|333|0|109

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a AS col_1, t1.b - t1.c AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5, t1.e AS col_6
---- 1
107|-1|333|333|0|109

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a AS col_1, t1.b - t1.c AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5, t1.e AS col_6 ORDER BY col_4, col_1
---- 1
107|-1|333|333|0|109

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.e > t1.c OR t1.e < t1.d) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a AS col_1, t1.b - t1.c AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5, t1.e AS col_6
---- 1
107|-1|333|333|0|109

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.e > t1.c OR t1.e < t1.d) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a AS col_1, t1.b - t1.c AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5, t1.e AS col_6 ORDER BY col_1, col_6, col_4, col_2, col_5, col_3
---- 1
107|-1|333|333|0|109

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a AS col_1, t1.b - t1.c AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5, t1.e AS col_6
---- 1
107|-1|333|333|0|109

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a AS col_1, t1.b - t1.c AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5, t1.e AS col_6 ORDER BY col_5, col_1, col_2, col_6, col_4, col_3
---- 1
107|-1|333|333|0|109

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.a AS col_3
---- 2
1338|444|220
1484|444|245

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.a AS col_3 ORDER BY col_3, col_2, col_1
---- 2
1338|444|220
1484|444|245

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND t1.d > t1.e RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.a AS col_3
---- 2
1338|444|220
1484|444|245

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND t1.d > t1.e RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.a AS col_3 ORDER BY col_3, col_1
---- 2
1338|444|220
1484|444|245

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.d AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.c - t1.d AS col_5
---- hash rowsort
23 tuples hashing to 85423b23f56dc9d107c8a7f05e1ed69f

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.d AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.c - t1.d AS col_5 ORDER BY col_4, col_5, col_2
---- hash rowsort
23 tuples hashing to 85423b23f56dc9d107c8a7f05e1ed69f

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.e > t1.c OR t1.e < t1.d) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.d AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.c - t1.d AS col_5
---- hash rowsort
23 tuples hashing to 85423b23f56dc9d107c8a7f05e1ed69f

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.e > t1.c OR t1.e < t1.d) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.d AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.c - t1.d AS col_5 ORDER BY col_1, col_2
---- hash rowsort
23 tuples hashing to 85423b23f56dc9d107c8a7f05e1ed69f

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d RETURN t1.c AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2
---- hash rowsort
13 tuples hashing to d9568f9745f48f39ac8f2365d73421e8

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d RETURN t1.c AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2 ORDER BY col_1, col_2
---- hash rowsort
13 tuples hashing to d9568f9745f48f39ac8f2365d73421e8

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b RETURN t1.a AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3
---- hash rowsort
17 tuples hashing to e11ff5467dcf535c8d18a66d2118b20f

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b RETURN t1.a AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3 ORDER BY col_1, col_2, col_3
---- hash rowsort
17 tuples hashing to e11ff5467dcf535c8d18a66d2118b20f

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.a AS col_2, abs(t1.b - t1.c) AS col_3, t1.c AS col_4, t1.b AS col_5, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_6, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_7
---- hash rowsort
30 tuples hashing to 68f3c01251d7d0155ebc39d74552c468

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.a AS col_2, abs(t1.b - t1.c) AS col_3, t1.c AS col_4, t1.b AS col_5, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_6, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_7 ORDER BY col_3, col_6, col_4, col_7, col_1
---- hash rowsort
30 tuples hashing to 68f3c01251d7d0155ebc39d74552c468

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.c - t1.d AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.a - t1.b AS col_3, t1.c AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5
---- hash rowsort
26 tuples hashing to b74d9b45d77541b380a040202bacdb7d

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.c - t1.d AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.a - t1.b AS col_3, t1.c AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5 ORDER BY col_5, col_2
---- hash rowsort
26 tuples hashing to b74d9b45d77541b380a040202bacdb7d

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1
---- hash rowsort
30 tuples hashing to 445b0172de37f3ca0ed777000309cef8

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1 ORDER BY col_1
---- hash rowsort
30 tuples hashing to 445b0172de37f3ca0ed777000309cef8

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.c - t1.d AS col_3
---- hash rowsort
30 tuples hashing to 8b14a16082dc488eda882a71c9d2446a

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.c - t1.d AS col_3 ORDER BY col_3, col_1
---- hash rowsort
30 tuples hashing to 8b14a16082dc488eda882a71c9d2446a

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.d - t1.e AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_6, t1.c AS col_7
---- hash rowsort
18 tuples hashing to 64d37da8e34e3aa76ea008b07eea3b9e

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.d - t1.e AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_6, t1.c AS col_7 ORDER BY col_5, col_7
---- hash rowsort
18 tuples hashing to 64d37da8e34e3aa76ea008b07eea3b9e

-STATEMENT MATCH (t1:t1) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.e AS col_3
---- hash rowsort
30 tuples hashing to 1eb3650aee03b10519d530d9d2d32daa

-STATEMENT MATCH (t1:t1) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.e AS col_3 ORDER BY col_2, col_3, col_1
---- hash rowsort
30 tuples hashing to 1eb3650aee03b10519d530d9d2d32daa

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) RETURN t1.d AS col_1
---- 3
190
222
248

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) RETURN t1.d AS col_1 ORDER BY col_1
---- 3
190
222
248

-STATEMENT MATCH (t1:t1) RETURN t1.a - t1.b AS col_1, t1.d - t1.e AS col_2
---- hash rowsort
30 tuples hashing to c60a057f1b0709ced3374a0ceb82507d

-STATEMENT MATCH (t1:t1) RETURN t1.a - t1.b AS col_1, t1.d - t1.e AS col_2 ORDER BY col_1, col_2
---- hash rowsort
30 tuples hashing to c60a057f1b0709ced3374a0ceb82507d

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1
---- hash rowsort
10 tuples hashing to b833e3a3ba082b2c0028b4cd08f0834d

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1 ORDER BY col_1
---- hash rowsort
10 tuples hashing to b833e3a3ba082b2c0028b4cd08f0834d

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1
---- hash rowsort
10 tuples hashing to b833e3a3ba082b2c0028b4cd08f0834d

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1 ORDER BY col_1
---- hash rowsort
10 tuples hashing to b833e3a3ba082b2c0028b4cd08f0834d

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a + t1.b * 2 AS col_1, t1.b - t1.c AS col_2, t1.c AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4
---- hash rowsort
26 tuples hashing to 1d50f4e0c1ed1032de3e7b775dd73868

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a + t1.b * 2 AS col_1, t1.b - t1.c AS col_2, t1.c AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4 ORDER BY col_2, col_4, col_1
---- hash rowsort
26 tuples hashing to 1d50f4e0c1ed1032de3e7b775dd73868

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.e AS col_3, abs(t1.a) AS col_4
---- hash rowsort
30 tuples hashing to ba136db6ad43163a3ef34562f928c5f0

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.e AS col_3, abs(t1.a) AS col_4 ORDER BY col_4, col_2
---- hash rowsort
30 tuples hashing to ba136db6ad43163a3ef34562f928c5f0

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.c AS col_1, t1.a AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.a - t1.b AS col_5, t1.a + t1.b * 2 + t1.c * 3 AS col_6
---- hash rowsort
26 tuples hashing to 206d0bc80a26b970f06e318d7e9bd644

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.c AS col_1, t1.a AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.a - t1.b AS col_5, t1.a + t1.b * 2 + t1.c * 3 AS col_6 ORDER BY col_1, col_2, col_6, col_5
---- hash rowsort
26 tuples hashing to 206d0bc80a26b970f06e318d7e9bd644

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR t1.c > t1.d RETURN t1.c AS col_1, t1.a AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.a - t1.b AS col_5, t1.a + t1.b * 2 + t1.c * 3 AS col_6
---- hash rowsort
26 tuples hashing to 206d0bc80a26b970f06e318d7e9bd644

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR t1.c > t1.d RETURN t1.c AS col_1, t1.a AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.a - t1.b AS col_5, t1.a + t1.b * 2 + t1.c * 3 AS col_6 ORDER BY col_5, col_3, col_6, col_1
---- hash rowsort
26 tuples hashing to 206d0bc80a26b970f06e318d7e9bd644

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.d - t1.e AS col_1
---- hash rowsort
19 tuples hashing to 7b54a5de170e892819f38d8939bfcdec

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.d - t1.e AS col_1 ORDER BY col_1
---- hash rowsort
19 tuples hashing to 7b54a5de170e892819f38d8939bfcdec

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.b > t1.c RETURN t1.d - t1.e AS col_1
---- hash rowsort
19 tuples hashing to 7b54a5de170e892819f38d8939bfcdec

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.b > t1.c RETURN t1.d - t1.e AS col_1 ORDER BY col_1
---- hash rowsort
19 tuples hashing to 7b54a5de170e892819f38d8939bfcdec

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.d > t1.e AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.c - t1.d AS col_1, abs(t1.a) AS col_2, t1.b - t1.c AS col_3, t1.b AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5, t1.c AS col_6
---- hash rowsort
5 tuples hashing to ed58ee197e5adb321f7c6370392528e1

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.d > t1.e AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.c - t1.d AS col_1, abs(t1.a) AS col_2, t1.b - t1.c AS col_3, t1.b AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5, t1.c AS col_6 ORDER BY col_4, col_3, col_6, col_5, col_2, col_1
---- hash rowsort
5 tuples hashing to ed58ee197e5adb321f7c6370392528e1

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.d > t1.e RETURN t1.c - t1.d AS col_1, abs(t1.a) AS col_2, t1.b - t1.c AS col_3, t1.b AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5, t1.c AS col_6
---- hash rowsort
5 tuples hashing to ed58ee197e5adb321f7c6370392528e1

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.d > t1.e RETURN t1.c - t1.d AS col_1, abs(t1.a) AS col_2, t1.b - t1.c AS col_3, t1.b AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5, t1.c AS col_6 ORDER BY col_3, col_4, col_5
---- hash rowsort
5 tuples hashing to ed58ee197e5adb321f7c6370392528e1

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.c - t1.d AS col_1, abs(t1.a) AS col_2, t1.b - t1.c AS col_3, t1.b AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5, t1.c AS col_6
---- hash rowsort
5 tuples hashing to ed58ee197e5adb321f7c6370392528e1

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.c - t1.d AS col_1, abs(t1.a) AS col_2, t1.b - t1.c AS col_3, t1.b AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5, t1.c AS col_6 ORDER BY col_6, col_1
---- hash rowsort
5 tuples hashing to ed58ee197e5adb321f7c6370392528e1

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN abs(t1.b - t1.c) AS col_1, t1.d AS col_2, t1.c - t1.d AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.b - t1.c AS col_5
---- hash rowsort
10 tuples hashing to bb84b24e592ceb4ae7edb4cfd9c05746

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN abs(t1.b - t1.c) AS col_1, t1.d AS col_2, t1.c - t1.d AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.b - t1.c AS col_5 ORDER BY col_2, col_5, col_1, col_4, col_3
---- hash rowsort
10 tuples hashing to bb84b24e592ceb4ae7edb4cfd9c05746

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR t1.c > t1.d RETURN t1.c - t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.c AS col_3, abs(t1.b - t1.c) AS col_4, t1.e AS col_5, t1.d AS col_6, t1.d - t1.e AS col_7
---- hash rowsort
28 tuples hashing to e48e30f893e08742181bb5a88cbe9a37

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR t1.c > t1.d RETURN t1.c - t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.c AS col_3, abs(t1.b - t1.c) AS col_4, t1.e AS col_5, t1.d AS col_6, t1.d - t1.e AS col_7 ORDER BY col_3, col_4, col_5, col_2
---- hash rowsort
28 tuples hashing to e48e30f893e08742181bb5a88cbe9a37

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.d - t1.e AS col_2, t1.a - t1.b AS col_3, abs(t1.a) AS col_4, t1.b AS col_5, t1.b - t1.c AS col_6
---- hash rowsort
15 tuples hashing to afa30011e6f2bf13350422b6fbcd727d

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.d - t1.e AS col_2, t1.a - t1.b AS col_3, abs(t1.a) AS col_4, t1.b AS col_5, t1.b - t1.c AS col_6 ORDER BY col_4, col_6, col_1, col_5, col_2
---- hash rowsort
15 tuples hashing to afa30011e6f2bf13350422b6fbcd727d

-STATEMENT MATCH (t1:t1) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1
---- hash rowsort
30 tuples hashing to 74b4b1d1e049d57b3610b70a67a1c32f

-STATEMENT MATCH (t1:t1) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1 ORDER BY col_1
---- hash rowsort
30 tuples hashing to 74b4b1d1e049d57b3610b70a67a1c32f

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.d AS col_1, t1.c - t1.d AS col_2, t1.c AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, t1.a - t1.b AS col_6
---- hash rowsort
30 tuples hashing to 3c2b8c60f9c069d2fec20be5436bcaef

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.d AS col_1, t1.c - t1.d AS col_2, t1.c AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, t1.a - t1.b AS col_6 ORDER BY col_2, col_5, col_3, col_1, col_4
---- hash rowsort
30 tuples hashing to 3c2b8c60f9c069d2fec20be5436bcaef

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.b > t1.c RETURN abs(t1.a) AS col_1, abs(t1.b - t1.c) AS col_2
---- hash rowsort
15 tuples hashing to 22e9f0aee0362e751bbd3b8ee9e4132b

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.b > t1.c RETURN abs(t1.a) AS col_1, abs(t1.b - t1.c) AS col_2 ORDER BY col_2, col_1
---- hash rowsort
15 tuples hashing to 22e9f0aee0362e751bbd3b8ee9e4132b

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN abs(t1.a) AS col_1, abs(t1.b - t1.c) AS col_2
---- hash rowsort
15 tuples hashing to 22e9f0aee0362e751bbd3b8ee9e4132b

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN abs(t1.a) AS col_1, abs(t1.b - t1.c) AS col_2 ORDER BY col_2, col_1
---- hash rowsort
15 tuples hashing to 22e9f0aee0362e751bbd3b8ee9e4132b

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.e AS col_1, t1.c AS col_2, abs(t1.b - t1.c) AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.d - t1.e AS col_5
---- hash rowsort
10 tuples hashing to 6f2760ad04a095b47a38304a0ce7cdad

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.e AS col_1, t1.c AS col_2, abs(t1.b - t1.c) AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.d - t1.e AS col_5 ORDER BY col_3, col_1
---- hash rowsort
10 tuples hashing to 6f2760ad04a095b47a38304a0ce7cdad

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.c AS col_1, t1.a + t1.b * 2 AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3
---- hash rowsort
10 tuples hashing to 9dd3f8305d9a0c3356085f5f4b3dce73

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.c AS col_1, t1.a + t1.b * 2 AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3 ORDER BY col_3, col_2
---- hash rowsort
10 tuples hashing to 9dd3f8305d9a0c3356085f5f4b3dce73

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d RETURN t1.c - t1.d AS col_1, t1.d - t1.e AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4
---- hash rowsort
13 tuples hashing to bb512ea3d271ac62b90c40752e35f14b

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d RETURN t1.c - t1.d AS col_1, t1.d - t1.e AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4 ORDER BY col_3, col_1, col_2
---- hash rowsort
13 tuples hashing to bb512ea3d271ac62b90c40752e35f14b

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.b AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.b - t1.c AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.a AS col_5, abs(t1.a) AS col_6, t1.d - t1.e AS col_7
---- hash rowsort
30 tuples hashing to b5cbf607833bf9a5fdc632fb91e9ff71

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.b AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.b - t1.c AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.a AS col_5, abs(t1.a) AS col_6, t1.d - t1.e AS col_7 ORDER BY col_5, col_4, col_2, col_7, col_3
---- hash rowsort
30 tuples hashing to b5cbf607833bf9a5fdc632fb91e9ff71

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a AS col_1
---- hash rowsort
10 tuples hashing to 7e883b178d4e5791c14e6a7e2bac0d0d

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a AS col_1 ORDER BY col_1
---- hash rowsort
10 tuples hashing to 7e883b178d4e5791c14e6a7e2bac0d0d

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN abs(t1.b - t1.c) AS col_1, t1.b AS col_2
---- hash rowsort
27 tuples hashing to d4ce8ba735d9acaa3b10b7b1a10f6953

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN abs(t1.b - t1.c) AS col_1, t1.b AS col_2 ORDER BY col_1, col_2
---- hash rowsort
27 tuples hashing to d4ce8ba735d9acaa3b10b7b1a10f6953

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN abs(t1.b - t1.c) AS col_1, t1.b AS col_2
---- hash rowsort
27 tuples hashing to d4ce8ba735d9acaa3b10b7b1a10f6953

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN abs(t1.b - t1.c) AS col_1, t1.b AS col_2 ORDER BY col_2, col_1
---- hash rowsort
27 tuples hashing to d4ce8ba735d9acaa3b10b7b1a10f6953

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN abs(t1.b - t1.c) AS col_1, t1.b AS col_2
---- hash rowsort
27 tuples hashing to d4ce8ba735d9acaa3b10b7b1a10f6953

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN abs(t1.b - t1.c) AS col_1, t1.b AS col_2 ORDER BY col_1, col_2
---- hash rowsort
27 tuples hashing to d4ce8ba735d9acaa3b10b7b1a10f6953

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN abs(t1.b - t1.c) AS col_1, t1.b AS col_2
---- hash rowsort
27 tuples hashing to d4ce8ba735d9acaa3b10b7b1a10f6953

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN abs(t1.b - t1.c) AS col_1, t1.b AS col_2 ORDER BY col_1, col_2
---- hash rowsort
27 tuples hashing to d4ce8ba735d9acaa3b10b7b1a10f6953

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.e > t1.a AND t1.e < t1.b) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4
---- 0


-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.e > t1.a AND t1.e < t1.b) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4 ORDER BY col_3, col_4
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4 ORDER BY col_1, col_3, col_4
---- 0


-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.e > t1.a AND t1.e < t1.b) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4
---- 0


-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.e > t1.a AND t1.e < t1.b) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4 ORDER BY col_1, col_4
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) RETURN abs(t1.a) AS col_1, t1.a - t1.b AS col_2, t1.d AS col_3, t1.a + t1.b * 2 AS col_4, t1.c - t1.d AS col_5
---- hash rowsort
21 tuples hashing to 7812b85b0f50b75dbd9e607e311dab66

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) RETURN abs(t1.a) AS col_1, t1.a - t1.b AS col_2, t1.d AS col_3, t1.a + t1.b * 2 AS col_4, t1.c - t1.d AS col_5 ORDER BY col_1, col_3, col_2, col_4
---- hash rowsort
21 tuples hashing to 7812b85b0f50b75dbd9e607e311dab66

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c RETURN t1.d AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.d - t1.e AS col_3
---- hash rowsort
13 tuples hashing to c87739d1c8a83e2c24c60f3aa8b27352

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c RETURN t1.d AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.d - t1.e AS col_3 ORDER BY col_3, col_2
---- hash rowsort
13 tuples hashing to c87739d1c8a83e2c24c60f3aa8b27352

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.c > t1.d RETURN t1.e AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.a - t1.b AS col_4, t1.c - t1.d AS col_5
---- hash rowsort
5 tuples hashing to f97cdad01f826c602da43c95709d7b37

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.c > t1.d RETURN t1.e AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.a - t1.b AS col_4, t1.c - t1.d AS col_5 ORDER BY col_4, col_1, col_3, col_2, col_5
---- hash rowsort
5 tuples hashing to f97cdad01f826c602da43c95709d7b37

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a AS col_1, t1.d - t1.e AS col_2, t1.c - t1.d AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, abs(t1.a) AS col_5, t1.b - t1.c AS col_6, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_7
---- hash rowsort
8 tuples hashing to 2a206e5f4a306122d828045c0545b0e9

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a AS col_1, t1.d - t1.e AS col_2, t1.c - t1.d AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, abs(t1.a) AS col_5, t1.b - t1.c AS col_6, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_7 ORDER BY col_3, col_2, col_5, col_1
---- hash rowsort
8 tuples hashing to 2a206e5f4a306122d828045c0545b0e9

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN abs(t1.b - t1.c) AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.d AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, t1.b AS col_5, t1.a - t1.b AS col_6, t1.c - t1.d AS col_7
---- hash rowsort
26 tuples hashing to bb6a2dc836dbe87b1f1614c7b5cbc31f

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN abs(t1.b - t1.c) AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.d AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, t1.b AS col_5, t1.a - t1.b AS col_6, t1.c - t1.d AS col_7 ORDER BY col_3, col_7
---- hash rowsort
26 tuples hashing to bb6a2dc836dbe87b1f1614c7b5cbc31f

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND t1.c > t1.d RETURN t1.b AS col_1, t1.a + t1.b * 2 AS col_2
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND t1.c > t1.d RETURN t1.b AS col_1, t1.a + t1.b * 2 AS col_2 ORDER BY col_1, col_2
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.b AS col_1, t1.a + t1.b * 2 AS col_2
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.b AS col_1, t1.a + t1.b * 2 AS col_2 ORDER BY col_2, col_1
---- 0


-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4
---- hash rowsort
15 tuples hashing to d644984b6f9054a9563f45bc047ccb8e

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4 ORDER BY col_3, col_1, col_4, col_2
---- hash rowsort
15 tuples hashing to d644984b6f9054a9563f45bc047ccb8e

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.b - t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5, abs(t1.b - t1.c) AS col_6
---- hash rowsort
7 tuples hashing to 330177bd106f9db2a147541d0a83c95d

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.b - t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5, abs(t1.b - t1.c) AS col_6 ORDER BY col_5, col_3, col_4, col_1
---- hash rowsort
7 tuples hashing to 330177bd106f9db2a147541d0a83c95d

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.d > t1.e AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.b - t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5, abs(t1.b - t1.c) AS col_6
---- hash rowsort
7 tuples hashing to 330177bd106f9db2a147541d0a83c95d

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.d > t1.e AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.b - t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5, abs(t1.b - t1.c) AS col_6 ORDER BY col_6, col_4, col_1
---- hash rowsort
7 tuples hashing to 330177bd106f9db2a147541d0a83c95d

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR t1.a > t1.b RETURN t1.a AS col_1, t1.b AS col_2
---- hash rowsort
27 tuples hashing to a09cfc6ea15c7f2923bb3bf3c08114d5

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR t1.a > t1.b RETURN t1.a AS col_1, t1.b AS col_2 ORDER BY col_2, col_1
---- hash rowsort
27 tuples hashing to a09cfc6ea15c7f2923bb3bf3c08114d5

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a AS col_1, t1.b AS col_2
---- hash rowsort
27 tuples hashing to a09cfc6ea15c7f2923bb3bf3c08114d5

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a AS col_1, t1.b AS col_2 ORDER BY col_1, col_2
---- hash rowsort
27 tuples hashing to a09cfc6ea15c7f2923bb3bf3c08114d5

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, abs(t1.b - t1.c) AS col_2, abs(t1.a) AS col_3
---- hash rowsort
3 tuples hashing to f044135d5ec9fca538836730e824fee6

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, abs(t1.b - t1.c) AS col_2, abs(t1.a) AS col_3 ORDER BY col_3, col_2, col_1
---- hash rowsort
3 tuples hashing to f044135d5ec9fca538836730e824fee6

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.e > t1.a AND t1.e < t1.b) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, abs(t1.b - t1.c) AS col_2, abs(t1.a) AS col_3
---- hash rowsort
3 tuples hashing to f044135d5ec9fca538836730e824fee6

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.e > t1.a AND t1.e < t1.b) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, abs(t1.b - t1.c) AS col_2, abs(t1.a) AS col_3 ORDER BY col_3, col_1
---- hash rowsort
3 tuples hashing to f044135d5ec9fca538836730e824fee6

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2
---- hash rowsort
8 tuples hashing to cd57c9637cf1dd8a14c62b351d7876c7

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2 ORDER BY col_1, col_2
---- hash rowsort
8 tuples hashing to cd57c9637cf1dd8a14c62b351d7876c7

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2
---- hash rowsort
8 tuples hashing to cd57c9637cf1dd8a14c62b351d7876c7

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2 ORDER BY col_2, col_1
---- hash rowsort
8 tuples hashing to cd57c9637cf1dd8a14c62b351d7876c7

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND t1.d > t1.e AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.b AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.a + t1.b * 2 AS col_3
---- hash rowsort
5 tuples hashing to 549ef6c7a2e8518af80a4c5c167ccb57

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND t1.d > t1.e AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.b AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.a + t1.b * 2 AS col_3 ORDER BY col_2, col_1, col_3
---- hash rowsort
5 tuples hashing to 549ef6c7a2e8518af80a4c5c167ccb57

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.a > t1.b RETURN t1.b AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.a + t1.b * 2 AS col_3
---- hash rowsort
5 tuples hashing to 549ef6c7a2e8518af80a4c5c167ccb57

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.a > t1.b RETURN t1.b AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.a + t1.b * 2 AS col_3 ORDER BY col_2, col_3, col_1
---- hash rowsort
5 tuples hashing to 549ef6c7a2e8518af80a4c5c167ccb57

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND t1.a > t1.b AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.b AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.a + t1.b * 2 AS col_3
---- hash rowsort
5 tuples hashing to 549ef6c7a2e8518af80a4c5c167ccb57

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND t1.a > t1.b AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.b AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.a + t1.b * 2 AS col_3 ORDER BY col_3, col_2
---- hash rowsort
5 tuples hashing to 549ef6c7a2e8518af80a4c5c167ccb57

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1
---- 1
222

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1 ORDER BY col_1
---- 1
222

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e > t1.a AND t1.e < t1.b) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1
---- 1
222

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e > t1.a AND t1.e < t1.b) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1 ORDER BY col_1
---- 1
222

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.a - t1.b AS col_2, t1.e AS col_3, abs(t1.b - t1.c) AS col_4
---- hash rowsort
8 tuples hashing to be5aab25bb7e0a33c20cbc34de57ed18

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.a - t1.b AS col_2, t1.e AS col_3, abs(t1.b - t1.c) AS col_4 ORDER BY col_4, col_1
---- hash rowsort
8 tuples hashing to be5aab25bb7e0a33c20cbc34de57ed18

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.c AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3
---- hash rowsort
3 tuples hashing to d721035cc6a214f9dff82f700c27f98f

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.c AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3 ORDER BY col_2, col_1
---- hash rowsort
3 tuples hashing to d721035cc6a214f9dff82f700c27f98f

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e RETURN abs(t1.a) AS col_1, t1.c AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.d AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_6, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_7
---- hash rowsort
11 tuples hashing to 0d8574644a00abf2c52da416b02ea014

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e RETURN abs(t1.a) AS col_1, t1.c AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.d AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_6, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_7 ORDER BY col_6, col_2, col_7, col_3, col_5, col_1
---- hash rowsort
11 tuples hashing to 0d8574644a00abf2c52da416b02ea014

-STATEMENT MATCH (t1:t1) RETURN t1.c - t1.d AS col_1
---- hash rowsort
30 tuples hashing to 5597b8fa34613aadc270053ea54637e5

-STATEMENT MATCH (t1:t1) RETURN t1.c - t1.d AS col_1 ORDER BY col_1
---- hash rowsort
30 tuples hashing to 5597b8fa34613aadc270053ea54637e5

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.d AS col_2, t1.b AS col_3, t1.a + t1.b * 2 AS col_4
---- hash rowsort
15 tuples hashing to f3728015d880344e7da187798a04d6fe

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.d AS col_2, t1.b AS col_3, t1.a + t1.b * 2 AS col_4 ORDER BY col_2, col_3, col_4, col_1
---- hash rowsort
15 tuples hashing to f3728015d880344e7da187798a04d6fe

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.c > t1.d RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.b - t1.c AS col_2
---- hash rowsort
5 tuples hashing to 993ada4aa33fed5a3c3cc14c7f0355a2

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.c > t1.d RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.b - t1.c AS col_2 ORDER BY col_1, col_2
---- hash rowsort
5 tuples hashing to 993ada4aa33fed5a3c3cc14c7f0355a2

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.b - t1.c AS col_2
---- hash rowsort
5 tuples hashing to 993ada4aa33fed5a3c3cc14c7f0355a2

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.b - t1.c AS col_2 ORDER BY col_2, col_1
---- hash rowsort
5 tuples hashing to 993ada4aa33fed5a3c3cc14c7f0355a2

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND t1.b > t1.c AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.e AS col_2, abs(t1.b - t1.c) AS col_3
---- hash rowsort
5 tuples hashing to efd797723366531db1bebf903a6d7592

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND t1.b > t1.c AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.e AS col_2, abs(t1.b - t1.c) AS col_3 ORDER BY col_1, col_2
---- hash rowsort
5 tuples hashing to efd797723366531db1bebf903a6d7592

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND NOT (t1.d >= 110 AND t1.d <= 150) AND t1.b > t1.c RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.e AS col_2, abs(t1.b - t1.c) AS col_3
---- hash rowsort
5 tuples hashing to efd797723366531db1bebf903a6d7592

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND NOT (t1.d >= 110 AND t1.d <= 150) AND t1.b > t1.c RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.e AS col_2, abs(t1.b - t1.c) AS col_3 ORDER BY col_2, col_1, col_3
---- hash rowsort
5 tuples hashing to efd797723366531db1bebf903a6d7592

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND t1.b > t1.c AND (t1.e > t1.c OR t1.e < t1.d) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.e AS col_2, abs(t1.b - t1.c) AS col_3
---- hash rowsort
5 tuples hashing to efd797723366531db1bebf903a6d7592

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND t1.b > t1.c AND (t1.e > t1.c OR t1.e < t1.d) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.e AS col_2, abs(t1.b - t1.c) AS col_3 ORDER BY col_3, col_1, col_2
---- hash rowsort
5 tuples hashing to efd797723366531db1bebf903a6d7592

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN abs(t1.b - t1.c) AS col_1, t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5
---- hash rowsort
22 tuples hashing to 2f522c62ea77218ed529d169e6ba970b

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN abs(t1.b - t1.c) AS col_1, t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5 ORDER BY col_3, col_1, col_4, col_5
---- hash rowsort
22 tuples hashing to 2f522c62ea77218ed529d169e6ba970b

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.e > t1.a AND t1.e < t1.b) RETURN abs(t1.b - t1.c) AS col_1, t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5
---- hash rowsort
22 tuples hashing to 2f522c62ea77218ed529d169e6ba970b

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.e > t1.a AND t1.e < t1.b) RETURN abs(t1.b - t1.c) AS col_1, t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5 ORDER BY col_5, col_1, col_2, col_3
---- hash rowsort
22 tuples hashing to 2f522c62ea77218ed529d169e6ba970b

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.e > t1.a AND t1.e < t1.b) RETURN abs(t1.b - t1.c) AS col_1, t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5
---- hash rowsort
22 tuples hashing to 2f522c62ea77218ed529d169e6ba970b

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.e > t1.a AND t1.e < t1.b) RETURN abs(t1.b - t1.c) AS col_1, t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5 ORDER BY col_5, col_3, col_1
---- hash rowsort
22 tuples hashing to 2f522c62ea77218ed529d169e6ba970b

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.a AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, t1.d AS col_5, t1.c - t1.d AS col_6
---- hash rowsort
13 tuples hashing to 029db106a359201924a20c5e7ff377e2

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.a AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, t1.d AS col_5, t1.c - t1.d AS col_6 ORDER BY col_1, col_3, col_5, col_6, col_4
---- hash rowsort
13 tuples hashing to 029db106a359201924a20c5e7ff377e2

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND t1.a > t1.b AND t1.d > t1.e RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.b - t1.c AS col_2, t1.e AS col_3, t1.d - t1.e AS col_4, t1.c - t1.d AS col_5, t1.a AS col_6
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND t1.a > t1.b AND t1.d > t1.e RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.b - t1.c AS col_2, t1.e AS col_3, t1.d - t1.e AS col_4, t1.c - t1.d AS col_5, t1.a AS col_6 ORDER BY col_6, col_3
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND t1.d > t1.e AND (t1.e > t1.a AND t1.e < t1.b) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.b - t1.c AS col_2, t1.e AS col_3, t1.d - t1.e AS col_4, t1.c - t1.d AS col_5, t1.a AS col_6
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND t1.d > t1.e AND (t1.e > t1.a AND t1.e < t1.b) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.b - t1.c AS col_2, t1.e AS col_3, t1.d - t1.e AS col_4, t1.c - t1.d AS col_5, t1.a AS col_6 ORDER BY col_6, col_5
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND t1.b > t1.c RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.c AS col_3, t1.a + t1.b * 2 AS col_4
---- 2
16|2878|193|579
26|3706|247|743

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND t1.b > t1.c RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.c AS col_3, t1.a + t1.b * 2 AS col_4 ORDER BY col_2, col_4
---- 2
16|2878|193|579
26|3706|247|743

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN abs(t1.a) AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.a + t1.b * 2 AS col_3, t1.e AS col_4, t1.b AS col_5
---- hash rowsort
8 tuples hashing to e5463f71a41e13dccc88ded91f689791

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN abs(t1.a) AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.a + t1.b * 2 AS col_3, t1.e AS col_4, t1.b AS col_5 ORDER BY col_5, col_4, col_1, col_2, col_3
---- hash rowsort
8 tuples hashing to e5463f71a41e13dccc88ded91f689791

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a - t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, abs(t1.a) AS col_5
---- hash rowsort
15 tuples hashing to 35978cebd4adb543c68cf09793e3a08d

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a - t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, abs(t1.a) AS col_5 ORDER BY col_5, col_2, col_4
---- hash rowsort
15 tuples hashing to 35978cebd4adb543c68cf09793e3a08d

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a - t1.b AS col_1
---- hash rowsort
15 tuples hashing to 0462df69a372162bd2326b32559acd24

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a - t1.b AS col_1 ORDER BY col_1
---- hash rowsort
15 tuples hashing to 0462df69a372162bd2326b32559acd24

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 AS col_1, t1.d - t1.e AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4
---- hash rowsort
23 tuples hashing to 10918894cdc2e2486b0c6db84bc930f2

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 AS col_1, t1.d - t1.e AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4 ORDER BY col_1, col_2, col_3, col_4
---- hash rowsort
23 tuples hashing to 10918894cdc2e2486b0c6db84bc930f2

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR t1.b > t1.c RETURN t1.a + t1.b * 2 AS col_1, t1.d - t1.e AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4
---- hash rowsort
23 tuples hashing to 10918894cdc2e2486b0c6db84bc930f2

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR t1.b > t1.c RETURN t1.a + t1.b * 2 AS col_1, t1.d - t1.e AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4 ORDER BY col_3, col_2, col_4
---- hash rowsort
23 tuples hashing to 10918894cdc2e2486b0c6db84bc930f2

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.b AS col_1
---- hash rowsort
14 tuples hashing to a7e5c80b121ef6ebed205e0e293a70bb

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.b AS col_1 ORDER BY col_1
---- hash rowsort
14 tuples hashing to a7e5c80b121ef6ebed205e0e293a70bb

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.b AS col_1
---- hash rowsort
14 tuples hashing to a7e5c80b121ef6ebed205e0e293a70bb

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.b AS col_1 ORDER BY col_1
---- hash rowsort
14 tuples hashing to a7e5c80b121ef6ebed205e0e293a70bb

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR t1.c > t1.d OR t1.d > t1.e RETURN abs(t1.a) AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2
---- hash rowsort
26 tuples hashing to 8016ab331d3de23b9d9d86ef15ff6188

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR t1.c > t1.d OR t1.d > t1.e RETURN abs(t1.a) AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2 ORDER BY col_1, col_2
---- hash rowsort
26 tuples hashing to 8016ab331d3de23b9d9d86ef15ff6188

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR t1.c > t1.d OR (t1.e > t1.c OR t1.e < t1.d) RETURN abs(t1.a) AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2
---- hash rowsort
26 tuples hashing to 8016ab331d3de23b9d9d86ef15ff6188

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR t1.c > t1.d OR (t1.e > t1.c OR t1.e < t1.d) RETURN abs(t1.a) AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2 ORDER BY col_2, col_1
---- hash rowsort
26 tuples hashing to 8016ab331d3de23b9d9d86ef15ff6188

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.e > t1.c OR t1.e < t1.d) OR t1.c > t1.d RETURN abs(t1.a) AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2
---- hash rowsort
26 tuples hashing to 8016ab331d3de23b9d9d86ef15ff6188

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.e > t1.c OR t1.e < t1.d) OR t1.c > t1.d RETURN abs(t1.a) AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2 ORDER BY col_1, col_2
---- hash rowsort
26 tuples hashing to 8016ab331d3de23b9d9d86ef15ff6188

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.c > t1.d AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.a + t1.b * 2 AS col_3, abs(t1.b - t1.c) AS col_4, t1.b AS col_5
---- hash rowsort
11 tuples hashing to 48231c3bc55f491fbef643fb9e0ff0dd

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.c > t1.d AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.a + t1.b * 2 AS col_3, abs(t1.b - t1.c) AS col_4, t1.b AS col_5 ORDER BY col_4, col_1, col_5, col_2, col_3
---- hash rowsort
11 tuples hashing to 48231c3bc55f491fbef643fb9e0ff0dd

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.c > t1.d RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.a + t1.b * 2 AS col_3, abs(t1.b - t1.c) AS col_4, t1.b AS col_5
---- hash rowsort
11 tuples hashing to 48231c3bc55f491fbef643fb9e0ff0dd

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.c > t1.d RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.a + t1.b * 2 AS col_3, abs(t1.b - t1.c) AS col_4, t1.b AS col_5 ORDER BY col_5, col_4, col_3, col_1, col_2
---- hash rowsort
11 tuples hashing to 48231c3bc55f491fbef643fb9e0ff0dd

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.d AS col_2, t1.b - t1.c AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4
---- hash rowsort
15 tuples hashing to ae37d31c8ce412a5a1d53fff2eadd283

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.d AS col_2, t1.b - t1.c AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4 ORDER BY col_4, col_3, col_1, col_2
---- hash rowsort
15 tuples hashing to ae37d31c8ce412a5a1d53fff2eadd283

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b RETURN t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.a AS col_5, abs(t1.b - t1.c) AS col_6, t1.c - t1.d AS col_7
---- hash rowsort
17 tuples hashing to d681beba9c51dcdbdb73c28c06816f1a

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b RETURN t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.a AS col_5, abs(t1.b - t1.c) AS col_6, t1.c - t1.d AS col_7 ORDER BY col_3, col_4, col_7, col_5, col_2, col_1, col_6
---- hash rowsort
17 tuples hashing to d681beba9c51dcdbdb73c28c06816f1a

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a - t1.b AS col_2, t1.c AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4
---- hash rowsort
17 tuples hashing to 4df88795d28642e3011ed7c43bbfacb3

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a - t1.b AS col_2, t1.c AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4 ORDER BY col_1, col_2
---- hash rowsort
17 tuples hashing to 4df88795d28642e3011ed7c43bbfacb3

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, abs(t1.b - t1.c) AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, t1.d - t1.e AS col_5
---- hash rowsort
22 tuples hashing to 368aabb83756ec743ef7e87d428181f7

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, abs(t1.b - t1.c) AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, t1.d - t1.e AS col_5 ORDER BY col_1, col_4
---- hash rowsort
22 tuples hashing to 368aabb83756ec743ef7e87d428181f7

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, abs(t1.b - t1.c) AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, t1.d - t1.e AS col_5
---- hash rowsort
22 tuples hashing to 368aabb83756ec743ef7e87d428181f7

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, abs(t1.b - t1.c) AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, t1.d - t1.e AS col_5 ORDER BY col_1, col_5, col_4, col_2, col_3
---- hash rowsort
22 tuples hashing to 368aabb83756ec743ef7e87d428181f7

-STATEMENT MATCH (t1:t1) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.d AS col_2, t1.c AS col_3, abs(t1.a) AS col_4, t1.b AS col_5, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_6
---- hash rowsort
30 tuples hashing to 569cfd1e5f992d360c1409a72c51313e

-STATEMENT MATCH (t1:t1) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.d AS col_2, t1.c AS col_3, abs(t1.a) AS col_4, t1.b AS col_5, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_6 ORDER BY col_3, col_2, col_5, col_4, col_1, col_6
---- hash rowsort
30 tuples hashing to 569cfd1e5f992d360c1409a72c51313e

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.e AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, abs(t1.a) AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.e AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, abs(t1.a) AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4 ORDER BY col_2, col_4, col_3
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.a > t1.b RETURN t1.e AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, abs(t1.a) AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.a > t1.b RETURN t1.e AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, abs(t1.a) AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4 ORDER BY col_4, col_2
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND t1.a > t1.b AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.e AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, abs(t1.a) AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND t1.a > t1.b AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.e AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, abs(t1.a) AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4 ORDER BY col_4, col_1
---- 0


-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.a > t1.b AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.e AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, abs(t1.a) AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4
---- 0


-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.a > t1.b AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.e AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, abs(t1.a) AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4 ORDER BY col_3, col_4, col_1
---- 0


-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.e > t1.c OR t1.e < t1.d) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.e AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.a - t1.b AS col_4, t1.b - t1.c AS col_5
---- 0


-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.e > t1.c OR t1.e < t1.d) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.e AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.a - t1.b AS col_4, t1.b - t1.c AS col_5 ORDER BY col_3, col_1, col_4, col_2
---- 0


-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.e AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.a - t1.b AS col_4, t1.b - t1.c AS col_5
---- 0


-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.e AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.a - t1.b AS col_4, t1.b - t1.c AS col_5 ORDER BY col_5, col_4, col_3, col_1, col_2
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.d AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.e AS col_5
---- hash rowsort
10 tuples hashing to 811663651ce5d74b26e6f8a0ab084a54

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.d AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.e AS col_5 ORDER BY col_4, col_1, col_5, col_3
---- hash rowsort
10 tuples hashing to 811663651ce5d74b26e6f8a0ab084a54

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.d AS col_1
---- 3
190
222
248

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.d AS col_1 ORDER BY col_1
---- 3
190
222
248

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.d AS col_1
---- 3
190
222
248

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.d AS col_1 ORDER BY col_1
---- 3
190
222
248

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND t1.c > t1.d AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.c AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.e AS col_3, t1.d - t1.e AS col_4, t1.a + t1.b * 2 AS col_5, t1.b - t1.c AS col_6, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_7
---- 1
224|222|221|1|666|-1|0

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND t1.c > t1.d AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.c AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.e AS col_3, t1.d - t1.e AS col_4, t1.a + t1.b * 2 AS col_5, t1.b - t1.c AS col_6, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_7 ORDER BY col_3, col_4, col_6, col_7, col_1
---- 1
224|222|221|1|666|-1|0

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND t1.d > t1.e AND t1.c > t1.d RETURN t1.c AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.e AS col_3, t1.d - t1.e AS col_4, t1.a + t1.b * 2 AS col_5, t1.b - t1.c AS col_6, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_7
---- 1
224|222|221|1|666|-1|0

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND t1.d > t1.e AND t1.c > t1.d RETURN t1.c AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.e AS col_3, t1.d - t1.e AS col_4, t1.a + t1.b * 2 AS col_5, t1.b - t1.c AS col_6, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_7 ORDER BY col_6, col_3, col_4
---- 1
224|222|221|1|666|-1|0

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND t1.c > t1.d AND t1.d > t1.e RETURN t1.c AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.e AS col_3, t1.d - t1.e AS col_4, t1.a + t1.b * 2 AS col_5, t1.b - t1.c AS col_6, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_7
---- 1
224|222|221|1|666|-1|0

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND t1.c > t1.d AND t1.d > t1.e RETURN t1.c AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.e AS col_3, t1.d - t1.e AS col_4, t1.a + t1.b * 2 AS col_5, t1.b - t1.c AS col_6, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_7 ORDER BY col_2, col_1
---- 1
224|222|221|1|666|-1|0

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.e > t1.a AND t1.e < t1.b) AND t1.c > t1.d RETURN t1.c AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.e AS col_3, t1.d - t1.e AS col_4, t1.a + t1.b * 2 AS col_5, t1.b - t1.c AS col_6, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_7
---- 1
224|222|221|1|666|-1|0

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.e > t1.a AND t1.e < t1.b) AND t1.c > t1.d RETURN t1.c AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.e AS col_3, t1.d - t1.e AS col_4, t1.a + t1.b * 2 AS col_5, t1.b - t1.c AS col_6, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_7 ORDER BY col_5, col_1, col_6, col_2, col_3
---- 1
224|222|221|1|666|-1|0

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1
---- hash rowsort
28 tuples hashing to 199eb36995ce9cc025eb667a27b774d5

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1 ORDER BY col_1
---- hash rowsort
28 tuples hashing to 199eb36995ce9cc025eb667a27b774d5

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1
---- hash rowsort
28 tuples hashing to 199eb36995ce9cc025eb667a27b774d5

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1 ORDER BY col_1
---- hash rowsort
28 tuples hashing to 199eb36995ce9cc025eb667a27b774d5

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.e > t1.c OR t1.e < t1.d) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1
---- hash rowsort
28 tuples hashing to 199eb36995ce9cc025eb667a27b774d5

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.e > t1.c OR t1.e < t1.d) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1 ORDER BY col_1
---- hash rowsort
28 tuples hashing to 199eb36995ce9cc025eb667a27b774d5

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.e AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2
---- hash rowsort
30 tuples hashing to beed70047ae1fe6e957f8b195a17c63d

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.e AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2 ORDER BY col_2, col_1
---- hash rowsort
30 tuples hashing to beed70047ae1fe6e957f8b195a17c63d

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a AS col_1, t1.b - t1.c AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.c AS col_4
---- hash rowsort
10 tuples hashing to 38f9a6f093c1ee7b2fc4271c752ed1cc

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a AS col_1, t1.b - t1.c AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.c AS col_4 ORDER BY col_1, col_4, col_2
---- hash rowsort
10 tuples hashing to 38f9a6f093c1ee7b2fc4271c752ed1cc

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a AS col_1, t1.c - t1.d AS col_2, abs(t1.b - t1.c) AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5
---- 1
220|2|1|1338|3331

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a AS col_1, t1.c - t1.d AS col_2, abs(t1.b - t1.c) AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5 ORDER BY col_1, col_2, col_5
---- 1
220|2|1|1338|3331

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a AS col_1, t1.c - t1.d AS col_2, abs(t1.b - t1.c) AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5
---- 1
220|2|1|1338|3331

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a AS col_1, t1.c - t1.d AS col_2, abs(t1.b - t1.c) AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5 ORDER BY col_2, col_3
---- 1
220|2|1|1338|3331

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e > t1.a AND t1.e < t1.b) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a AS col_1, t1.c - t1.d AS col_2, abs(t1.b - t1.c) AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5
---- 1
220|2|1|1338|3331

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e > t1.a AND t1.e < t1.b) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a AS col_1, t1.c - t1.d AS col_2, abs(t1.b - t1.c) AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5 ORDER BY col_3, col_4
---- 1
220|2|1|1338|3331

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.e AS col_2, t1.c - t1.d AS col_3, t1.b AS col_4, t1.d - t1.e AS col_5
---- hash rowsort
10 tuples hashing to cc044b3e1bb23780c4122968965b9354

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.e AS col_2, t1.c - t1.d AS col_3, t1.b AS col_4, t1.d - t1.e AS col_5 ORDER BY col_5, col_2
---- hash rowsort
10 tuples hashing to cc044b3e1bb23780c4122968965b9354

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a - t1.b AS col_1
---- hash rowsort
10 tuples hashing to efa8813bb3fe4fd95c76a8b4cec1fef1

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a - t1.b AS col_1 ORDER BY col_1
---- hash rowsort
10 tuples hashing to efa8813bb3fe4fd95c76a8b4cec1fef1

-STATEMENT MATCH (t1:t1) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.c - t1.d AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5, t1.d AS col_6, t1.a - t1.b AS col_7
---- hash rowsort
30 tuples hashing to 7486fd307b51a7be6044ad6f75724921

-STATEMENT MATCH (t1:t1) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.c - t1.d AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5, t1.d AS col_6, t1.a - t1.b AS col_7 ORDER BY col_3, col_7, col_4, col_2, col_1
---- hash rowsort
30 tuples hashing to 7486fd307b51a7be6044ad6f75724921

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b RETURN t1.c AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3
---- hash rowsort
17 tuples hashing to ce8fbf8484882a4861b010d1bdd692a0

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b RETURN t1.c AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3 ORDER BY col_1, col_3
---- hash rowsort
17 tuples hashing to ce8fbf8484882a4861b010d1bdd692a0

-STATEMENT MATCH (t1:t1) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.e AS col_2, t1.a + t1.b * 2 AS col_3, t1.d - t1.e AS col_4
---- hash rowsort
30 tuples hashing to c8342c8e4bd0281d6cc939310a43f2bd

-STATEMENT MATCH (t1:t1) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.e AS col_2, t1.a + t1.b * 2 AS col_3, t1.d - t1.e AS col_4 ORDER BY col_1, col_2, col_3, col_4
---- hash rowsort
30 tuples hashing to c8342c8e4bd0281d6cc939310a43f2bd

-STATEMENT MATCH (t1:t1) RETURN t1.c - t1.d AS col_1, t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, abs(t1.a) AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5
---- hash rowsort
30 tuples hashing to 3bc7718481a0e80714bf6d63ff54dbba

-STATEMENT MATCH (t1:t1) RETURN t1.c - t1.d AS col_1, t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, abs(t1.a) AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5 ORDER BY col_5, col_1, col_4
---- hash rowsort
30 tuples hashing to 3bc7718481a0e80714bf6d63ff54dbba

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR t1.c > t1.d RETURN t1.d AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.d - t1.e AS col_3, t1.b - t1.c AS col_4, t1.b AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_6, t1.a + t1.b * 2 AS col_7
---- hash rowsort
28 tuples hashing to fe3b7834bf1f16af9a218035e03b116c

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR t1.c > t1.d RETURN t1.d AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.d - t1.e AS col_3, t1.b - t1.c AS col_4, t1.b AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_6, t1.a + t1.b * 2 AS col_7 ORDER BY col_1, col_5, col_2, col_3, col_4, col_6, col_7
---- hash rowsort
28 tuples hashing to fe3b7834bf1f16af9a218035e03b116c

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.d AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.d - t1.e AS col_3, t1.b - t1.c AS col_4, t1.b AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_6, t1.a + t1.b * 2 AS col_7
---- hash rowsort
28 tuples hashing to fe3b7834bf1f16af9a218035e03b116c

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.d AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.d - t1.e AS col_3, t1.b - t1.c AS col_4, t1.b AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_6, t1.a + t1.b * 2 AS col_7 ORDER BY col_2, col_7, col_5, col_1, col_4, col_6, col_3
---- hash rowsort
28 tuples hashing to fe3b7834bf1f16af9a218035e03b116c

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 AS col_1, t1.b AS col_2, abs(t1.b - t1.c) AS col_3, t1.d - t1.e AS col_4, t1.a AS col_5, t1.c - t1.d AS col_6
---- hash rowsort
18 tuples hashing to 9d92cdd25b06773d672e7c3859697c55

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 AS col_1, t1.b AS col_2, abs(t1.b - t1.c) AS col_3, t1.d - t1.e AS col_4, t1.a AS col_5, t1.c - t1.d AS col_6 ORDER BY col_2, col_3, col_5
---- hash rowsort
18 tuples hashing to 9d92cdd25b06773d672e7c3859697c55

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.a > t1.b RETURN t1.a + t1.b * 2 AS col_1, t1.b AS col_2, abs(t1.b - t1.c) AS col_3, t1.d - t1.e AS col_4, t1.a AS col_5, t1.c - t1.d AS col_6
---- hash rowsort
18 tuples hashing to 9d92cdd25b06773d672e7c3859697c55

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.a > t1.b RETURN t1.a + t1.b * 2 AS col_1, t1.b AS col_2, abs(t1.b - t1.c) AS col_3, t1.d - t1.e AS col_4, t1.a AS col_5, t1.c - t1.d AS col_6 ORDER BY col_2, col_6, col_5, col_1, col_3, col_4
---- hash rowsort
18 tuples hashing to 9d92cdd25b06773d672e7c3859697c55

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.d - t1.e AS col_1
---- hash rowsort
27 tuples hashing to 2c390d67360189455801dde3eabc94c1

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.d - t1.e AS col_1 ORDER BY col_1
---- hash rowsort
27 tuples hashing to 2c390d67360189455801dde3eabc94c1

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.d - t1.e AS col_1
---- hash rowsort
27 tuples hashing to 2c390d67360189455801dde3eabc94c1

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.d - t1.e AS col_1 ORDER BY col_1
---- hash rowsort
27 tuples hashing to 2c390d67360189455801dde3eabc94c1

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.d - t1.e AS col_1
---- hash rowsort
27 tuples hashing to 2c390d67360189455801dde3eabc94c1

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.d - t1.e AS col_1 ORDER BY col_1
---- hash rowsort
27 tuples hashing to 2c390d67360189455801dde3eabc94c1

-STATEMENT MATCH (t1:t1) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, abs(t1.a) AS col_2, t1.d AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, t1.b - t1.c AS col_6
---- hash rowsort
30 tuples hashing to 1d0de9d24d8118b60018a11121f08077

-STATEMENT MATCH (t1:t1) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, abs(t1.a) AS col_2, t1.d AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, t1.b - t1.c AS col_6 ORDER BY col_5, col_1, col_4, col_3, col_6
---- hash rowsort
30 tuples hashing to 1d0de9d24d8118b60018a11121f08077

-STATEMENT MATCH (t1:t1) RETURN t1.a AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.e AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, t1.a - t1.b AS col_5
---- hash rowsort
30 tuples hashing to b971905f32afdbb3012ccf36d9988e58

-STATEMENT MATCH (t1:t1) RETURN t1.a AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.e AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, t1.a - t1.b AS col_5 ORDER BY col_3, col_5
---- hash rowsort
30 tuples hashing to b971905f32afdbb3012ccf36d9988e58

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.a > t1.b OR (t1.e > t1.a AND t1.e < t1.b) RETURN abs(t1.a) AS col_1, t1.b AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.a - t1.b AS col_4, t1.e AS col_5, t1.c - t1.d AS col_6, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_7
---- hash rowsort
20 tuples hashing to 6d150ac098b3050af6b926cad6652fc3

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.a > t1.b OR (t1.e > t1.a AND t1.e < t1.b) RETURN abs(t1.a) AS col_1, t1.b AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.a - t1.b AS col_4, t1.e AS col_5, t1.c - t1.d AS col_6, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_7 ORDER BY col_7, col_2
---- hash rowsort
20 tuples hashing to 6d150ac098b3050af6b926cad6652fc3

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND t1.a > t1.b AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, abs(t1.a) AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.b - t1.c AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5, abs(t1.b - t1.c) AS col_6, t1.c AS col_7
---- hash rowsort
3 tuples hashing to 7913e005ffff21245fdcea9c3d34fb63

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND t1.a > t1.b AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, abs(t1.a) AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.b - t1.c AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5, abs(t1.b - t1.c) AS col_6, t1.c AS col_7 ORDER BY col_1, col_5, col_6
---- hash rowsort
3 tuples hashing to 7913e005ffff21245fdcea9c3d34fb63

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, abs(t1.a) AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.b - t1.c AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5, abs(t1.b - t1.c) AS col_6, t1.c AS col_7
---- hash rowsort
3 tuples hashing to 7913e005ffff21245fdcea9c3d34fb63

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, abs(t1.a) AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.b - t1.c AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5, abs(t1.b - t1.c) AS col_6, t1.c AS col_7 ORDER BY col_6, col_4, col_7, col_5
---- hash rowsort
3 tuples hashing to 7913e005ffff21245fdcea9c3d34fb63

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.a > t1.b RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, abs(t1.a) AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.b - t1.c AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5, abs(t1.b - t1.c) AS col_6, t1.c AS col_7
---- hash rowsort
3 tuples hashing to 7913e005ffff21245fdcea9c3d34fb63

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.a > t1.b RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, abs(t1.a) AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.b - t1.c AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5, abs(t1.b - t1.c) AS col_6, t1.c AS col_7 ORDER BY col_1, col_3, col_4, col_5, col_6, col_2, col_7
---- hash rowsort
3 tuples hashing to 7913e005ffff21245fdcea9c3d34fb63

-STATEMENT MATCH (t1:t1) RETURN t1.b AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, abs(t1.a) AS col_3
---- hash rowsort
30 tuples hashing to 67248c2918ebe4af9523fec7d59cd50b

-STATEMENT MATCH (t1:t1) RETURN t1.b AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, abs(t1.a) AS col_3 ORDER BY col_2, col_1
---- hash rowsort
30 tuples hashing to 67248c2918ebe4af9523fec7d59cd50b

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.b - t1.c AS col_1, t1.a - t1.b AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.b AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_6, t1.d - t1.e AS col_7
---- hash rowsort
30 tuples hashing to 1308bb5483e2e2ff52b8f8054a9ac5cd

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.b - t1.c AS col_1, t1.a - t1.b AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.b AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_6, t1.d - t1.e AS col_7 ORDER BY col_2, col_7, col_3, col_4, col_1, col_5, col_6
---- hash rowsort
30 tuples hashing to 1308bb5483e2e2ff52b8f8054a9ac5cd

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.d - t1.e AS col_3, abs(t1.a) AS col_4, t1.b AS col_5
---- hash rowsort
30 tuples hashing to 0385c2db473c4ec4eff9c5f169932b89

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.d - t1.e AS col_3, abs(t1.a) AS col_4, t1.b AS col_5 ORDER BY col_4, col_1, col_3, col_2, col_5
---- hash rowsort
30 tuples hashing to 0385c2db473c4ec4eff9c5f169932b89

-STATEMENT MATCH (t1:t1) RETURN t1.b AS col_1, t1.d - t1.e AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.c - t1.d AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5
---- hash rowsort
30 tuples hashing to 2671d7e440d49bb15bba2d068a6fb56e

-STATEMENT MATCH (t1:t1) RETURN t1.b AS col_1, t1.d - t1.e AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.c - t1.d AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5 ORDER BY col_2, col_5, col_4, col_1, col_3
---- hash rowsort
30 tuples hashing to 2671d7e440d49bb15bba2d068a6fb56e

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.d > t1.e RETURN abs(t1.a) AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2
---- 3
131|333
138|222
182|333

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.d > t1.e RETURN abs(t1.a) AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2 ORDER BY col_1, col_2
---- 3
131|333
138|222
182|333

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.c > t1.d RETURN abs(t1.a) AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2
---- 3
131|333
138|222
182|333

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.c > t1.d RETURN abs(t1.a) AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2 ORDER BY col_1, col_2
---- 3
131|333
138|222
182|333

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND t1.d > t1.e AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN abs(t1.a) AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2
---- 3
131|333
138|222
182|333

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND t1.d > t1.e AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN abs(t1.a) AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2 ORDER BY col_2, col_1
---- 3
131|333
138|222
182|333

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.e AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, abs(t1.a) AS col_3, t1.c - t1.d AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5
---- hash rowsort
29 tuples hashing to 646dabfcf63de71a2cd0241f3c5c354c

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.e AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, abs(t1.a) AS col_3, t1.c - t1.d AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5 ORDER BY col_3, col_4, col_2, col_5, col_1
---- hash rowsort
29 tuples hashing to 646dabfcf63de71a2cd0241f3c5c354c

-STATEMENT MATCH (t1:t1) RETURN t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.c AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5
---- hash rowsort
30 tuples hashing to df59bd3344f3e0573446957b26e8b00f

-STATEMENT MATCH (t1:t1) RETURN t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.c AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5 ORDER BY col_3, col_2, col_5, col_4
---- hash rowsort
30 tuples hashing to df59bd3344f3e0573446957b26e8b00f

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.c - t1.d AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2
---- hash rowsort
10 tuples hashing to 313e2f24fcde36abf536de1a90a3fd55

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.c - t1.d AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2 ORDER BY col_2, col_1
---- hash rowsort
10 tuples hashing to 313e2f24fcde36abf536de1a90a3fd55

-STATEMENT MATCH (t1:t1) RETURN t1.d AS col_1, t1.d - t1.e AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5, t1.e AS col_6, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_7
---- hash rowsort
30 tuples hashing to b8a38ab3b031ad91464b62c5c9d9cf52

-STATEMENT MATCH (t1:t1) RETURN t1.d AS col_1, t1.d - t1.e AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5, t1.e AS col_6, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_7 ORDER BY col_7, col_5, col_4, col_6, col_1
---- hash rowsort
30 tuples hashing to b8a38ab3b031ad91464b62c5c9d9cf52

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.e > t1.c OR t1.e < t1.d) OR t1.b > t1.c RETURN t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4
---- hash rowsort
27 tuples hashing to f17c6b3e60c3a1d7881ff9c7defa63c5

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.e > t1.c OR t1.e < t1.d) OR t1.b > t1.c RETURN t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4 ORDER BY col_4, col_2, col_3, col_1
---- hash rowsort
27 tuples hashing to f17c6b3e60c3a1d7881ff9c7defa63c5

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.b > t1.c OR NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4
---- hash rowsort
27 tuples hashing to f17c6b3e60c3a1d7881ff9c7defa63c5

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.b > t1.c OR NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4 ORDER BY col_2, col_1
---- hash rowsort
27 tuples hashing to f17c6b3e60c3a1d7881ff9c7defa63c5

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR NOT (t1.d >= 110 AND t1.d <= 150) OR t1.b > t1.c RETURN t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4
---- hash rowsort
27 tuples hashing to f17c6b3e60c3a1d7881ff9c7defa63c5

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR NOT (t1.d >= 110 AND t1.d <= 150) OR t1.b > t1.c RETURN t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4 ORDER BY col_2, col_1
---- hash rowsort
27 tuples hashing to f17c6b3e60c3a1d7881ff9c7defa63c5

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR t1.b > t1.c OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4
---- hash rowsort
27 tuples hashing to f17c6b3e60c3a1d7881ff9c7defa63c5

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR t1.b > t1.c OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4 ORDER BY col_4, col_3
---- hash rowsort
27 tuples hashing to f17c6b3e60c3a1d7881ff9c7defa63c5

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.b > t1.c RETURN t1.e AS col_1, t1.a - t1.b AS col_2
---- hash rowsort
15 tuples hashing to f86eeb8a5ace713028dbbf2ca99dbad7

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.b > t1.c RETURN t1.e AS col_1, t1.a - t1.b AS col_2 ORDER BY col_2, col_1
---- hash rowsort
15 tuples hashing to f86eeb8a5ace713028dbbf2ca99dbad7

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.e AS col_1, t1.a - t1.b AS col_2
---- hash rowsort
15 tuples hashing to f86eeb8a5ace713028dbbf2ca99dbad7

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.e AS col_1, t1.a - t1.b AS col_2 ORDER BY col_2, col_1
---- hash rowsort
15 tuples hashing to f86eeb8a5ace713028dbbf2ca99dbad7

-STATEMENT MATCH (t1:t1) RETURN t1.c AS col_1, t1.d - t1.e AS col_2, abs(t1.a) AS col_3, t1.e AS col_4
---- hash rowsort
30 tuples hashing to e83bb402da7a08db39698ddc6894bc80

-STATEMENT MATCH (t1:t1) RETURN t1.c AS col_1, t1.d - t1.e AS col_2, abs(t1.a) AS col_3, t1.e AS col_4 ORDER BY col_1, col_2
---- hash rowsort
30 tuples hashing to e83bb402da7a08db39698ddc6894bc80

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d RETURN t1.a AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4
---- hash rowsort
13 tuples hashing to 78e7b83e6942df2d1bfd868316d31335

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d RETURN t1.a AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4 ORDER BY col_4, col_3
---- hash rowsort
13 tuples hashing to 78e7b83e6942df2d1bfd868316d31335

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a - t1.b AS col_1, abs(t1.a) AS col_2, t1.e AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, t1.d - t1.e AS col_5, t1.c AS col_6
---- hash rowsort
17 tuples hashing to a6af0d67f11b2d67f0274effd3a7886c

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a - t1.b AS col_1, abs(t1.a) AS col_2, t1.e AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, t1.d - t1.e AS col_5, t1.c AS col_6 ORDER BY col_4, col_3, col_1, col_2, col_6
---- hash rowsort
17 tuples hashing to a6af0d67f11b2d67f0274effd3a7886c

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.a > t1.b RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1
---- hash rowsort
17 tuples hashing to baeb6fdb5d575870fddf7d11fa9e02f3

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.a > t1.b RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1 ORDER BY col_1
---- hash rowsort
17 tuples hashing to baeb6fdb5d575870fddf7d11fa9e02f3

-STATEMENT MATCH (t1:t1) RETURN t1.c - t1.d AS col_1, t1.d AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.d - t1.e AS col_4
---- hash rowsort
30 tuples hashing to 0249d9b05d5c103df774e762f761cffb

-STATEMENT MATCH (t1:t1) RETURN t1.c - t1.d AS col_1, t1.d AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.d - t1.e AS col_4 ORDER BY col_4, col_2, col_1
---- hash rowsort
30 tuples hashing to 0249d9b05d5c103df774e762f761cffb

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.e > t1.a AND t1.e < t1.b) AND (t1.e > t1.c OR t1.e < t1.d) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.c AS col_2, t1.b AS col_3, t1.a - t1.b AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5
---- hash rowsort
2 tuples hashing to 65e67c89f0b9eac3aebadb469d499244

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.e > t1.a AND t1.e < t1.b) AND (t1.e > t1.c OR t1.e < t1.d) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.c AS col_2, t1.b AS col_3, t1.a - t1.b AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5 ORDER BY col_5, col_1, col_4
---- hash rowsort
2 tuples hashing to 65e67c89f0b9eac3aebadb469d499244

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND t1.d > t1.e AND (t1.e > t1.a AND t1.e < t1.b) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.c AS col_2, t1.b AS col_3, t1.a - t1.b AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5
---- hash rowsort
2 tuples hashing to 65e67c89f0b9eac3aebadb469d499244

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND t1.d > t1.e AND (t1.e > t1.a AND t1.e < t1.b) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.c AS col_2, t1.b AS col_3, t1.a - t1.b AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5 ORDER BY col_2, col_5, col_1, col_3
---- hash rowsort
2 tuples hashing to 65e67c89f0b9eac3aebadb469d499244

-STATEMENT MATCH (t1:t1) RETURN t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, abs(t1.a) AS col_4
---- hash rowsort
30 tuples hashing to cbafe694dc36f6d5a77ed21b9171865a

-STATEMENT MATCH (t1:t1) RETURN t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, abs(t1.a) AS col_4 ORDER BY col_1, col_2, col_4, col_3
---- hash rowsort
30 tuples hashing to cbafe694dc36f6d5a77ed21b9171865a

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.d AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.d - t1.e AS col_5, t1.a + t1.b * 2 AS col_6
---- hash rowsort
13 tuples hashing to f5801c819d7fc8338357d6aeedca106d

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.d AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.d - t1.e AS col_5, t1.a + t1.b * 2 AS col_6 ORDER BY col_4, col_5, col_6, col_3, col_2, col_1
---- hash rowsort
13 tuples hashing to f5801c819d7fc8338357d6aeedca106d

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4
---- hash rowsort
30 tuples hashing to 727f16ef8bf4aaf1061c0602fa722757

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4 ORDER BY col_4, col_2, col_3
---- hash rowsort
30 tuples hashing to 727f16ef8bf4aaf1061c0602fa722757

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.a - t1.b AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.d - t1.e AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, t1.e AS col_5, t1.a + t1.b * 2 + t1.c * 3 AS col_6
---- hash rowsort
30 tuples hashing to e13410f526aa235c1220c611a43aeab1

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.a - t1.b AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.d - t1.e AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, t1.e AS col_5, t1.a + t1.b * 2 + t1.c * 3 AS col_6 ORDER BY col_6, col_1
---- hash rowsort
30 tuples hashing to e13410f526aa235c1220c611a43aeab1

-STATEMENT MATCH (t1:t1) RETURN t1.a - t1.b AS col_1, t1.a + t1.b * 2 AS col_2, t1.c AS col_3
---- hash rowsort
30 tuples hashing to c6af1ce8e7751994c9acfbf36e97f991

-STATEMENT MATCH (t1:t1) RETURN t1.a - t1.b AS col_1, t1.a + t1.b * 2 AS col_2, t1.c AS col_3 ORDER BY col_3, col_1
---- hash rowsort
30 tuples hashing to c6af1ce8e7751994c9acfbf36e97f991

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.a > t1.b RETURN t1.d - t1.e AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.a + t1.b * 2 AS col_3
---- hash rowsort
8 tuples hashing to 5d0a46c407293e78a2ca3cf0c3cd5c49

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.a > t1.b RETURN t1.d - t1.e AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.a + t1.b * 2 AS col_3 ORDER BY col_3, col_2
---- hash rowsort
8 tuples hashing to 5d0a46c407293e78a2ca3cf0c3cd5c49

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND t1.d > t1.e AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.d AS col_3
---- 2
23|0|233
26|0|248

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND t1.d > t1.e AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.d AS col_3 ORDER BY col_3, col_2
---- 2
23|0|233
26|0|248

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND t1.d > t1.e AND t1.b > t1.c RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.d AS col_3
---- 2
23|0|233
26|0|248

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND t1.d > t1.e AND t1.b > t1.c RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.d AS col_3 ORDER BY col_3, col_2, col_1
---- 2
23|0|233
26|0|248

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND NOT (t1.d >= 110 AND t1.d <= 150) AND t1.d > t1.e RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.d AS col_3
---- 2
23|0|233
26|0|248

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND NOT (t1.d >= 110 AND t1.d <= 150) AND t1.d > t1.e RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.d AS col_3 ORDER BY col_3, col_1
---- 2
23|0|233
26|0|248

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, abs(t1.a) AS col_2
---- hash rowsort
19 tuples hashing to 8c7d032b253042442e7800e69dca3de8

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, abs(t1.a) AS col_2 ORDER BY col_1, col_2
---- hash rowsort
19 tuples hashing to 8c7d032b253042442e7800e69dca3de8

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, abs(t1.a) AS col_2
---- hash rowsort
19 tuples hashing to 8c7d032b253042442e7800e69dca3de8

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, abs(t1.a) AS col_2 ORDER BY col_1, col_2
---- hash rowsort
19 tuples hashing to 8c7d032b253042442e7800e69dca3de8

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, abs(t1.a) AS col_2
---- hash rowsort
19 tuples hashing to 8c7d032b253042442e7800e69dca3de8

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, abs(t1.a) AS col_2 ORDER BY col_2, col_1
---- hash rowsort
19 tuples hashing to 8c7d032b253042442e7800e69dca3de8

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.b > t1.c RETURN t1.b - t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.d - t1.e AS col_3, abs(t1.a) AS col_4, t1.a - t1.b AS col_5, t1.e AS col_6
---- hash rowsort
24 tuples hashing to 5d554a6a785e45be7fb99898e93d8d94

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.b > t1.c RETURN t1.b - t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.d - t1.e AS col_3, abs(t1.a) AS col_4, t1.a - t1.b AS col_5, t1.e AS col_6 ORDER BY col_5, col_3, col_4, col_1
---- hash rowsort
24 tuples hashing to 5d554a6a785e45be7fb99898e93d8d94

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.b - t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.d - t1.e AS col_3, abs(t1.a) AS col_4, t1.a - t1.b AS col_5, t1.e AS col_6
---- hash rowsort
24 tuples hashing to 5d554a6a785e45be7fb99898e93d8d94

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.b - t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.d - t1.e AS col_3, abs(t1.a) AS col_4, t1.a - t1.b AS col_5, t1.e AS col_6 ORDER BY col_2, col_6, col_5, col_1, col_3, col_4
---- hash rowsort
24 tuples hashing to 5d554a6a785e45be7fb99898e93d8d94

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR t1.b > t1.c OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.b - t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.d - t1.e AS col_3, abs(t1.a) AS col_4, t1.a - t1.b AS col_5, t1.e AS col_6
---- hash rowsort
24 tuples hashing to 5d554a6a785e45be7fb99898e93d8d94

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR t1.b > t1.c OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.b - t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.d - t1.e AS col_3, abs(t1.a) AS col_4, t1.a - t1.b AS col_5, t1.e AS col_6 ORDER BY col_5, col_6, col_1
---- hash rowsort
24 tuples hashing to 5d554a6a785e45be7fb99898e93d8d94

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.c > t1.d RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.c - t1.d AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.b AS col_4
---- hash rowsort
4 tuples hashing to d67cabf96d0b47633cd08730637b2048

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.c > t1.d RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.c - t1.d AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.b AS col_4 ORDER BY col_3, col_2, col_1
---- hash rowsort
4 tuples hashing to d67cabf96d0b47633cd08730637b2048

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.c - t1.d AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.b AS col_4
---- hash rowsort
4 tuples hashing to d67cabf96d0b47633cd08730637b2048

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.c - t1.d AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.b AS col_4 ORDER BY col_1, col_4
---- hash rowsort
4 tuples hashing to d67cabf96d0b47633cd08730637b2048

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.c > t1.d AND (t1.e > t1.a AND t1.e < t1.b) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2
---- 2
0|444
0|444

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.c > t1.d AND (t1.e > t1.a AND t1.e < t1.b) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2 ORDER BY col_2, col_1
---- 2
0|444
0|444

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.e > t1.a AND t1.e < t1.b) AND t1.c > t1.d RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2
---- 2
0|444
0|444

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.e > t1.a AND t1.e < t1.b) AND t1.c > t1.d RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2 ORDER BY col_2, col_1
---- 2
0|444
0|444

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.c > t1.d RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2
---- 2
0|444
0|444

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.c > t1.d RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2 ORDER BY col_2, col_1
---- 2
0|444
0|444

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.e > t1.a AND t1.e < t1.b) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2
---- 2
0|444
0|444

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.e > t1.a AND t1.e < t1.b) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2 ORDER BY col_1, col_2
---- 2
0|444
0|444

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) RETURN abs(t1.b - t1.c) AS col_1, t1.a - t1.b AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5
---- hash rowsort
17 tuples hashing to 39ae65b13a8871e595955fe9fc9b2e5d

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) RETURN abs(t1.b - t1.c) AS col_1, t1.a - t1.b AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5 ORDER BY col_5, col_3, col_2, col_4, col_1
---- hash rowsort
17 tuples hashing to 39ae65b13a8871e595955fe9fc9b2e5d

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND t1.b > t1.c RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, abs(t1.a) AS col_2, abs(t1.b - t1.c) AS col_3
---- 1
0|127|4

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND t1.b > t1.c RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, abs(t1.a) AS col_2, abs(t1.b - t1.c) AS col_3 ORDER BY col_3, col_1
---- 1
0|127|4

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a AS col_2
---- hash rowsort
10 tuples hashing to a883dad8b02e10bdbbfcd41a959944b3

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a AS col_2 ORDER BY col_2, col_1
---- hash rowsort
10 tuples hashing to a883dad8b02e10bdbbfcd41a959944b3

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.e > t1.c OR t1.e < t1.d) OR t1.c > t1.d RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.e AS col_2, t1.b AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4
---- hash rowsort
26 tuples hashing to 39510fb3ed1150a561a8d542151b4a24

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.e > t1.c OR t1.e < t1.d) OR t1.c > t1.d RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.e AS col_2, t1.b AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4 ORDER BY col_3, col_4
---- hash rowsort
26 tuples hashing to 39510fb3ed1150a561a8d542151b4a24

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR (t1.e > t1.c OR t1.e < t1.d) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.e AS col_2, t1.b AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4
---- hash rowsort
26 tuples hashing to 39510fb3ed1150a561a8d542151b4a24

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR (t1.e > t1.c OR t1.e < t1.d) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.e AS col_2, t1.b AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4 ORDER BY col_3, col_1, col_2
---- hash rowsort
26 tuples hashing to 39510fb3ed1150a561a8d542151b4a24

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1
---- hash rowsort
17 tuples hashing to dd282b8dd7664ec4babf6af25299c8f4

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1 ORDER BY col_1
---- hash rowsort
17 tuples hashing to dd282b8dd7664ec4babf6af25299c8f4

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2
---- hash rowsort
30 tuples hashing to d1c1f508b401a056a7d00268e472c4dd

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2 ORDER BY col_2, col_1
---- hash rowsort
30 tuples hashing to d1c1f508b401a056a7d00268e472c4dd

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c RETURN t1.e AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, t1.d - t1.e AS col_5, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_6, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_7
---- hash rowsort
13 tuples hashing to 11d5fc8b50cf11747fb09838a6179a62

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c RETURN t1.e AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, t1.d - t1.e AS col_5, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_6, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_7 ORDER BY col_5, col_1, col_3
---- hash rowsort
13 tuples hashing to 11d5fc8b50cf11747fb09838a6179a62

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR t1.c > t1.d OR (t1.e > t1.a AND t1.e < t1.b) RETURN t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.a AS col_3, t1.e AS col_4
---- hash rowsort
18 tuples hashing to e48615ff8ca5cfc049146260f31d5352

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR t1.c > t1.d OR (t1.e > t1.a AND t1.e < t1.b) RETURN t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.a AS col_3, t1.e AS col_4 ORDER BY col_4, col_2, col_3, col_1
---- hash rowsort
18 tuples hashing to e48615ff8ca5cfc049146260f31d5352

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR t1.c > t1.d OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.a AS col_3, t1.e AS col_4
---- hash rowsort
18 tuples hashing to e48615ff8ca5cfc049146260f31d5352

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR t1.c > t1.d OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.a AS col_3, t1.e AS col_4 ORDER BY col_2, col_1, col_4, col_3
---- hash rowsort
18 tuples hashing to e48615ff8ca5cfc049146260f31d5352

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR (t1.e > t1.a AND t1.e < t1.b) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.a AS col_3, t1.e AS col_4
---- hash rowsort
18 tuples hashing to e48615ff8ca5cfc049146260f31d5352

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR (t1.e > t1.a AND t1.e < t1.b) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.a AS col_3, t1.e AS col_4 ORDER BY col_3, col_4
---- hash rowsort
18 tuples hashing to e48615ff8ca5cfc049146260f31d5352

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.e > t1.a AND t1.e < t1.b) OR t1.c > t1.d RETURN t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.a AS col_3, t1.e AS col_4
---- hash rowsort
18 tuples hashing to e48615ff8ca5cfc049146260f31d5352

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.e > t1.a AND t1.e < t1.b) OR t1.c > t1.d RETURN t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.a AS col_3, t1.e AS col_4 ORDER BY col_1, col_3, col_2
---- hash rowsort
18 tuples hashing to e48615ff8ca5cfc049146260f31d5352

-STATEMENT MATCH (t1:t1) RETURN t1.b - t1.c AS col_1, t1.b AS col_2, t1.d - t1.e AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.c AS col_5
---- hash rowsort
30 tuples hashing to 8c15f4a29de572fba8a576d3bee6210d

-STATEMENT MATCH (t1:t1) RETURN t1.b - t1.c AS col_1, t1.b AS col_2, t1.d - t1.e AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.c AS col_5 ORDER BY col_5, col_1, col_2
---- hash rowsort
30 tuples hashing to 8c15f4a29de572fba8a576d3bee6210d

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1
---- hash rowsort
30 tuples hashing to efdbaa4d180e7867bec1c4d897bd25b9

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1 ORDER BY col_1
---- hash rowsort
30 tuples hashing to efdbaa4d180e7867bec1c4d897bd25b9

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e RETURN t1.a + t1.b * 2 AS col_1
---- hash rowsort
11 tuples hashing to 894d1073493aea169dfee5237f6088b5

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e RETURN t1.a + t1.b * 2 AS col_1 ORDER BY col_1
---- hash rowsort
11 tuples hashing to 894d1073493aea169dfee5237f6088b5

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN abs(t1.b - t1.c) AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, abs(t1.a) AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5, t1.d AS col_6
---- hash rowsort
23 tuples hashing to 2be016aa8b0de3153009a558d58e6e7a

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN abs(t1.b - t1.c) AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, abs(t1.a) AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5, t1.d AS col_6 ORDER BY col_1, col_4, col_6, col_3, col_2, col_5
---- hash rowsort
23 tuples hashing to 2be016aa8b0de3153009a558d58e6e7a

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN abs(t1.b - t1.c) AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, abs(t1.a) AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5, t1.d AS col_6
---- hash rowsort
23 tuples hashing to 2be016aa8b0de3153009a558d58e6e7a

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN abs(t1.b - t1.c) AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, abs(t1.a) AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5, t1.d AS col_6 ORDER BY col_1, col_3, col_6, col_4, col_2, col_5
---- hash rowsort
23 tuples hashing to 2be016aa8b0de3153009a558d58e6e7a

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN abs(t1.b - t1.c) AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, abs(t1.a) AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5, t1.d AS col_6
---- hash rowsort
23 tuples hashing to 2be016aa8b0de3153009a558d58e6e7a

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN abs(t1.b - t1.c) AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, abs(t1.a) AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5, t1.d AS col_6 ORDER BY col_2, col_5, col_3
---- hash rowsort
23 tuples hashing to 2be016aa8b0de3153009a558d58e6e7a

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN abs(t1.b - t1.c) AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, abs(t1.a) AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5, t1.d AS col_6
---- hash rowsort
23 tuples hashing to 2be016aa8b0de3153009a558d58e6e7a

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN abs(t1.b - t1.c) AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, abs(t1.a) AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5, t1.d AS col_6 ORDER BY col_6, col_5, col_2, col_3, col_4, col_1
---- hash rowsort
23 tuples hashing to 2be016aa8b0de3153009a558d58e6e7a

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.d - t1.e AS col_1, t1.b - t1.c AS col_2
---- hash rowsort
10 tuples hashing to 9213ee0b196f8c55b9b2a0d3784eb5ba

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.d - t1.e AS col_1, t1.b - t1.c AS col_2 ORDER BY col_2, col_1
---- hash rowsort
10 tuples hashing to 9213ee0b196f8c55b9b2a0d3784eb5ba

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.d - t1.e AS col_1, t1.b - t1.c AS col_2
---- hash rowsort
10 tuples hashing to 9213ee0b196f8c55b9b2a0d3784eb5ba

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.d - t1.e AS col_1, t1.b - t1.c AS col_2 ORDER BY col_2, col_1
---- hash rowsort
10 tuples hashing to 9213ee0b196f8c55b9b2a0d3784eb5ba

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.b AS col_2
---- hash rowsort
21 tuples hashing to 458b4bfdfa720cc7465cc2064215cca0

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.b AS col_2 ORDER BY col_2, col_1
---- hash rowsort
21 tuples hashing to 458b4bfdfa720cc7465cc2064215cca0

-STATEMENT MATCH (t1:t1) RETURN t1.e AS col_1, t1.c - t1.d AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3
---- hash rowsort
30 tuples hashing to 4dc17ac0fe53b0d075f577808068bada

-STATEMENT MATCH (t1:t1) RETURN t1.e AS col_1, t1.c - t1.d AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3 ORDER BY col_1, col_3
---- hash rowsort
30 tuples hashing to 4dc17ac0fe53b0d075f577808068bada

-STATEMENT MATCH (t1:t1) RETURN t1.a - t1.b AS col_1
---- hash rowsort
30 tuples hashing to a8508bcdf86e494dd5feccb5ca8d9768

-STATEMENT MATCH (t1:t1) RETURN t1.a - t1.b AS col_1 ORDER BY col_1
---- hash rowsort
30 tuples hashing to a8508bcdf86e494dd5feccb5ca8d9768

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) RETURN t1.d AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.d - t1.e AS col_3, t1.a + t1.b * 2 AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5
---- hash rowsort
3 tuples hashing to 746ab6528656cd4013330c3a8960d199

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) RETURN t1.d AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.d - t1.e AS col_3, t1.a + t1.b * 2 AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5 ORDER BY col_1, col_5, col_3
---- hash rowsort
3 tuples hashing to 746ab6528656cd4013330c3a8960d199

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.e AS col_3, t1.a - t1.b AS col_4, abs(t1.b - t1.c) AS col_5, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_6
---- hash rowsort
8 tuples hashing to 41333036c33ca1020ecdf3ad5b3fca26

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.e AS col_3, t1.a - t1.b AS col_4, abs(t1.b - t1.c) AS col_5, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_6 ORDER BY col_5, col_2
---- hash rowsort
8 tuples hashing to 41333036c33ca1020ecdf3ad5b3fca26

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR t1.b > t1.c RETURN t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2
---- hash rowsort
26 tuples hashing to 46cb487ee40100f4b5738b678e5ca30d

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR t1.b > t1.c RETURN t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2 ORDER BY col_2, col_1
---- hash rowsort
26 tuples hashing to 46cb487ee40100f4b5738b678e5ca30d

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2
---- hash rowsort
26 tuples hashing to 46cb487ee40100f4b5738b678e5ca30d

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2 ORDER BY col_1, col_2
---- hash rowsort
26 tuples hashing to 46cb487ee40100f4b5738b678e5ca30d

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.e > t1.c OR t1.e < t1.d) OR t1.a > t1.b RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.d AS col_2, abs(t1.b - t1.c) AS col_3
---- hash rowsort
28 tuples hashing to 4ed78bf4242fcd95e3948b18cc96105c

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.e > t1.c OR t1.e < t1.d) OR t1.a > t1.b RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.d AS col_2, abs(t1.b - t1.c) AS col_3 ORDER BY col_1, col_3
---- hash rowsort
28 tuples hashing to 4ed78bf4242fcd95e3948b18cc96105c

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.e > t1.c OR t1.e < t1.d) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.d AS col_2, abs(t1.b - t1.c) AS col_3
---- hash rowsort
28 tuples hashing to 4ed78bf4242fcd95e3948b18cc96105c

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.e > t1.c OR t1.e < t1.d) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.d AS col_2, abs(t1.b - t1.c) AS col_3 ORDER BY col_2, col_3
---- hash rowsort
28 tuples hashing to 4ed78bf4242fcd95e3948b18cc96105c

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR (t1.e > t1.c OR t1.e < t1.d) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.d AS col_2, abs(t1.b - t1.c) AS col_3
---- hash rowsort
28 tuples hashing to 4ed78bf4242fcd95e3948b18cc96105c

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR (t1.e > t1.c OR t1.e < t1.d) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.d AS col_2, abs(t1.b - t1.c) AS col_3 ORDER BY col_2, col_1
---- hash rowsort
28 tuples hashing to 4ed78bf4242fcd95e3948b18cc96105c

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR t1.b > t1.c OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN abs(t1.a) AS col_1, t1.d AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_6
---- hash rowsort
24 tuples hashing to b29aa2f0959d342b1fe6a5111224dc65

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR t1.b > t1.c OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN abs(t1.a) AS col_1, t1.d AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_6 ORDER BY col_4, col_2, col_5, col_1, col_6, col_3
---- hash rowsort
24 tuples hashing to b29aa2f0959d342b1fe6a5111224dc65

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR t1.a > t1.b OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN abs(t1.a) AS col_1, t1.d AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_6
---- hash rowsort
24 tuples hashing to b29aa2f0959d342b1fe6a5111224dc65

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR t1.a > t1.b OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN abs(t1.a) AS col_1, t1.d AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_6 ORDER BY col_4, col_6, col_5, col_3, col_2
---- hash rowsort
24 tuples hashing to b29aa2f0959d342b1fe6a5111224dc65

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.a > t1.b OR t1.b > t1.c RETURN abs(t1.a) AS col_1, t1.d AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_6
---- hash rowsort
24 tuples hashing to b29aa2f0959d342b1fe6a5111224dc65

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.a > t1.b OR t1.b > t1.c RETURN abs(t1.a) AS col_1, t1.d AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_6 ORDER BY col_5, col_1, col_2, col_6, col_3
---- hash rowsort
24 tuples hashing to b29aa2f0959d342b1fe6a5111224dc65

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e RETURN abs(t1.a) AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2
---- hash rowsort
11 tuples hashing to 5473c9f8d1216beb4e678b45e690a858

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e RETURN abs(t1.a) AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2 ORDER BY col_1, col_2
---- hash rowsort
11 tuples hashing to 5473c9f8d1216beb4e678b45e690a858

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.a - t1.b AS col_3, t1.a AS col_4, abs(t1.b - t1.c) AS col_5, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_6
---- hash rowsort
13 tuples hashing to 2456c9c4aabea692d43cdaba4f819e77

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.a - t1.b AS col_3, t1.a AS col_4, abs(t1.b - t1.c) AS col_5, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_6 ORDER BY col_1, col_6, col_4
---- hash rowsort
13 tuples hashing to 2456c9c4aabea692d43cdaba4f819e77

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.b AS col_1, t1.b - t1.c AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.c - t1.d AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.b AS col_1, t1.b - t1.c AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.c - t1.d AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5 ORDER BY col_2, col_5
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.e > t1.a AND t1.e < t1.b) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.b AS col_1, t1.b - t1.c AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.c - t1.d AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.e > t1.a AND t1.e < t1.b) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.b AS col_1, t1.b - t1.c AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.c - t1.d AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5 ORDER BY col_4, col_1, col_2, col_5, col_3
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.b AS col_1, t1.b - t1.c AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.c - t1.d AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.b AS col_1, t1.b - t1.c AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.c - t1.d AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5 ORDER BY col_4, col_1, col_3, col_5
---- 0


-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.b > t1.c OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a + t1.b * 2 AS col_1, abs(t1.b - t1.c) AS col_2, abs(t1.a) AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, t1.e AS col_6
---- hash rowsort
24 tuples hashing to e2b60e10831969a097fab3dcf057ee30

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.b > t1.c OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a + t1.b * 2 AS col_1, abs(t1.b - t1.c) AS col_2, abs(t1.a) AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, t1.e AS col_6 ORDER BY col_2, col_4, col_3
---- hash rowsort
24 tuples hashing to e2b60e10831969a097fab3dcf057ee30

-STATEMENT MATCH (t1:t1) RETURN t1.d - t1.e AS col_1, abs(t1.a) AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_6
---- hash rowsort
30 tuples hashing to 8d07de1b9e6e330e3cf09ad37a1cb8f1

-STATEMENT MATCH (t1:t1) RETURN t1.d - t1.e AS col_1, abs(t1.a) AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_6 ORDER BY col_3, col_4, col_1, col_6
---- hash rowsort
30 tuples hashing to 8d07de1b9e6e330e3cf09ad37a1cb8f1

-STATEMENT MATCH (t1:t1) RETURN t1.b AS col_1, t1.c AS col_2
---- hash rowsort
30 tuples hashing to c3e922e391723c5ae3816d0fb151a039

-STATEMENT MATCH (t1:t1) RETURN t1.b AS col_1, t1.c AS col_2 ORDER BY col_1, col_2
---- hash rowsort
30 tuples hashing to c3e922e391723c5ae3816d0fb151a039

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.d > t1.e AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2
---- 3
1096|0
793|0
827|0

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.d > t1.e AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2 ORDER BY col_1, col_2
---- 3
1096|0
793|0
827|0

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.d > t1.e RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2
---- 3
1096|0
793|0
827|0

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.d > t1.e RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2 ORDER BY col_2, col_1
---- 3
1096|0
793|0
827|0

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2
---- 3
1096|0
793|0
827|0

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2 ORDER BY col_1, col_2
---- 3
1096|0
793|0
827|0

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.d > t1.e AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2
---- 3
1096|0
793|0
827|0

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.d > t1.e AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2 ORDER BY col_1, col_2
---- 3
1096|0
793|0
827|0

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR t1.b > t1.c OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3
---- hash rowsort
28 tuples hashing to 3a9f6e152480259b9690f902ec9b7fd9

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR t1.b > t1.c OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3 ORDER BY col_1, col_2
---- hash rowsort
28 tuples hashing to 3a9f6e152480259b9690f902ec9b7fd9

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.e > t1.c OR t1.e < t1.d) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3
---- hash rowsort
28 tuples hashing to 3a9f6e152480259b9690f902ec9b7fd9

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.e > t1.c OR t1.e < t1.d) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3 ORDER BY col_1, col_3, col_2
---- hash rowsort
28 tuples hashing to 3a9f6e152480259b9690f902ec9b7fd9

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR t1.b > t1.c OR (t1.e > t1.c OR t1.e < t1.d) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3
---- hash rowsort
28 tuples hashing to 3a9f6e152480259b9690f902ec9b7fd9

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR t1.b > t1.c OR (t1.e > t1.c OR t1.e < t1.d) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3 ORDER BY col_2, col_1
---- hash rowsort
28 tuples hashing to 3a9f6e152480259b9690f902ec9b7fd9

-STATEMENT MATCH (t1:t1) RETURN t1.c - t1.d AS col_1, t1.d - t1.e AS col_2, t1.d AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4
---- hash rowsort
30 tuples hashing to a1ada57754462997e07971cda3305528

-STATEMENT MATCH (t1:t1) RETURN t1.c - t1.d AS col_1, t1.d - t1.e AS col_2, t1.d AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4 ORDER BY col_2, col_1, col_3, col_4
---- hash rowsort
30 tuples hashing to a1ada57754462997e07971cda3305528

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN abs(t1.b - t1.c) AS col_1
---- 6
1
1
1
1
1
3

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN abs(t1.b - t1.c) AS col_1 ORDER BY col_1
---- 6
1
1
1
1
1
3

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.e > t1.a AND t1.e < t1.b) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.c AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4
---- hash rowsort
16 tuples hashing to a2a925c021960551d590b7672c6f3d05

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.e > t1.a AND t1.e < t1.b) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.c AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4 ORDER BY col_2, col_4, col_3
---- hash rowsort
16 tuples hashing to a2a925c021960551d590b7672c6f3d05

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.d > t1.e OR (t1.e > t1.a AND t1.e < t1.b) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.c AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4
---- hash rowsort
16 tuples hashing to a2a925c021960551d590b7672c6f3d05

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.d > t1.e OR (t1.e > t1.a AND t1.e < t1.b) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.c AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4 ORDER BY col_3, col_4, col_1
---- hash rowsort
16 tuples hashing to a2a925c021960551d590b7672c6f3d05

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.c > t1.d RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.a - t1.b AS col_3, t1.d - t1.e AS col_4
---- hash rowsort
23 tuples hashing to c87852d64a0a0f7ad0c1cdde418d2c5b

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.c > t1.d RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.a - t1.b AS col_3, t1.d - t1.e AS col_4 ORDER BY col_2, col_3
---- hash rowsort
23 tuples hashing to c87852d64a0a0f7ad0c1cdde418d2c5b

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.c > t1.d OR t1.d > t1.e RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.a - t1.b AS col_3, t1.d - t1.e AS col_4
---- hash rowsort
23 tuples hashing to c87852d64a0a0f7ad0c1cdde418d2c5b

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.c > t1.d OR t1.d > t1.e RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.a - t1.b AS col_3, t1.d - t1.e AS col_4 ORDER BY col_1, col_2
---- hash rowsort
23 tuples hashing to c87852d64a0a0f7ad0c1cdde418d2c5b

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR t1.c > t1.d OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.a - t1.b AS col_3, t1.d - t1.e AS col_4
---- hash rowsort
23 tuples hashing to c87852d64a0a0f7ad0c1cdde418d2c5b

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR t1.c > t1.d OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.a - t1.b AS col_3, t1.d - t1.e AS col_4 ORDER BY col_2, col_4, col_1
---- hash rowsort
23 tuples hashing to c87852d64a0a0f7ad0c1cdde418d2c5b

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN abs(t1.a) AS col_1, t1.c AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.d - t1.e AS col_4
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN abs(t1.a) AS col_1, t1.c AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.d - t1.e AS col_4 ORDER BY col_4, col_3, col_2, col_1
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN abs(t1.a) AS col_1, t1.c AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.d - t1.e AS col_4
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN abs(t1.a) AS col_1, t1.c AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.d - t1.e AS col_4 ORDER BY col_4, col_1, col_2, col_3
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1
---- 2
1067
1272

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1 ORDER BY col_1
---- 2
1067
1272

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1
---- 2
1067
1272

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1 ORDER BY col_1
---- 2
1067
1272

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d RETURN t1.b - t1.c AS col_1
---- hash rowsort
13 tuples hashing to 7744fc7874118e6abe7e080d62e702a2

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d RETURN t1.b - t1.c AS col_1 ORDER BY col_1
---- hash rowsort
13 tuples hashing to 7744fc7874118e6abe7e080d62e702a2

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.c AS col_2
---- hash rowsort
13 tuples hashing to 150f26c4261044e7d668047611de3015

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.c AS col_2 ORDER BY col_1, col_2
---- hash rowsort
13 tuples hashing to 150f26c4261044e7d668047611de3015

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.c - t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.d AS col_4, t1.d - t1.e AS col_5, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_6, abs(t1.b - t1.c) AS col_7
---- hash rowsort
30 tuples hashing to a762c4d51c7b81f25dc3488c5eb437d0

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.c - t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.d AS col_4, t1.d - t1.e AS col_5, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_6, abs(t1.b - t1.c) AS col_7 ORDER BY col_5, col_4, col_7, col_6, col_1, col_2, col_3
---- hash rowsort
30 tuples hashing to a762c4d51c7b81f25dc3488c5eb437d0

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR t1.b > t1.c RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.a - t1.b AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4
---- hash rowsort
20 tuples hashing to 31be87cb325fc0c5d4fadb3f90b0212f

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR t1.b > t1.c RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.a - t1.b AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4 ORDER BY col_3, col_2
---- hash rowsort
20 tuples hashing to 31be87cb325fc0c5d4fadb3f90b0212f

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR t1.d > t1.e RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.a - t1.b AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4
---- hash rowsort
20 tuples hashing to 31be87cb325fc0c5d4fadb3f90b0212f

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR t1.d > t1.e RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.a - t1.b AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4 ORDER BY col_1, col_4, col_2
---- hash rowsort
20 tuples hashing to 31be87cb325fc0c5d4fadb3f90b0212f

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.b > t1.c RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.c - t1.d AS col_2
---- hash rowsort
13 tuples hashing to e67a059f451c8f90e1551f297d5424b1

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.b > t1.c RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.c - t1.d AS col_2 ORDER BY col_2, col_1
---- hash rowsort
13 tuples hashing to e67a059f451c8f90e1551f297d5424b1

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.c - t1.d AS col_2
---- hash rowsort
13 tuples hashing to e67a059f451c8f90e1551f297d5424b1

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.c - t1.d AS col_2 ORDER BY col_1, col_2
---- hash rowsort
13 tuples hashing to e67a059f451c8f90e1551f297d5424b1

-STATEMENT MATCH (t1:t1) RETURN t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.b AS col_3, abs(t1.b - t1.c) AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5, abs(t1.a) AS col_6
---- hash rowsort
30 tuples hashing to f54645bfc786b7ace563665760407aba

-STATEMENT MATCH (t1:t1) RETURN t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.b AS col_3, abs(t1.b - t1.c) AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5, abs(t1.a) AS col_6 ORDER BY col_3, col_4, col_5
---- hash rowsort
30 tuples hashing to f54645bfc786b7ace563665760407aba

-STATEMENT MATCH (t1:t1) RETURN t1.a AS col_1, t1.c - t1.d AS col_2
---- hash rowsort
30 tuples hashing to 2b2b05bb4ff5a2ae82df74f85bb4afa9

-STATEMENT MATCH (t1:t1) RETURN t1.a AS col_1, t1.c - t1.d AS col_2 ORDER BY col_2, col_1
---- hash rowsort
30 tuples hashing to 2b2b05bb4ff5a2ae82df74f85bb4afa9

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.d > t1.e RETURN abs(t1.b - t1.c) AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, abs(t1.a) AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, t1.b AS col_5, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_6
---- hash rowsort
13 tuples hashing to 6ed7f32c0f6fca261a27bd3012c9991d

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.d > t1.e RETURN abs(t1.b - t1.c) AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, abs(t1.a) AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, t1.b AS col_5, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_6 ORDER BY col_3, col_4, col_6
---- hash rowsort
13 tuples hashing to 6ed7f32c0f6fca261a27bd3012c9991d

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.d > t1.e OR (t1.e > t1.a AND t1.e < t1.b) RETURN abs(t1.b - t1.c) AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, abs(t1.a) AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, t1.b AS col_5, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_6
---- hash rowsort
13 tuples hashing to 6ed7f32c0f6fca261a27bd3012c9991d

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.d > t1.e OR (t1.e > t1.a AND t1.e < t1.b) RETURN abs(t1.b - t1.c) AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, abs(t1.a) AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, t1.b AS col_5, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_6 ORDER BY col_1, col_6, col_5
---- hash rowsort
13 tuples hashing to 6ed7f32c0f6fca261a27bd3012c9991d

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.e > t1.a AND t1.e < t1.b) OR t1.d > t1.e RETURN abs(t1.b - t1.c) AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, abs(t1.a) AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, t1.b AS col_5, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_6
---- hash rowsort
13 tuples hashing to 6ed7f32c0f6fca261a27bd3012c9991d

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.e > t1.a AND t1.e < t1.b) OR t1.d > t1.e RETURN abs(t1.b - t1.c) AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, abs(t1.a) AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, t1.b AS col_5, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_6 ORDER BY col_6, col_2, col_3, col_5, col_4, col_1
---- hash rowsort
13 tuples hashing to 6ed7f32c0f6fca261a27bd3012c9991d

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.b AS col_1, t1.a - t1.b AS col_2, t1.a + t1.b * 2 AS col_3
---- hash rowsort
26 tuples hashing to f69d50fd4da72efa577fd7b5b57a218c

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.b AS col_1, t1.a - t1.b AS col_2, t1.a + t1.b * 2 AS col_3 ORDER BY col_2, col_1
---- hash rowsort
26 tuples hashing to f69d50fd4da72efa577fd7b5b57a218c

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.b AS col_1, t1.a - t1.b AS col_2, t1.a + t1.b * 2 AS col_3
---- hash rowsort
26 tuples hashing to f69d50fd4da72efa577fd7b5b57a218c

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.b AS col_1, t1.a - t1.b AS col_2, t1.a + t1.b * 2 AS col_3 ORDER BY col_2, col_1
---- hash rowsort
26 tuples hashing to f69d50fd4da72efa577fd7b5b57a218c

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR NOT (t1.d >= 110 AND t1.d <= 150) OR t1.a > t1.b RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.b AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.d - t1.e AS col_4, t1.a - t1.b AS col_5, abs(t1.b - t1.c) AS col_6
---- hash rowsort
26 tuples hashing to dc0420665219b1dbdb6c215345b1e791

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR NOT (t1.d >= 110 AND t1.d <= 150) OR t1.a > t1.b RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.b AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.d - t1.e AS col_4, t1.a - t1.b AS col_5, abs(t1.b - t1.c) AS col_6 ORDER BY col_3, col_5, col_6, col_2, col_1, col_4
---- hash rowsort
26 tuples hashing to dc0420665219b1dbdb6c215345b1e791

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.a > t1.b RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.b AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.d - t1.e AS col_4, t1.a - t1.b AS col_5, abs(t1.b - t1.c) AS col_6
---- hash rowsort
26 tuples hashing to dc0420665219b1dbdb6c215345b1e791

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.a > t1.b RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.b AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.d - t1.e AS col_4, t1.a - t1.b AS col_5, abs(t1.b - t1.c) AS col_6 ORDER BY col_4, col_1, col_3
---- hash rowsort
26 tuples hashing to dc0420665219b1dbdb6c215345b1e791

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.b AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.d - t1.e AS col_4, t1.a - t1.b AS col_5, abs(t1.b - t1.c) AS col_6
---- hash rowsort
26 tuples hashing to dc0420665219b1dbdb6c215345b1e791

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.b AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.d - t1.e AS col_4, t1.a - t1.b AS col_5, abs(t1.b - t1.c) AS col_6 ORDER BY col_5, col_6, col_2, col_3
---- hash rowsort
26 tuples hashing to dc0420665219b1dbdb6c215345b1e791

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.d - t1.e AS col_2, abs(t1.a) AS col_3
---- hash rowsort
5 tuples hashing to eb595e9f255d651bde844105fc08fb57

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.d - t1.e AS col_2, abs(t1.a) AS col_3 ORDER BY col_2, col_3, col_1
---- hash rowsort
5 tuples hashing to eb595e9f255d651bde844105fc08fb57

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.b > t1.c RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.d - t1.e AS col_2, abs(t1.a) AS col_3
---- hash rowsort
5 tuples hashing to eb595e9f255d651bde844105fc08fb57

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.b > t1.c RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.d - t1.e AS col_2, abs(t1.a) AS col_3 ORDER BY col_3, col_1, col_2
---- hash rowsort
5 tuples hashing to eb595e9f255d651bde844105fc08fb57

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.d > t1.e RETURN abs(t1.b - t1.c) AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.b AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_6, t1.d - t1.e AS col_7
---- hash rowsort
11 tuples hashing to 590bb43a66b49eaea7d40168ab95b87b

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.d > t1.e RETURN abs(t1.b - t1.c) AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.b AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_6, t1.d - t1.e AS col_7 ORDER BY col_3, col_7, col_1, col_6, col_2, col_4, col_5
---- hash rowsort
11 tuples hashing to 590bb43a66b49eaea7d40168ab95b87b

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR t1.b > t1.c OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.b AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.a - t1.b AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_6, abs(t1.b - t1.c) AS col_7
---- hash rowsort
27 tuples hashing to 3b74f944eef581369645e0018a91984a

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR t1.b > t1.c OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.b AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.a - t1.b AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_6, abs(t1.b - t1.c) AS col_7 ORDER BY col_2, col_4, col_7
---- hash rowsort
27 tuples hashing to 3b74f944eef581369645e0018a91984a

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.e > t1.c OR t1.e < t1.d) OR t1.a > t1.b RETURN t1.b AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.a - t1.b AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_6, abs(t1.b - t1.c) AS col_7
---- hash rowsort
27 tuples hashing to 3b74f944eef581369645e0018a91984a

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.e > t1.c OR t1.e < t1.d) OR t1.a > t1.b RETURN t1.b AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.a - t1.b AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_6, abs(t1.b - t1.c) AS col_7 ORDER BY col_4, col_5, col_3, col_7, col_6, col_1
---- hash rowsort
27 tuples hashing to 3b74f944eef581369645e0018a91984a

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR t1.a > t1.b OR t1.b > t1.c RETURN t1.b AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.a - t1.b AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_6, abs(t1.b - t1.c) AS col_7
---- hash rowsort
27 tuples hashing to 3b74f944eef581369645e0018a91984a

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR t1.a > t1.b OR t1.b > t1.c RETURN t1.b AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.a - t1.b AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_6, abs(t1.b - t1.c) AS col_7 ORDER BY col_4, col_7, col_1, col_5, col_6, col_2, col_3
---- hash rowsort
27 tuples hashing to 3b74f944eef581369645e0018a91984a

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.e AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4
---- hash rowsort
23 tuples hashing to f1d5c3beb375b47a05c92982d6c6752e

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.e AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4 ORDER BY col_3, col_2, col_1
---- hash rowsort
23 tuples hashing to f1d5c3beb375b47a05c92982d6c6752e

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR (t1.e > t1.c OR t1.e < t1.d) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.e AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4
---- hash rowsort
23 tuples hashing to f1d5c3beb375b47a05c92982d6c6752e

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR (t1.e > t1.c OR t1.e < t1.d) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.e AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4 ORDER BY col_1, col_4, col_3, col_2
---- hash rowsort
23 tuples hashing to f1d5c3beb375b47a05c92982d6c6752e

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR (t1.e > t1.a AND t1.e < t1.b) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.e AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4
---- hash rowsort
23 tuples hashing to f1d5c3beb375b47a05c92982d6c6752e

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR (t1.e > t1.a AND t1.e < t1.b) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.e AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4 ORDER BY col_1, col_2, col_4, col_3
---- hash rowsort
23 tuples hashing to f1d5c3beb375b47a05c92982d6c6752e

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.e > t1.c OR t1.e < t1.d) OR (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.e AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4
---- hash rowsort
23 tuples hashing to f1d5c3beb375b47a05c92982d6c6752e

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.e > t1.c OR t1.e < t1.d) OR (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.e AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4 ORDER BY col_2, col_3
---- hash rowsort
23 tuples hashing to f1d5c3beb375b47a05c92982d6c6752e

-STATEMENT MATCH (t1:t1) RETURN abs(t1.a) AS col_1, t1.d - t1.e AS col_2, t1.a AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4
---- hash rowsort
30 tuples hashing to 76e09a24f5a3dd61bfe1bde7114f6b63

-STATEMENT MATCH (t1:t1) RETURN abs(t1.a) AS col_1, t1.d - t1.e AS col_2, t1.a AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4 ORDER BY col_4, col_1
---- hash rowsort
30 tuples hashing to 76e09a24f5a3dd61bfe1bde7114f6b63

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a - t1.b AS col_1
---- 2
-2
2

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a - t1.b AS col_1 ORDER BY col_1
---- 2
-2
2

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, abs(t1.a) AS col_2, t1.b - t1.c AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4
---- hash rowsort
30 tuples hashing to e2f79a7a193b84cd7f70cf4f40403a28

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, abs(t1.a) AS col_2, t1.b - t1.c AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4 ORDER BY col_4, col_1
---- hash rowsort
30 tuples hashing to e2f79a7a193b84cd7f70cf4f40403a28

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 AS col_1, t1.b - t1.c AS col_2, t1.d AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, abs(t1.b - t1.c) AS col_5
---- hash rowsort
6 tuples hashing to d28f6b944184a7946ea3cb47cd5f761f

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 AS col_1, t1.b - t1.c AS col_2, t1.d AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, abs(t1.b - t1.c) AS col_5 ORDER BY col_2, col_5, col_3, col_4, col_1
---- hash rowsort
6 tuples hashing to d28f6b944184a7946ea3cb47cd5f761f

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.c > t1.d AND t1.b > t1.c RETURN t1.c - t1.d AS col_1, abs(t1.a) AS col_2
---- 1
3|191

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.c > t1.d AND t1.b > t1.c RETURN t1.c - t1.d AS col_1, abs(t1.a) AS col_2 ORDER BY col_1, col_2
---- 1
3|191

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND t1.b > t1.c AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.c - t1.d AS col_1, abs(t1.a) AS col_2
---- 1
3|191

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND t1.b > t1.c AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.c - t1.d AS col_1, abs(t1.a) AS col_2 ORDER BY col_1, col_2
---- 1
3|191

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND t1.c > t1.d AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.c - t1.d AS col_1, abs(t1.a) AS col_2
---- 1
3|191

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND t1.c > t1.d AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.c - t1.d AS col_1, abs(t1.a) AS col_2 ORDER BY col_1, col_2
---- 1
3|191

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND t1.b > t1.c AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.a + t1.b * 2 AS col_2, t1.c AS col_3, abs(t1.b - t1.c) AS col_4, t1.e AS col_5, t1.b AS col_6
---- hash rowsort
4 tuples hashing to 1612c366f1cbda32215c903e5addbbc5

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND t1.b > t1.c AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.a + t1.b * 2 AS col_2, t1.c AS col_3, abs(t1.b - t1.c) AS col_4, t1.e AS col_5, t1.b AS col_6 ORDER BY col_4, col_5, col_1, col_3
---- hash rowsort
4 tuples hashing to 1612c366f1cbda32215c903e5addbbc5

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.e AS col_2, t1.c - t1.d AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.d AS col_5
---- hash rowsort
28 tuples hashing to 4f4916853f2ccf272746741810ae125e

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.e AS col_2, t1.c - t1.d AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.d AS col_5 ORDER BY col_5, col_2, col_4, col_3, col_1
---- hash rowsort
28 tuples hashing to 4f4916853f2ccf272746741810ae125e

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.e > t1.c OR t1.e < t1.d) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.e AS col_2, t1.c - t1.d AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.d AS col_5
---- hash rowsort
28 tuples hashing to 4f4916853f2ccf272746741810ae125e

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.e > t1.c OR t1.e < t1.d) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.e AS col_2, t1.c - t1.d AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.d AS col_5 ORDER BY col_5, col_4, col_3
---- hash rowsort
28 tuples hashing to 4f4916853f2ccf272746741810ae125e

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.b > t1.c AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, abs(t1.b - t1.c) AS col_2, t1.e AS col_3, t1.c - t1.d AS col_4, t1.a - t1.b AS col_5, t1.d AS col_6
---- hash rowsort
2 tuples hashing to fc68cd4e373c05bcb81c6c05f548e955

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.b > t1.c AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, abs(t1.b - t1.c) AS col_2, t1.e AS col_3, t1.c - t1.d AS col_4, t1.a - t1.b AS col_5, t1.d AS col_6 ORDER BY col_2, col_1
---- hash rowsort
2 tuples hashing to fc68cd4e373c05bcb81c6c05f548e955

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.b > t1.c RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, abs(t1.b - t1.c) AS col_2, t1.e AS col_3, t1.c - t1.d AS col_4, t1.a - t1.b AS col_5, t1.d AS col_6
---- hash rowsort
2 tuples hashing to fc68cd4e373c05bcb81c6c05f548e955

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.b > t1.c RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, abs(t1.b - t1.c) AS col_2, t1.e AS col_3, t1.c - t1.d AS col_4, t1.a - t1.b AS col_5, t1.d AS col_6 ORDER BY col_4, col_2, col_1, col_5
---- hash rowsort
2 tuples hashing to fc68cd4e373c05bcb81c6c05f548e955

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.b > t1.c AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, abs(t1.b - t1.c) AS col_2, t1.e AS col_3, t1.c - t1.d AS col_4, t1.a - t1.b AS col_5, t1.d AS col_6
---- hash rowsort
2 tuples hashing to fc68cd4e373c05bcb81c6c05f548e955

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.b > t1.c AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, abs(t1.b - t1.c) AS col_2, t1.e AS col_3, t1.c - t1.d AS col_4, t1.a - t1.b AS col_5, t1.d AS col_6 ORDER BY col_4, col_6, col_3, col_5, col_2, col_1
---- hash rowsort
2 tuples hashing to fc68cd4e373c05bcb81c6c05f548e955

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) RETURN t1.b - t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.d AS col_3, abs(t1.b - t1.c) AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5
---- hash rowsort
21 tuples hashing to 26923bd58b309b9593803e3d473e74a5

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) RETURN t1.b - t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.d AS col_3, abs(t1.b - t1.c) AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5 ORDER BY col_1, col_2, col_5
---- hash rowsort
21 tuples hashing to 26923bd58b309b9593803e3d473e74a5

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1
---- hash rowsort
19 tuples hashing to 95973221897dd8239e748cb04834188e

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1 ORDER BY col_1
---- hash rowsort
19 tuples hashing to 95973221897dd8239e748cb04834188e

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.b > t1.c RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1
---- hash rowsort
19 tuples hashing to 95973221897dd8239e748cb04834188e

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.b > t1.c RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1 ORDER BY col_1
---- hash rowsort
19 tuples hashing to 95973221897dd8239e748cb04834188e

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR t1.a > t1.b RETURN abs(t1.b - t1.c) AS col_1, abs(t1.a) AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3
---- hash rowsort
25 tuples hashing to c4c0451bbe21c32530175a6b4771b20d

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR t1.a > t1.b RETURN abs(t1.b - t1.c) AS col_1, abs(t1.a) AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3 ORDER BY col_2, col_1
---- hash rowsort
25 tuples hashing to c4c0451bbe21c32530175a6b4771b20d

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR t1.c > t1.d RETURN abs(t1.b - t1.c) AS col_1, abs(t1.a) AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3
---- hash rowsort
25 tuples hashing to c4c0451bbe21c32530175a6b4771b20d

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR t1.c > t1.d RETURN abs(t1.b - t1.c) AS col_1, abs(t1.a) AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3 ORDER BY col_2, col_3, col_1
---- hash rowsort
25 tuples hashing to c4c0451bbe21c32530175a6b4771b20d

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.d > t1.e RETURN t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2
---- hash rowsort
11 tuples hashing to 1b1a4ed3e2cc298486d6232c92ea123d

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.d > t1.e RETURN t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2 ORDER BY col_1, col_2
---- hash rowsort
11 tuples hashing to 1b1a4ed3e2cc298486d6232c92ea123d

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2
---- hash rowsort
11 tuples hashing to 1b1a4ed3e2cc298486d6232c92ea123d

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2 ORDER BY col_1, col_2
---- hash rowsort
11 tuples hashing to 1b1a4ed3e2cc298486d6232c92ea123d

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.d - t1.e AS col_1, t1.a AS col_2, t1.a + t1.b * 2 AS col_3
---- hash rowsort
24 tuples hashing to 0b3a185ef7f379374dde8c3e8619d4fb

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.d - t1.e AS col_1, t1.a AS col_2, t1.a + t1.b * 2 AS col_3 ORDER BY col_1, col_2, col_3
---- hash rowsort
24 tuples hashing to 0b3a185ef7f379374dde8c3e8619d4fb

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.d - t1.e AS col_1, t1.a AS col_2, t1.a + t1.b * 2 AS col_3
---- hash rowsort
24 tuples hashing to 0b3a185ef7f379374dde8c3e8619d4fb

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.d - t1.e AS col_1, t1.a AS col_2, t1.a + t1.b * 2 AS col_3 ORDER BY col_2, col_3, col_1
---- hash rowsort
24 tuples hashing to 0b3a185ef7f379374dde8c3e8619d4fb

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.e > t1.c OR t1.e < t1.d) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.d - t1.e AS col_1, t1.a AS col_2, t1.a + t1.b * 2 AS col_3
---- hash rowsort
24 tuples hashing to 0b3a185ef7f379374dde8c3e8619d4fb

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.e > t1.c OR t1.e < t1.d) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.d - t1.e AS col_1, t1.a AS col_2, t1.a + t1.b * 2 AS col_3 ORDER BY col_3, col_1
---- hash rowsort
24 tuples hashing to 0b3a185ef7f379374dde8c3e8619d4fb

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND t1.b > t1.c RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.d AS col_2, t1.a - t1.b AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4
---- hash rowsort
9 tuples hashing to 5da6112e69defbda6b432d8087c0cef0

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND t1.b > t1.c RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.d AS col_2, t1.a - t1.b AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4 ORDER BY col_2, col_4, col_3
---- hash rowsort
9 tuples hashing to 5da6112e69defbda6b432d8087c0cef0

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 AS col_1, abs(t1.a) AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5, t1.a - t1.b AS col_6
---- hash rowsort
10 tuples hashing to f54c5084014bab5297db4be7e349c915

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 AS col_1, abs(t1.a) AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5, t1.a - t1.b AS col_6 ORDER BY col_3, col_4, col_2, col_5, col_1, col_6
---- hash rowsort
10 tuples hashing to f54c5084014bab5297db4be7e349c915

-STATEMENT MATCH (t1:t1) RETURN t1.c - t1.d AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.b AS col_4, t1.a - t1.b AS col_5, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_6, t1.d - t1.e AS col_7
---- hash rowsort
30 tuples hashing to dd0bd35d9d46d1a4b77a23f4b4f553e7

-STATEMENT MATCH (t1:t1) RETURN t1.c - t1.d AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.b AS col_4, t1.a - t1.b AS col_5, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_6, t1.d - t1.e AS col_7 ORDER BY col_4, col_5, col_2, col_7, col_1, col_3, col_6
---- hash rowsort
30 tuples hashing to dd0bd35d9d46d1a4b77a23f4b4f553e7

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.e AS col_1, t1.d - t1.e AS col_2, abs(t1.b - t1.c) AS col_3, t1.c AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_6
---- hash rowsort
15 tuples hashing to e07de53c370dbbe83225474f68b6d765

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.e AS col_1, t1.d - t1.e AS col_2, abs(t1.b - t1.c) AS col_3, t1.c AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_6 ORDER BY col_1, col_4
---- hash rowsort
15 tuples hashing to e07de53c370dbbe83225474f68b6d765

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 AS col_2, t1.d AS col_3, abs(t1.b - t1.c) AS col_4
---- hash rowsort
14 tuples hashing to 2a2498d36b28f4415eda99f4d3aba546

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 AS col_2, t1.d AS col_3, abs(t1.b - t1.c) AS col_4 ORDER BY col_2, col_1, col_3, col_4
---- hash rowsort
14 tuples hashing to 2a2498d36b28f4415eda99f4d3aba546

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 AS col_2, t1.d AS col_3, abs(t1.b - t1.c) AS col_4
---- hash rowsort
14 tuples hashing to 2a2498d36b28f4415eda99f4d3aba546

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 AS col_2, t1.d AS col_3, abs(t1.b - t1.c) AS col_4 ORDER BY col_4, col_2, col_3, col_1
---- hash rowsort
14 tuples hashing to 2a2498d36b28f4415eda99f4d3aba546

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, abs(t1.b - t1.c) AS col_2, t1.a + t1.b * 2 AS col_3, abs(t1.a) AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5
---- hash rowsort
26 tuples hashing to 4c5bc77c87d1b87f4b3630560ed8940c

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, abs(t1.b - t1.c) AS col_2, t1.a + t1.b * 2 AS col_3, abs(t1.a) AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5 ORDER BY col_1, col_3, col_2, col_4
---- hash rowsort
26 tuples hashing to 4c5bc77c87d1b87f4b3630560ed8940c

-STATEMENT MATCH (t1:t1) RETURN t1.e AS col_1, t1.a - t1.b AS col_2, t1.c AS col_3, t1.d - t1.e AS col_4
---- hash rowsort
30 tuples hashing to 62d2c32a18d7b3ef44acb44f3c4dfa02

-STATEMENT MATCH (t1:t1) RETURN t1.e AS col_1, t1.a - t1.b AS col_2, t1.c AS col_3, t1.d - t1.e AS col_4 ORDER BY col_1, col_3
---- hash rowsort
30 tuples hashing to 62d2c32a18d7b3ef44acb44f3c4dfa02

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1
---- hash rowsort
19 tuples hashing to d54b17a6eb2efa3b7ec99d7719153c1e

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1 ORDER BY col_1
---- hash rowsort
19 tuples hashing to d54b17a6eb2efa3b7ec99d7719153c1e

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1
---- hash rowsort
19 tuples hashing to d54b17a6eb2efa3b7ec99d7719153c1e

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1 ORDER BY col_1
---- hash rowsort
19 tuples hashing to d54b17a6eb2efa3b7ec99d7719153c1e

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, abs(t1.b - t1.c) AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4
---- hash rowsort
23 tuples hashing to 7eeafa7a3807fccc9b73e72a4b93bc31

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, abs(t1.b - t1.c) AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4 ORDER BY col_3, col_2
---- hash rowsort
23 tuples hashing to 7eeafa7a3807fccc9b73e72a4b93bc31

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.e > t1.c OR t1.e < t1.d) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, abs(t1.b - t1.c) AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4
---- hash rowsort
23 tuples hashing to 7eeafa7a3807fccc9b73e72a4b93bc31

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.e > t1.c OR t1.e < t1.d) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, abs(t1.b - t1.c) AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4 ORDER BY col_3, col_1, col_2, col_4
---- hash rowsort
23 tuples hashing to 7eeafa7a3807fccc9b73e72a4b93bc31

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.e > t1.c OR t1.e < t1.d) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, abs(t1.b - t1.c) AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4
---- hash rowsort
23 tuples hashing to 7eeafa7a3807fccc9b73e72a4b93bc31

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.e > t1.c OR t1.e < t1.d) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, abs(t1.b - t1.c) AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4 ORDER BY col_3, col_4, col_2
---- hash rowsort
23 tuples hashing to 7eeafa7a3807fccc9b73e72a4b93bc31

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.d - t1.e AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.c - t1.d AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_6, t1.c AS col_7
---- hash rowsort
21 tuples hashing to 6e9a1be65ce2b6500b8b730732a2d405

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.d - t1.e AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.c - t1.d AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_6, t1.c AS col_7 ORDER BY col_4, col_5, col_6
---- hash rowsort
21 tuples hashing to 6e9a1be65ce2b6500b8b730732a2d405

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.c AS col_1
---- hash rowsort
16 tuples hashing to 22c25adf7bd218113a71af4a3991a638

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.c AS col_1 ORDER BY col_1
---- hash rowsort
16 tuples hashing to 22c25adf7bd218113a71af4a3991a638

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.d > t1.e RETURN t1.c AS col_1
---- hash rowsort
16 tuples hashing to 22c25adf7bd218113a71af4a3991a638

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.d > t1.e RETURN t1.c AS col_1 ORDER BY col_1
---- hash rowsort
16 tuples hashing to 22c25adf7bd218113a71af4a3991a638

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.e AS col_1
---- 8
132
135
144
157
165
180
197
227

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.e AS col_1 ORDER BY col_1
---- 8
132
135
144
157
165
180
197
227

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.d - t1.e AS col_2
---- hash rowsort
11 tuples hashing to 7771e6d165f91614cbc1d5b976de4da8

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.d - t1.e AS col_2 ORDER BY col_1, col_2
---- hash rowsort
11 tuples hashing to 7771e6d165f91614cbc1d5b976de4da8

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.d - t1.e AS col_2
---- hash rowsort
11 tuples hashing to 7771e6d165f91614cbc1d5b976de4da8

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.d - t1.e AS col_2 ORDER BY col_2, col_1
---- hash rowsort
11 tuples hashing to 7771e6d165f91614cbc1d5b976de4da8

-STATEMENT MATCH (t1:t1) RETURN t1.a AS col_1, t1.e AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.a + t1.b * 2 AS col_4
---- hash rowsort
30 tuples hashing to 6cfbc80b995d3658554afdd21a51582f

-STATEMENT MATCH (t1:t1) RETURN t1.a AS col_1, t1.e AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.a + t1.b * 2 AS col_4 ORDER BY col_3, col_1
---- hash rowsort
30 tuples hashing to 6cfbc80b995d3658554afdd21a51582f

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR t1.c > t1.d RETURN t1.d AS col_1, t1.c AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3
---- hash rowsort
22 tuples hashing to 0e5e006f2b6d0a931c6bba059b6d2c67

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR t1.c > t1.d RETURN t1.d AS col_1, t1.c AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3 ORDER BY col_1, col_2, col_3
---- hash rowsort
22 tuples hashing to 0e5e006f2b6d0a931c6bba059b6d2c67

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.d AS col_1, t1.c AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3
---- hash rowsort
22 tuples hashing to 0e5e006f2b6d0a931c6bba059b6d2c67

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.d AS col_1, t1.c AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3 ORDER BY col_2, col_3, col_1
---- hash rowsort
22 tuples hashing to 0e5e006f2b6d0a931c6bba059b6d2c67

-STATEMENT MATCH (t1:t1) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1
---- hash rowsort
30 tuples hashing to 74b4b1d1e049d57b3610b70a67a1c32f

-STATEMENT MATCH (t1:t1) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1 ORDER BY col_1
---- hash rowsort
30 tuples hashing to 74b4b1d1e049d57b3610b70a67a1c32f

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.b - t1.c AS col_2
---- 2
222|-1
222|1

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.b - t1.c AS col_2 ORDER BY col_1, col_2
---- 2
222|-1
222|1

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.e > t1.a AND t1.e < t1.b) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.b - t1.c AS col_2
---- 2
222|-1
222|1

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.e > t1.a AND t1.e < t1.b) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.b - t1.c AS col_2 ORDER BY col_1, col_2
---- 2
222|-1
222|1

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.e > t1.a AND t1.e < t1.b) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.b - t1.c AS col_2
---- 2
222|-1
222|1

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.e > t1.a AND t1.e < t1.b) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.b - t1.c AS col_2 ORDER BY col_2, col_1
---- 2
222|-1
222|1

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a - t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, abs(t1.a) AS col_3
---- hash rowsort
10 tuples hashing to 8daf8f23f6242f7a667bd5780632de9a

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a - t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, abs(t1.a) AS col_3 ORDER BY col_2, col_1
---- hash rowsort
10 tuples hashing to 8daf8f23f6242f7a667bd5780632de9a

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a - t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, abs(t1.a) AS col_3
---- hash rowsort
10 tuples hashing to 8daf8f23f6242f7a667bd5780632de9a

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a - t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, abs(t1.a) AS col_3 ORDER BY col_1, col_3
---- hash rowsort
10 tuples hashing to 8daf8f23f6242f7a667bd5780632de9a

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.c AS col_1, t1.a AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3
---- hash rowsort
8 tuples hashing to 9216376f4a9807e2185398d8d74076b0

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.c AS col_1, t1.a AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3 ORDER BY col_3, col_2
---- hash rowsort
8 tuples hashing to 9216376f4a9807e2185398d8d74076b0

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.a > t1.b OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 AS col_2, t1.c AS col_3, t1.b - t1.c AS col_4, t1.d - t1.e AS col_5, t1.c - t1.d AS col_6, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_7
---- hash rowsort
24 tuples hashing to f3642d300b7a87ccfe2cd4bf73a7004d

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.a > t1.b OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 AS col_2, t1.c AS col_3, t1.b - t1.c AS col_4, t1.d - t1.e AS col_5, t1.c - t1.d AS col_6, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_7 ORDER BY col_2, col_5, col_1, col_7, col_4
---- hash rowsort
24 tuples hashing to f3642d300b7a87ccfe2cd4bf73a7004d

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.a > t1.b OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 AS col_2, t1.c AS col_3, t1.b - t1.c AS col_4, t1.d - t1.e AS col_5, t1.c - t1.d AS col_6, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_7
---- hash rowsort
24 tuples hashing to f3642d300b7a87ccfe2cd4bf73a7004d

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.a > t1.b OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 AS col_2, t1.c AS col_3, t1.b - t1.c AS col_4, t1.d - t1.e AS col_5, t1.c - t1.d AS col_6, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_7 ORDER BY col_7, col_1, col_5, col_3, col_6
---- hash rowsort
24 tuples hashing to f3642d300b7a87ccfe2cd4bf73a7004d

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.a > t1.b OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 AS col_2, t1.c AS col_3, t1.b - t1.c AS col_4, t1.d - t1.e AS col_5, t1.c - t1.d AS col_6, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_7
---- hash rowsort
24 tuples hashing to f3642d300b7a87ccfe2cd4bf73a7004d

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.a > t1.b OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 AS col_2, t1.c AS col_3, t1.b - t1.c AS col_4, t1.d - t1.e AS col_5, t1.c - t1.d AS col_6, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_7 ORDER BY col_3, col_1, col_4, col_5, col_2, col_7
---- hash rowsort
24 tuples hashing to f3642d300b7a87ccfe2cd4bf73a7004d

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.a > t1.b RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 AS col_2, t1.c AS col_3, t1.b - t1.c AS col_4, t1.d - t1.e AS col_5, t1.c - t1.d AS col_6, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_7
---- hash rowsort
24 tuples hashing to f3642d300b7a87ccfe2cd4bf73a7004d

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.a > t1.b RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 AS col_2, t1.c AS col_3, t1.b - t1.c AS col_4, t1.d - t1.e AS col_5, t1.c - t1.d AS col_6, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_7 ORDER BY col_7, col_1
---- hash rowsort
24 tuples hashing to f3642d300b7a87ccfe2cd4bf73a7004d

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.c AS col_1, t1.a AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, t1.a + t1.b * 2 AS col_5, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_6, t1.e AS col_7
---- hash rowsort
6 tuples hashing to f283e84994d04c83261c13fad2061bd1

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.c AS col_1, t1.a AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, t1.a + t1.b * 2 AS col_5, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_6, t1.e AS col_7 ORDER BY col_1, col_2, col_5, col_7, col_3, col_4, col_6
---- hash rowsort
6 tuples hashing to f283e84994d04c83261c13fad2061bd1

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND t1.b > t1.c RETURN t1.c AS col_1, t1.a AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, t1.a + t1.b * 2 AS col_5, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_6, t1.e AS col_7
---- hash rowsort
6 tuples hashing to f283e84994d04c83261c13fad2061bd1

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND t1.b > t1.c RETURN t1.c AS col_1, t1.a AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, t1.a + t1.b * 2 AS col_5, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_6, t1.e AS col_7 ORDER BY col_2, col_3, col_7, col_4, col_1
---- hash rowsort
6 tuples hashing to f283e84994d04c83261c13fad2061bd1

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c RETURN abs(t1.a) AS col_1, t1.b AS col_2
---- hash rowsort
13 tuples hashing to 82a4fb50dd6aa553926a6d4ec2774a55

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c RETURN abs(t1.a) AS col_1, t1.b AS col_2 ORDER BY col_2, col_1
---- hash rowsort
13 tuples hashing to 82a4fb50dd6aa553926a6d4ec2774a55

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.e > t1.a AND t1.e < t1.b) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2
---- 3
444|192
444|222
444|247

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.e > t1.a AND t1.e < t1.b) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2 ORDER BY col_1, col_2
---- 3
444|192
444|222
444|247

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2
---- 3
444|192
444|222
444|247

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2 ORDER BY col_2, col_1
---- 3
444|192
444|222
444|247

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.d AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2
---- hash rowsort
24 tuples hashing to 64376dd8151d8a271afd6fbfd3904ec9

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.d AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2 ORDER BY col_1, col_2
---- hash rowsort
24 tuples hashing to 64376dd8151d8a271afd6fbfd3904ec9

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.d AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2
---- hash rowsort
24 tuples hashing to 64376dd8151d8a271afd6fbfd3904ec9

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.d AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2 ORDER BY col_2, col_1
---- hash rowsort
24 tuples hashing to 64376dd8151d8a271afd6fbfd3904ec9

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR t1.b > t1.c RETURN t1.d AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2
---- hash rowsort
24 tuples hashing to 64376dd8151d8a271afd6fbfd3904ec9

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR t1.b > t1.c RETURN t1.d AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2 ORDER BY col_2, col_1
---- hash rowsort
24 tuples hashing to 64376dd8151d8a271afd6fbfd3904ec9

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.c AS col_1
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.c AS col_1 ORDER BY col_1
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.c AS col_1
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.c AS col_1 ORDER BY col_1
---- 0


-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.b > t1.c OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.c - t1.d AS col_5, t1.d - t1.e AS col_6
---- hash rowsort
21 tuples hashing to a02687520314ff075ab8bb20ad78dc8b

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.b > t1.c OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.c - t1.d AS col_5, t1.d - t1.e AS col_6 ORDER BY col_6, col_3, col_1
---- hash rowsort
21 tuples hashing to a02687520314ff075ab8bb20ad78dc8b

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.c - t1.d AS col_5, t1.d - t1.e AS col_6
---- hash rowsort
21 tuples hashing to a02687520314ff075ab8bb20ad78dc8b

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.c - t1.d AS col_5, t1.d - t1.e AS col_6 ORDER BY col_2, col_6, col_4, col_3, col_1, col_5
---- hash rowsort
21 tuples hashing to a02687520314ff075ab8bb20ad78dc8b

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.b > t1.c RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.c - t1.d AS col_5, t1.d - t1.e AS col_6
---- hash rowsort
21 tuples hashing to a02687520314ff075ab8bb20ad78dc8b

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.b > t1.c RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.c - t1.d AS col_5, t1.d - t1.e AS col_6 ORDER BY col_2, col_4, col_5, col_3, col_6
---- hash rowsort
21 tuples hashing to a02687520314ff075ab8bb20ad78dc8b

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.c - t1.d AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.d - t1.e AS col_4, t1.a + t1.b * 2 AS col_5, t1.a AS col_6
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.c - t1.d AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.d - t1.e AS col_4, t1.a + t1.b * 2 AS col_5, t1.a AS col_6 ORDER BY col_3, col_4, col_6, col_5
---- 0


-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.b AS col_3
---- hash rowsort
30 tuples hashing to 05ef2af4add7c81aa2cacd3340f3a48f

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.b AS col_3 ORDER BY col_1, col_2
---- hash rowsort
30 tuples hashing to 05ef2af4add7c81aa2cacd3340f3a48f

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.d - t1.e AS col_2, t1.c - t1.d AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.a AS col_5
---- hash rowsort
29 tuples hashing to 4ccd19d5b9634a7757b9b2a1b9c70b0b

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.d - t1.e AS col_2, t1.c - t1.d AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.a AS col_5 ORDER BY col_2, col_3, col_5
---- hash rowsort
29 tuples hashing to 4ccd19d5b9634a7757b9b2a1b9c70b0b

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.d AS col_4, t1.a AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_6, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_7
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.d AS col_4, t1.a AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_6, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_7 ORDER BY col_5, col_7, col_6, col_2, col_4, col_3
---- 0


-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.b AS col_2, t1.a - t1.b AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4
---- 2
1050|105|2|333
1290|129|-2|222

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.b AS col_2, t1.a - t1.b AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4 ORDER BY col_2, col_4, col_3, col_1
---- 2
1050|105|2|333
1290|129|-2|222

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, abs(t1.a) AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.a AS col_4, t1.c AS col_5, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_6
---- hash rowsort
30 tuples hashing to 778c4d36b14ad59603d500ebe53124a8

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, abs(t1.a) AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.a AS col_4, t1.c AS col_5, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_6 ORDER BY col_2, col_3, col_4, col_6, col_1
---- hash rowsort
30 tuples hashing to 778c4d36b14ad59603d500ebe53124a8

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.c AS col_1, t1.d - t1.e AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, abs(t1.a) AS col_4, t1.a AS col_5, t1.a - t1.b AS col_6, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_7
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.c AS col_1, t1.d - t1.e AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, abs(t1.a) AS col_4, t1.a AS col_5, t1.a - t1.b AS col_6, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_7 ORDER BY col_1, col_6, col_7, col_3
---- 0


-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.b - t1.c AS col_4, t1.a AS col_5
---- hash rowsort
30 tuples hashing to fb86dbed4e4876a4d8730df61548deb9

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.b - t1.c AS col_4, t1.a AS col_5 ORDER BY col_2, col_1, col_3, col_5
---- hash rowsort
30 tuples hashing to fb86dbed4e4876a4d8730df61548deb9

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.e > t1.a AND t1.e < t1.b) RETURN abs(t1.b - t1.c) AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.d AS col_3, t1.b - t1.c AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5
---- hash rowsort
3 tuples hashing to 9f69d9b1ca7496c55e8e9d5a34c2b422

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.e > t1.a AND t1.e < t1.b) RETURN abs(t1.b - t1.c) AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.d AS col_3, t1.b - t1.c AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5 ORDER BY col_2, col_1
---- hash rowsort
3 tuples hashing to 9f69d9b1ca7496c55e8e9d5a34c2b422

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN abs(t1.b - t1.c) AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.d AS col_3, t1.b - t1.c AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5
---- hash rowsort
3 tuples hashing to 9f69d9b1ca7496c55e8e9d5a34c2b422

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN abs(t1.b - t1.c) AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.d AS col_3, t1.b - t1.c AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5 ORDER BY col_1, col_5
---- hash rowsort
3 tuples hashing to 9f69d9b1ca7496c55e8e9d5a34c2b422

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.e AS col_1, t1.b AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.a AS col_4
---- hash rowsort
27 tuples hashing to 052bee12f2a7a847ddd0a7089ac8cfbb

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.e AS col_1, t1.b AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.a AS col_4 ORDER BY col_3, col_4, col_1
---- hash rowsort
27 tuples hashing to 052bee12f2a7a847ddd0a7089ac8cfbb

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.e AS col_1, t1.b AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.a AS col_4
---- hash rowsort
27 tuples hashing to 052bee12f2a7a847ddd0a7089ac8cfbb

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.e AS col_1, t1.b AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.a AS col_4 ORDER BY col_2, col_3, col_4
---- hash rowsort
27 tuples hashing to 052bee12f2a7a847ddd0a7089ac8cfbb

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN abs(t1.b - t1.c) AS col_1, t1.b - t1.c AS col_2, t1.c - t1.d AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5
---- hash rowsort
30 tuples hashing to 597fcab4085e4e5afa17f258fc54a550

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN abs(t1.b - t1.c) AS col_1, t1.b - t1.c AS col_2, t1.c - t1.d AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5 ORDER BY col_1, col_4, col_2, col_5
---- hash rowsort
30 tuples hashing to 597fcab4085e4e5afa17f258fc54a550

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.b - t1.c AS col_1, t1.c AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3
---- hash rowsort
22 tuples hashing to 03e7e92bd1e9e2b95658c34509df6798

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.b - t1.c AS col_1, t1.c AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3 ORDER BY col_3, col_1, col_2
---- hash rowsort
22 tuples hashing to 03e7e92bd1e9e2b95658c34509df6798

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.b - t1.c AS col_1, t1.c AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3
---- hash rowsort
22 tuples hashing to 03e7e92bd1e9e2b95658c34509df6798

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.b - t1.c AS col_1, t1.c AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3 ORDER BY col_1, col_3
---- hash rowsort
22 tuples hashing to 03e7e92bd1e9e2b95658c34509df6798

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.d AS col_1, t1.c AS col_2, t1.a + t1.b * 2 AS col_3, abs(t1.b - t1.c) AS col_4, abs(t1.a) AS col_5, t1.c - t1.d AS col_6, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_7
---- hash rowsort
8 tuples hashing to 5805d136e910773107c290a90b9c97ef

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.d AS col_1, t1.c AS col_2, t1.a + t1.b * 2 AS col_3, abs(t1.b - t1.c) AS col_4, abs(t1.a) AS col_5, t1.c - t1.d AS col_6, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_7 ORDER BY col_4, col_2
---- hash rowsort
8 tuples hashing to 5805d136e910773107c290a90b9c97ef

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.d - t1.e AS col_1, t1.a AS col_2, t1.b AS col_3
---- hash rowsort
3 tuples hashing to 128d329bc7a3ace9bfe759017667f1fa

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.d - t1.e AS col_1, t1.a AS col_2, t1.b AS col_3 ORDER BY col_3, col_1, col_2
---- hash rowsort
3 tuples hashing to 128d329bc7a3ace9bfe759017667f1fa

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.d - t1.e AS col_1, t1.a AS col_2, t1.b AS col_3
---- hash rowsort
3 tuples hashing to 128d329bc7a3ace9bfe759017667f1fa

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.d - t1.e AS col_1, t1.a AS col_2, t1.b AS col_3 ORDER BY col_2, col_3, col_1
---- hash rowsort
3 tuples hashing to 128d329bc7a3ace9bfe759017667f1fa

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.a + t1.b * 2 AS col_3, t1.d - t1.e AS col_4, t1.d AS col_5
---- hash rowsort
13 tuples hashing to ff90a655b6029f653cd5895fca7421dd

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.a + t1.b * 2 AS col_3, t1.d - t1.e AS col_4, t1.d AS col_5 ORDER BY col_4, col_2, col_5
---- hash rowsort
13 tuples hashing to ff90a655b6029f653cd5895fca7421dd

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5, t1.e AS col_6, t1.b - t1.c AS col_7
---- hash rowsort
3 tuples hashing to 96375f3f872f57b2e90be141d7b751ac

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5, t1.e AS col_6, t1.b - t1.c AS col_7 ORDER BY col_5, col_7, col_4, col_3, col_1, col_6, col_2
---- hash rowsort
3 tuples hashing to 96375f3f872f57b2e90be141d7b751ac

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.a > t1.b RETURN t1.e AS col_1
---- hash rowsort
19 tuples hashing to b9dfd9f7189c9f709aacb42c2b916f5a

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.a > t1.b RETURN t1.e AS col_1 ORDER BY col_1
---- hash rowsort
19 tuples hashing to b9dfd9f7189c9f709aacb42c2b916f5a

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.e AS col_1
---- hash rowsort
19 tuples hashing to b9dfd9f7189c9f709aacb42c2b916f5a

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.e AS col_1 ORDER BY col_1
---- hash rowsort
19 tuples hashing to b9dfd9f7189c9f709aacb42c2b916f5a

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR t1.d > t1.e OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.c - t1.d AS col_1
---- hash rowsort
25 tuples hashing to 7f750fc69a9dd4473b56b4b994a5bea5

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR t1.d > t1.e OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.c - t1.d AS col_1 ORDER BY col_1
---- hash rowsort
25 tuples hashing to 7f750fc69a9dd4473b56b4b994a5bea5

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR t1.d > t1.e OR t1.a > t1.b RETURN t1.c - t1.d AS col_1
---- hash rowsort
25 tuples hashing to 7f750fc69a9dd4473b56b4b994a5bea5

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR t1.d > t1.e OR t1.a > t1.b RETURN t1.c - t1.d AS col_1 ORDER BY col_1
---- hash rowsort
25 tuples hashing to 7f750fc69a9dd4473b56b4b994a5bea5

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR t1.d > t1.e RETURN t1.c - t1.d AS col_1
---- hash rowsort
25 tuples hashing to 7f750fc69a9dd4473b56b4b994a5bea5

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR t1.d > t1.e RETURN t1.c - t1.d AS col_1 ORDER BY col_1
---- hash rowsort
25 tuples hashing to 7f750fc69a9dd4473b56b4b994a5bea5

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1
---- hash rowsort
30 tuples hashing to fd6d6825820cf653aceb2d72af4a5983

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1 ORDER BY col_1
---- hash rowsort
30 tuples hashing to fd6d6825820cf653aceb2d72af4a5983

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.a AS col_4, t1.a + t1.b * 2 AS col_5
---- hash rowsort
15 tuples hashing to 6f480d3aa47a95f41a13232ad2630f97

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.a AS col_4, t1.a + t1.b * 2 AS col_5 ORDER BY col_2, col_1, col_4, col_5
---- hash rowsort
15 tuples hashing to 6f480d3aa47a95f41a13232ad2630f97

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.d > t1.e RETURN abs(t1.a) AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_6
---- hash rowsort
11 tuples hashing to 5d035933803dd1c0ade45030c603f484

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.d > t1.e RETURN abs(t1.a) AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_6 ORDER BY col_2, col_4, col_5, col_1, col_3
---- hash rowsort
11 tuples hashing to 5d035933803dd1c0ade45030c603f484

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.e > t1.c OR t1.e < t1.d) RETURN abs(t1.b - t1.c) AS col_1, t1.b - t1.c AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.a - t1.b AS col_4, t1.e AS col_5, t1.a + t1.b * 2 AS col_6, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_7
---- hash rowsort
21 tuples hashing to c881e24abce01247b00f910db61ea7db

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.e > t1.c OR t1.e < t1.d) RETURN abs(t1.b - t1.c) AS col_1, t1.b - t1.c AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.a - t1.b AS col_4, t1.e AS col_5, t1.a + t1.b * 2 AS col_6, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_7 ORDER BY col_7, col_6, col_4, col_3, col_1, col_5
---- hash rowsort
21 tuples hashing to c881e24abce01247b00f910db61ea7db

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN abs(t1.b - t1.c) AS col_1, t1.b - t1.c AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.a - t1.b AS col_4, t1.e AS col_5, t1.a + t1.b * 2 AS col_6, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_7
---- hash rowsort
21 tuples hashing to c881e24abce01247b00f910db61ea7db

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN abs(t1.b - t1.c) AS col_1, t1.b - t1.c AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.a - t1.b AS col_4, t1.e AS col_5, t1.a + t1.b * 2 AS col_6, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_7 ORDER BY col_7, col_5, col_6, col_1, col_4, col_3, col_2
---- hash rowsort
21 tuples hashing to c881e24abce01247b00f910db61ea7db

-STATEMENT MATCH (t1:t1) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.d AS col_2, t1.e AS col_3, t1.a + t1.b * 2 AS col_4
---- hash rowsort
30 tuples hashing to aae26346ea8b77e21281f2abe63c0266

-STATEMENT MATCH (t1:t1) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.d AS col_2, t1.e AS col_3, t1.a + t1.b * 2 AS col_4 ORDER BY col_1, col_2
---- hash rowsort
30 tuples hashing to aae26346ea8b77e21281f2abe63c0266

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.b > t1.c AND (t1.e > t1.c OR t1.e < t1.d) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.c AS col_2
---- hash rowsort
9 tuples hashing to e18fbd84f978f4686ff46e6767805336

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.b > t1.c AND (t1.e > t1.c OR t1.e < t1.d) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.c AS col_2 ORDER BY col_1, col_2
---- hash rowsort
9 tuples hashing to e18fbd84f978f4686ff46e6767805336

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND t1.b > t1.c AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.c AS col_2
---- hash rowsort
9 tuples hashing to e18fbd84f978f4686ff46e6767805336

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND t1.b > t1.c AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.c AS col_2 ORDER BY col_2, col_1
---- hash rowsort
9 tuples hashing to e18fbd84f978f4686ff46e6767805336

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.e > t1.c OR t1.e < t1.d) AND t1.b > t1.c RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.c AS col_2
---- hash rowsort
9 tuples hashing to e18fbd84f978f4686ff46e6767805336

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.e > t1.c OR t1.e < t1.d) AND t1.b > t1.c RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.c AS col_2 ORDER BY col_1, col_2
---- hash rowsort
9 tuples hashing to e18fbd84f978f4686ff46e6767805336

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.b > t1.c RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.c AS col_2
---- hash rowsort
9 tuples hashing to e18fbd84f978f4686ff46e6767805336

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.b > t1.c RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.c AS col_2 ORDER BY col_1, col_2
---- hash rowsort
9 tuples hashing to e18fbd84f978f4686ff46e6767805336

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) RETURN abs(t1.a) AS col_1, t1.b - t1.c AS col_2, t1.a AS col_3, t1.d - t1.e AS col_4, t1.a + t1.b * 2 AS col_5, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_6
---- hash rowsort
17 tuples hashing to 3be3307b0e0eb44f8b0f04f87f4143a1

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) RETURN abs(t1.a) AS col_1, t1.b - t1.c AS col_2, t1.a AS col_3, t1.d - t1.e AS col_4, t1.a + t1.b * 2 AS col_5, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_6 ORDER BY col_5, col_4, col_3, col_6, col_2, col_1
---- hash rowsort
17 tuples hashing to 3be3307b0e0eb44f8b0f04f87f4143a1

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.b > t1.c RETURN t1.e AS col_1, abs(t1.b - t1.c) AS col_2
---- hash rowsort
15 tuples hashing to cb35c15d7e6b47bea3efc0c18a1204e9

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.b > t1.c RETURN t1.e AS col_1, abs(t1.b - t1.c) AS col_2 ORDER BY col_1, col_2
---- hash rowsort
15 tuples hashing to cb35c15d7e6b47bea3efc0c18a1204e9

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.e AS col_1, abs(t1.b - t1.c) AS col_2
---- hash rowsort
15 tuples hashing to cb35c15d7e6b47bea3efc0c18a1204e9

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.e AS col_1, abs(t1.b - t1.c) AS col_2 ORDER BY col_2, col_1
---- hash rowsort
15 tuples hashing to cb35c15d7e6b47bea3efc0c18a1204e9

-STATEMENT MATCH (t1:t1) RETURN t1.b - t1.c AS col_1, t1.c AS col_2, t1.d - t1.e AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4
---- hash rowsort
30 tuples hashing to 07862090d27a9db9ab7090ebaaa7406a

-STATEMENT MATCH (t1:t1) RETURN t1.b - t1.c AS col_1, t1.c AS col_2, t1.d - t1.e AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4 ORDER BY col_1, col_2, col_4
---- hash rowsort
30 tuples hashing to 07862090d27a9db9ab7090ebaaa7406a

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.d - t1.e AS col_2
---- hash rowsort
14 tuples hashing to dacd5810c0d7ccff31f735ce660f8e90

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.d - t1.e AS col_2 ORDER BY col_2, col_1
---- hash rowsort
14 tuples hashing to dacd5810c0d7ccff31f735ce660f8e90

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.b > t1.c RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.d - t1.e AS col_2
---- hash rowsort
14 tuples hashing to dacd5810c0d7ccff31f735ce660f8e90

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.b > t1.c RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.d - t1.e AS col_2 ORDER BY col_1, col_2
---- hash rowsort
14 tuples hashing to dacd5810c0d7ccff31f735ce660f8e90

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) RETURN t1.c - t1.d AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5, t1.a - t1.b AS col_6, t1.d - t1.e AS col_7
---- hash rowsort
3 tuples hashing to 36ec28df630c9710c5661a1aa87cb486

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) RETURN t1.c - t1.d AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5, t1.a - t1.b AS col_6, t1.d - t1.e AS col_7 ORDER BY col_2, col_6, col_1, col_7, col_4, col_5
---- hash rowsort
3 tuples hashing to 36ec28df630c9710c5661a1aa87cb486

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b RETURN t1.d AS col_1, t1.c AS col_2
---- hash rowsort
17 tuples hashing to a1b967905b56cc832158ad15962a643c

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b RETURN t1.d AS col_1, t1.c AS col_2 ORDER BY col_2, col_1
---- hash rowsort
17 tuples hashing to a1b967905b56cc832158ad15962a643c

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.c > t1.d OR t1.a > t1.b RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.e AS col_2, t1.d - t1.e AS col_3
---- hash rowsort
25 tuples hashing to 241dcbe326d0c1903875caff29d3f486

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.c > t1.d OR t1.a > t1.b RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.e AS col_2, t1.d - t1.e AS col_3 ORDER BY col_3, col_2
---- hash rowsort
25 tuples hashing to 241dcbe326d0c1903875caff29d3f486

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.a > t1.b OR t1.c > t1.d RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.e AS col_2, t1.d - t1.e AS col_3
---- hash rowsort
25 tuples hashing to 241dcbe326d0c1903875caff29d3f486

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.a > t1.b OR t1.c > t1.d RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.e AS col_2, t1.d - t1.e AS col_3 ORDER BY col_2, col_1
---- hash rowsort
25 tuples hashing to 241dcbe326d0c1903875caff29d3f486

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.c > t1.d RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.e AS col_2, t1.d - t1.e AS col_3
---- hash rowsort
25 tuples hashing to 241dcbe326d0c1903875caff29d3f486

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.c > t1.d RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.e AS col_2, t1.d - t1.e AS col_3 ORDER BY col_2, col_1, col_3
---- hash rowsort
25 tuples hashing to 241dcbe326d0c1903875caff29d3f486

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.e AS col_1, abs(t1.b - t1.c) AS col_2
---- hash rowsort
23 tuples hashing to cabfa8d4539ca6b4f80fa6163c666cce

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.e AS col_1, abs(t1.b - t1.c) AS col_2 ORDER BY col_2, col_1
---- hash rowsort
23 tuples hashing to cabfa8d4539ca6b4f80fa6163c666cce

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.b - t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2
---- 1
-1|1067

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.b - t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2 ORDER BY col_2, col_1
---- 1
-1|1067

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND t1.d > t1.e AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.c AS col_1, t1.a - t1.b AS col_2, t1.b - t1.c AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4
---- 2
224|-3|-1|0
247|-4|2|0

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND t1.d > t1.e AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.c AS col_1, t1.a - t1.b AS col_2, t1.b - t1.c AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4 ORDER BY col_3, col_2, col_4, col_1
---- 2
224|-3|-1|0
247|-4|2|0

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e > t1.a AND t1.e < t1.b) AND t1.d > t1.e RETURN t1.c AS col_1, t1.a - t1.b AS col_2, t1.b - t1.c AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4
---- 2
224|-3|-1|0
247|-4|2|0

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e > t1.a AND t1.e < t1.b) AND t1.d > t1.e RETURN t1.c AS col_1, t1.a - t1.b AS col_2, t1.b - t1.c AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4 ORDER BY col_4, col_2, col_3
---- 2
224|-3|-1|0
247|-4|2|0

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.d > t1.e RETURN t1.c AS col_1, t1.a - t1.b AS col_2, t1.b - t1.c AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4
---- 2
224|-3|-1|0
247|-4|2|0

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.d > t1.e RETURN t1.c AS col_1, t1.a - t1.b AS col_2, t1.b - t1.c AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4 ORDER BY col_3, col_2, col_1, col_4
---- 2
224|-3|-1|0
247|-4|2|0

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.d AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, t1.b AS col_6
---- hash rowsort
28 tuples hashing to e31984607cdf6ff4640d14d3d9473720

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.d AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, t1.b AS col_6 ORDER BY col_2, col_5, col_6, col_1, col_3, col_4
---- hash rowsort
28 tuples hashing to e31984607cdf6ff4640d14d3d9473720

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.c > t1.d OR t1.d > t1.e RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4
---- hash rowsort
21 tuples hashing to 7b429b731ffc2d6828c13b5243bbfe2d

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.c > t1.d OR t1.d > t1.e RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4 ORDER BY col_1, col_4, col_2, col_3
---- hash rowsort
21 tuples hashing to 7b429b731ffc2d6828c13b5243bbfe2d

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR t1.c > t1.d OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4
---- hash rowsort
21 tuples hashing to 7b429b731ffc2d6828c13b5243bbfe2d

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR t1.c > t1.d OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4 ORDER BY col_1, col_3
---- hash rowsort
21 tuples hashing to 7b429b731ffc2d6828c13b5243bbfe2d

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND t1.a > t1.b AND t1.c > t1.d RETURN t1.d AS col_1, t1.c - t1.d AS col_2, t1.c AS col_3, abs(t1.a) AS col_4, t1.a - t1.b AS col_5
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND t1.a > t1.b AND t1.c > t1.d RETURN t1.d AS col_1, t1.c - t1.d AS col_2, t1.c AS col_3, abs(t1.a) AS col_4, t1.a - t1.b AS col_5 ORDER BY col_1, col_4, col_2
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND t1.c > t1.d AND t1.a > t1.b RETURN t1.d AS col_1, t1.c - t1.d AS col_2, t1.c AS col_3, abs(t1.a) AS col_4, t1.a - t1.b AS col_5
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND t1.c > t1.d AND t1.a > t1.b RETURN t1.d AS col_1, t1.c - t1.d AS col_2, t1.c AS col_3, abs(t1.a) AS col_4, t1.a - t1.b AS col_5 ORDER BY col_2, col_1, col_5
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND t1.a > t1.b AND t1.b > t1.c RETURN t1.d AS col_1, t1.c - t1.d AS col_2, t1.c AS col_3, abs(t1.a) AS col_4, t1.a - t1.b AS col_5
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND t1.a > t1.b AND t1.b > t1.c RETURN t1.d AS col_1, t1.c - t1.d AS col_2, t1.c AS col_3, abs(t1.a) AS col_4, t1.a - t1.b AS col_5 ORDER BY col_4, col_5, col_1, col_2, col_3
---- 0


-STATEMENT MATCH (t1:t1) RETURN t1.a - t1.b AS col_1, t1.c AS col_2
---- hash rowsort
30 tuples hashing to 6e429924a0921c1dece0ca0dbe37acdf

-STATEMENT MATCH (t1:t1) RETURN t1.a - t1.b AS col_1, t1.c AS col_2 ORDER BY col_2, col_1
---- hash rowsort
30 tuples hashing to 6e429924a0921c1dece0ca0dbe37acdf

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND NOT (t1.d >= 110 AND t1.d <= 150) AND t1.a > t1.b RETURN t1.e AS col_1
---- 3
197
227
230

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND NOT (t1.d >= 110 AND t1.d <= 150) AND t1.a > t1.b RETURN t1.e AS col_1 ORDER BY col_1
---- 3
197
227
230

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND t1.a > t1.b AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.e AS col_1
---- 3
197
227
230

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND t1.a > t1.b AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.e AS col_1 ORDER BY col_1
---- 3
197
227
230

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND NOT (t1.d >= 110 AND t1.d <= 150) AND t1.a > t1.b RETURN t1.a + t1.b * 2 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3
---- hash rowsort
7 tuples hashing to 46fba0cfd195e857073f018503f70144

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND NOT (t1.d >= 110 AND t1.d <= 150) AND t1.a > t1.b RETURN t1.a + t1.b * 2 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3 ORDER BY col_1, col_3
---- hash rowsort
7 tuples hashing to 46fba0cfd195e857073f018503f70144

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND t1.a > t1.b AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3
---- hash rowsort
7 tuples hashing to 46fba0cfd195e857073f018503f70144

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND t1.a > t1.b AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3 ORDER BY col_3, col_2, col_1
---- hash rowsort
7 tuples hashing to 46fba0cfd195e857073f018503f70144

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.a > t1.b RETURN t1.a + t1.b * 2 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3
---- hash rowsort
7 tuples hashing to 46fba0cfd195e857073f018503f70144

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.a > t1.b RETURN t1.a + t1.b * 2 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3 ORDER BY col_1, col_2, col_3
---- hash rowsort
7 tuples hashing to 46fba0cfd195e857073f018503f70144

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.b > t1.c RETURN abs(t1.a) AS col_1, t1.a + t1.b * 2 AS col_2, t1.d AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5
---- hash rowsort
6 tuples hashing to ff7a47e2effec928f49caa98e41fbf53

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.b > t1.c RETURN abs(t1.a) AS col_1, t1.a + t1.b * 2 AS col_2, t1.d AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5 ORDER BY col_5, col_3, col_2, col_4, col_1
---- hash rowsort
6 tuples hashing to ff7a47e2effec928f49caa98e41fbf53

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN abs(t1.a) AS col_1, t1.a + t1.b * 2 AS col_2, t1.d AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5
---- hash rowsort
6 tuples hashing to ff7a47e2effec928f49caa98e41fbf53

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN abs(t1.a) AS col_1, t1.a + t1.b * 2 AS col_2, t1.d AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5 ORDER BY col_1, col_3, col_4, col_5, col_2
---- hash rowsort
6 tuples hashing to ff7a47e2effec928f49caa98e41fbf53

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a + t1.b * 2 AS col_1, t1.a - t1.b AS col_2, t1.b AS col_3, t1.c - t1.d AS col_4, t1.e AS col_5, t1.b - t1.c AS col_6
---- hash rowsort
26 tuples hashing to c20ce57d3bbde4501483ab2ea2d853c5

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a + t1.b * 2 AS col_1, t1.a - t1.b AS col_2, t1.b AS col_3, t1.c - t1.d AS col_4, t1.e AS col_5, t1.b - t1.c AS col_6 ORDER BY col_1, col_2, col_6, col_4, col_5, col_3
---- hash rowsort
26 tuples hashing to c20ce57d3bbde4501483ab2ea2d853c5

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a + t1.b * 2 AS col_1, t1.a - t1.b AS col_2, t1.b AS col_3, t1.c - t1.d AS col_4, t1.e AS col_5, t1.b - t1.c AS col_6
---- hash rowsort
26 tuples hashing to c20ce57d3bbde4501483ab2ea2d853c5

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a + t1.b * 2 AS col_1, t1.a - t1.b AS col_2, t1.b AS col_3, t1.c - t1.d AS col_4, t1.e AS col_5, t1.b - t1.c AS col_6 ORDER BY col_3, col_1, col_5, col_6, col_4
---- hash rowsort
26 tuples hashing to c20ce57d3bbde4501483ab2ea2d853c5

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c RETURN t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.d AS col_3
---- hash rowsort
13 tuples hashing to 96d628587b05021711e636831fb1226e

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c RETURN t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.d AS col_3 ORDER BY col_1, col_2
---- hash rowsort
13 tuples hashing to 96d628587b05021711e636831fb1226e

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.e AS col_2, t1.c - t1.d AS col_3
---- hash rowsort
30 tuples hashing to ff40c38c1c2a4e69dc1ecb22894659f8

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.e AS col_2, t1.c - t1.d AS col_3 ORDER BY col_3, col_2
---- hash rowsort
30 tuples hashing to ff40c38c1c2a4e69dc1ecb22894659f8

-STATEMENT MATCH (t1:t1) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, abs(t1.b - t1.c) AS col_2
---- hash rowsort
30 tuples hashing to d6f5a04eabc50e3b8da80548b48f264c

-STATEMENT MATCH (t1:t1) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, abs(t1.b - t1.c) AS col_2 ORDER BY col_2, col_1
---- hash rowsort
30 tuples hashing to d6f5a04eabc50e3b8da80548b48f264c

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.d - t1.e AS col_1
---- 8
-1
-1
-4
1
1
3



-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.d - t1.e AS col_1 ORDER BY col_1
---- 8
-1
-1
-4
1
1
3



-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.d - t1.e AS col_1
---- 8
-1
-1
-4
1
1
3



-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.d - t1.e AS col_1 ORDER BY col_1
---- 8
-1
-1
-4
1
1
3



-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND t1.a > t1.b AND t1.d > t1.e RETURN t1.a - t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.b AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, t1.d - t1.e AS col_6
---- hash rowsort
3 tuples hashing to 17c53007ab36ea380c2c286e078e5d87

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND t1.a > t1.b AND t1.d > t1.e RETURN t1.a - t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.b AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, t1.d - t1.e AS col_6 ORDER BY col_4, col_6, col_1
---- hash rowsort
3 tuples hashing to 17c53007ab36ea380c2c286e078e5d87

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND t1.d > t1.e AND t1.c > t1.d RETURN t1.a - t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.b AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, t1.d - t1.e AS col_6
---- hash rowsort
3 tuples hashing to 17c53007ab36ea380c2c286e078e5d87

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND t1.d > t1.e AND t1.c > t1.d RETURN t1.a - t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.b AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, t1.d - t1.e AS col_6 ORDER BY col_5, col_1, col_4, col_6, col_3, col_2
---- hash rowsort
3 tuples hashing to 17c53007ab36ea380c2c286e078e5d87

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND t1.d > t1.e AND t1.a > t1.b RETURN t1.a - t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.b AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, t1.d - t1.e AS col_6
---- hash rowsort
3 tuples hashing to 17c53007ab36ea380c2c286e078e5d87

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND t1.d > t1.e AND t1.a > t1.b RETURN t1.a - t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.b AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, t1.d - t1.e AS col_6 ORDER BY col_1, col_4, col_5
---- hash rowsort
3 tuples hashing to 17c53007ab36ea380c2c286e078e5d87

-STATEMENT MATCH (t1:t1) RETURN t1.c - t1.d AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.d AS col_4
---- hash rowsort
30 tuples hashing to 746b09ad2a19b1fac2c714bca47edd80

-STATEMENT MATCH (t1:t1) RETURN t1.c - t1.d AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.d AS col_4 ORDER BY col_2, col_1
---- hash rowsort
30 tuples hashing to 746b09ad2a19b1fac2c714bca47edd80

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a - t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2
---- hash rowsort
10 tuples hashing to 92db286438e1a83f0e6c91f86f4c49fd

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a - t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2 ORDER BY col_1, col_2
---- hash rowsort
10 tuples hashing to 92db286438e1a83f0e6c91f86f4c49fd

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a - t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2
---- hash rowsort
10 tuples hashing to 92db286438e1a83f0e6c91f86f4c49fd

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a - t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2 ORDER BY col_1, col_2
---- hash rowsort
10 tuples hashing to 92db286438e1a83f0e6c91f86f4c49fd

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, abs(t1.a) AS col_2
---- hash rowsort
11 tuples hashing to 5a69bb44147ee819d934f1d387083d8a

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, abs(t1.a) AS col_2 ORDER BY col_1, col_2
---- hash rowsort
11 tuples hashing to 5a69bb44147ee819d934f1d387083d8a

-STATEMENT MATCH (t1:t1) RETURN t1.d AS col_1
---- hash rowsort
30 tuples hashing to 169a721efb38857a8de46fcd1500025a

-STATEMENT MATCH (t1:t1) RETURN t1.d AS col_1 ORDER BY col_1
---- hash rowsort
30 tuples hashing to 169a721efb38857a8de46fcd1500025a

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.c - t1.d AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2
---- hash rowsort
26 tuples hashing to f9fe40544c61e79e6ae419400d5989f2

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.c - t1.d AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2 ORDER BY col_1, col_2
---- hash rowsort
26 tuples hashing to f9fe40544c61e79e6ae419400d5989f2

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND NOT (t1.d >= 110 AND t1.d <= 150) AND t1.a > t1.b RETURN t1.a AS col_1, t1.d - t1.e AS col_2, t1.c - t1.d AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, t1.b AS col_5, t1.c AS col_6, abs(t1.b - t1.c) AS col_7
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND NOT (t1.d >= 110 AND t1.d <= 150) AND t1.a > t1.b RETURN t1.a AS col_1, t1.d - t1.e AS col_2, t1.c - t1.d AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, t1.b AS col_5, t1.c AS col_6, abs(t1.b - t1.c) AS col_7 ORDER BY col_3, col_5, col_4, col_7, col_6
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND t1.a > t1.b AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a AS col_1, t1.d - t1.e AS col_2, t1.c - t1.d AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, t1.b AS col_5, t1.c AS col_6, abs(t1.b - t1.c) AS col_7
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND t1.a > t1.b AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a AS col_1, t1.d - t1.e AS col_2, t1.c - t1.d AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, t1.b AS col_5, t1.c AS col_6, abs(t1.b - t1.c) AS col_7 ORDER BY col_5, col_6, col_3, col_1, col_4, col_7, col_2
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a AS col_1, t1.d - t1.e AS col_2, t1.c - t1.d AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, t1.b AS col_5, t1.c AS col_6, abs(t1.b - t1.c) AS col_7
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a AS col_1, t1.d - t1.e AS col_2, t1.c - t1.d AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, t1.b AS col_5, t1.c AS col_6, abs(t1.b - t1.c) AS col_7 ORDER BY col_6, col_4
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.e > t1.a AND t1.e < t1.b) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a AS col_1, t1.d - t1.e AS col_2, t1.c - t1.d AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, t1.b AS col_5, t1.c AS col_6, abs(t1.b - t1.c) AS col_7
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.e > t1.a AND t1.e < t1.b) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a AS col_1, t1.d - t1.e AS col_2, t1.c - t1.d AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, t1.b AS col_5, t1.c AS col_6, abs(t1.b - t1.c) AS col_7 ORDER BY col_1, col_4, col_3, col_7, col_5
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR NOT (t1.d >= 110 AND t1.d <= 150) OR t1.c > t1.d RETURN abs(t1.a) AS col_1
---- hash rowsort
24 tuples hashing to 23f1fc77fb5b86515652f9873b16e3d5

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR NOT (t1.d >= 110 AND t1.d <= 150) OR t1.c > t1.d RETURN abs(t1.a) AS col_1 ORDER BY col_1
---- hash rowsort
24 tuples hashing to 23f1fc77fb5b86515652f9873b16e3d5

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR t1.c > t1.d OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN abs(t1.a) AS col_1
---- hash rowsort
24 tuples hashing to 23f1fc77fb5b86515652f9873b16e3d5

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR t1.c > t1.d OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN abs(t1.a) AS col_1 ORDER BY col_1
---- hash rowsort
24 tuples hashing to 23f1fc77fb5b86515652f9873b16e3d5

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR t1.d > t1.e OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN abs(t1.a) AS col_1
---- hash rowsort
24 tuples hashing to 23f1fc77fb5b86515652f9873b16e3d5

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR t1.d > t1.e OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN abs(t1.a) AS col_1 ORDER BY col_1
---- hash rowsort
24 tuples hashing to 23f1fc77fb5b86515652f9873b16e3d5

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a + t1.b * 2 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2
---- hash rowsort
25 tuples hashing to dcd5b5784df088d48900687d4319f5c1

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a + t1.b * 2 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2 ORDER BY col_1, col_2
---- hash rowsort
25 tuples hashing to dcd5b5784df088d48900687d4319f5c1

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2
---- hash rowsort
25 tuples hashing to dcd5b5784df088d48900687d4319f5c1

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2 ORDER BY col_1, col_2
---- hash rowsort
25 tuples hashing to dcd5b5784df088d48900687d4319f5c1

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.e > t1.c OR t1.e < t1.d) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2
---- hash rowsort
25 tuples hashing to dcd5b5784df088d48900687d4319f5c1

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.e > t1.c OR t1.e < t1.d) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2 ORDER BY col_1, col_2
---- hash rowsort
25 tuples hashing to dcd5b5784df088d48900687d4319f5c1

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.d - t1.e AS col_1, t1.a + t1.b * 2 AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.e AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5
---- 1
2|743|111|246|26

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.d - t1.e AS col_1, t1.a + t1.b * 2 AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.e AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5 ORDER BY col_5, col_4, col_3
---- 1
2|743|111|246|26

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e > t1.a AND t1.e < t1.b) AND t1.b > t1.c RETURN t1.d - t1.e AS col_1, t1.a + t1.b * 2 AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.e AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5
---- 1
2|743|111|246|26

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e > t1.a AND t1.e < t1.b) AND t1.b > t1.c RETURN t1.d - t1.e AS col_1, t1.a + t1.b * 2 AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.e AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5 ORDER BY col_1, col_2
---- 1
2|743|111|246|26

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND t1.b > t1.c AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.d - t1.e AS col_1, t1.a + t1.b * 2 AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.e AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5
---- 1
2|743|111|246|26

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND t1.b > t1.c AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.d - t1.e AS col_1, t1.a + t1.b * 2 AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.e AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5 ORDER BY col_1, col_2, col_5
---- 1
2|743|111|246|26

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.e > t1.a AND t1.e < t1.b) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.d - t1.e AS col_1, t1.a + t1.b * 2 AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.e AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5
---- 1
2|743|111|246|26

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.e > t1.a AND t1.e < t1.b) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.d - t1.e AS col_1, t1.a + t1.b * 2 AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.e AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5 ORDER BY col_2, col_3, col_1
---- 1
2|743|111|246|26

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.e > t1.c OR t1.e < t1.d) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.c - t1.d AS col_2, t1.c AS col_3
---- hash rowsort
5 tuples hashing to 20cea9b1e26190fa19ea3589c0dee2ba

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.e > t1.c OR t1.e < t1.d) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.c - t1.d AS col_2, t1.c AS col_3 ORDER BY col_2, col_3
---- hash rowsort
5 tuples hashing to 20cea9b1e26190fa19ea3589c0dee2ba

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.a > t1.b AND (t1.e > t1.c OR t1.e < t1.d) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.c - t1.d AS col_2, t1.c AS col_3
---- hash rowsort
5 tuples hashing to 20cea9b1e26190fa19ea3589c0dee2ba

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.a > t1.b AND (t1.e > t1.c OR t1.e < t1.d) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.c - t1.d AS col_2, t1.c AS col_3 ORDER BY col_3, col_2, col_1
---- hash rowsort
5 tuples hashing to 20cea9b1e26190fa19ea3589c0dee2ba

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.a > t1.b RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.c - t1.d AS col_2, t1.c AS col_3
---- hash rowsort
5 tuples hashing to 20cea9b1e26190fa19ea3589c0dee2ba

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.a > t1.b RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.c - t1.d AS col_2, t1.c AS col_3 ORDER BY col_2, col_1
---- hash rowsort
5 tuples hashing to 20cea9b1e26190fa19ea3589c0dee2ba

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND t1.a > t1.b AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.c - t1.d AS col_2, t1.c AS col_3
---- hash rowsort
5 tuples hashing to 20cea9b1e26190fa19ea3589c0dee2ba

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND t1.a > t1.b AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.c - t1.d AS col_2, t1.c AS col_3 ORDER BY col_1, col_2
---- hash rowsort
5 tuples hashing to 20cea9b1e26190fa19ea3589c0dee2ba

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.e > t1.c OR t1.e < t1.d) RETURN t1.e AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.a - t1.b AS col_4, t1.d - t1.e AS col_5, t1.b - t1.c AS col_6, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_7
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.e > t1.c OR t1.e < t1.d) RETURN t1.e AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.a - t1.b AS col_4, t1.d - t1.e AS col_5, t1.b - t1.c AS col_6, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_7 ORDER BY col_1, col_6, col_5
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.e > t1.c OR t1.e < t1.d) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.e AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.a - t1.b AS col_4, t1.d - t1.e AS col_5, t1.b - t1.c AS col_6, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_7
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.e > t1.c OR t1.e < t1.d) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.e AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.a - t1.b AS col_4, t1.d - t1.e AS col_5, t1.b - t1.c AS col_6, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_7 ORDER BY col_4, col_6
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.e AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.a - t1.b AS col_4, t1.d - t1.e AS col_5, t1.b - t1.c AS col_6, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_7
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.e AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.a - t1.b AS col_4, t1.d - t1.e AS col_5, t1.b - t1.c AS col_6, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_7 ORDER BY col_4, col_1, col_7, col_2, col_5
---- 0


-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a + t1.b * 2 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.b AS col_4, t1.c - t1.d AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_6
---- hash rowsort
28 tuples hashing to b8f4c948f04ae95904a54c7ecf8f1441

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a + t1.b * 2 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.b AS col_4, t1.c - t1.d AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_6 ORDER BY col_2, col_6
---- hash rowsort
28 tuples hashing to b8f4c948f04ae95904a54c7ecf8f1441

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.c > t1.d RETURN t1.a - t1.b AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.a AS col_4
---- hash rowsort
5 tuples hashing to e5b274399969a4489a0918946194021c

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.c > t1.d RETURN t1.a - t1.b AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.a AS col_4 ORDER BY col_4, col_2, col_3, col_1
---- hash rowsort
5 tuples hashing to e5b274399969a4489a0918946194021c

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a - t1.b AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.a AS col_4
---- hash rowsort
5 tuples hashing to e5b274399969a4489a0918946194021c

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a - t1.b AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.a AS col_4 ORDER BY col_3, col_4, col_2, col_1
---- hash rowsort
5 tuples hashing to e5b274399969a4489a0918946194021c

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.d - t1.e AS col_5, t1.a - t1.b AS col_6
---- hash rowsort
8 tuples hashing to ca3c93506e17359073b5710039fd37ae

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.d - t1.e AS col_5, t1.a - t1.b AS col_6 ORDER BY col_2, col_6, col_1, col_4, col_5
---- hash rowsort
8 tuples hashing to ca3c93506e17359073b5710039fd37ae

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND t1.c > t1.d RETURN t1.a AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.d - t1.e AS col_5, t1.a - t1.b AS col_6
---- hash rowsort
8 tuples hashing to ca3c93506e17359073b5710039fd37ae

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND t1.c > t1.d RETURN t1.a AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.d - t1.e AS col_5, t1.a - t1.b AS col_6 ORDER BY col_6, col_1, col_2, col_5, col_3, col_4
---- hash rowsort
8 tuples hashing to ca3c93506e17359073b5710039fd37ae

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.d > t1.e AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.b AS col_1, t1.b - t1.c AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.d > t1.e AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.b AS col_1, t1.b - t1.c AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3 ORDER BY col_2, col_1
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.d > t1.e AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.b AS col_1, t1.b - t1.c AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.d > t1.e AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.b AS col_1, t1.b - t1.c AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3 ORDER BY col_2, col_1
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.b AS col_1, t1.b - t1.c AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.b AS col_1, t1.b - t1.c AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3 ORDER BY col_3, col_1, col_2
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND t1.b > t1.c AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN abs(t1.a) AS col_1, abs(t1.b - t1.c) AS col_2, t1.d - t1.e AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND t1.b > t1.c AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN abs(t1.a) AS col_1, abs(t1.b - t1.c) AS col_2, t1.d - t1.e AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5 ORDER BY col_1, col_4, col_2
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND t1.c > t1.d AND t1.b > t1.c RETURN abs(t1.a) AS col_1, abs(t1.b - t1.c) AS col_2, t1.d - t1.e AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND t1.c > t1.d AND t1.b > t1.c RETURN abs(t1.a) AS col_1, abs(t1.b - t1.c) AS col_2, t1.d - t1.e AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5 ORDER BY col_3, col_5
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND t1.c > t1.d AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN abs(t1.a) AS col_1, abs(t1.b - t1.c) AS col_2, t1.d - t1.e AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND t1.c > t1.d AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN abs(t1.a) AS col_1, abs(t1.b - t1.c) AS col_2, t1.d - t1.e AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5 ORDER BY col_4, col_3, col_1, col_2
---- 0


-STATEMENT MATCH (t1:t1) RETURN t1.a - t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.b AS col_4, abs(t1.a) AS col_5
---- hash rowsort
30 tuples hashing to 1b1550ce6f1c4cf9076f497c85f31201

-STATEMENT MATCH (t1:t1) RETURN t1.a - t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.b AS col_4, abs(t1.a) AS col_5 ORDER BY col_3, col_2, col_4, col_1, col_5
---- hash rowsort
30 tuples hashing to 1b1550ce6f1c4cf9076f497c85f31201

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.c AS col_3
---- hash rowsort
8 tuples hashing to 0c53eb204e07cf74f548683dc0ab4656

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.c AS col_3 ORDER BY col_1, col_2, col_3
---- hash rowsort
8 tuples hashing to 0c53eb204e07cf74f548683dc0ab4656

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.b AS col_2
---- hash rowsort
17 tuples hashing to 5d338a9ebf9ddb3c72dc89eb65b687c6

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.b AS col_2 ORDER BY col_2, col_1
---- hash rowsort
17 tuples hashing to 5d338a9ebf9ddb3c72dc89eb65b687c6

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a + t1.b * 2 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, abs(t1.b - t1.c) AS col_4, t1.b - t1.c AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_6, abs(t1.a) AS col_7
---- hash rowsort
17 tuples hashing to 8753a74c6c3016be41f58f809c138c99

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a + t1.b * 2 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, abs(t1.b - t1.c) AS col_4, t1.b - t1.c AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_6, abs(t1.a) AS col_7 ORDER BY col_3, col_7, col_6, col_1
---- hash rowsort
17 tuples hashing to 8753a74c6c3016be41f58f809c138c99

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e RETURN t1.b - t1.c AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, abs(t1.a) AS col_3, abs(t1.b - t1.c) AS col_4, t1.d AS col_5, t1.d - t1.e AS col_6, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_7
---- hash rowsort
11 tuples hashing to f74a17597a51a27cb8d52e6d651824a8

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e RETURN t1.b - t1.c AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, abs(t1.a) AS col_3, abs(t1.b - t1.c) AS col_4, t1.d AS col_5, t1.d - t1.e AS col_6, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_7 ORDER BY col_1, col_4, col_5
---- hash rowsort
11 tuples hashing to f74a17597a51a27cb8d52e6d651824a8

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.b - t1.c AS col_1
---- 2
-1
4

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.b - t1.c AS col_1 ORDER BY col_1
---- 2
-1
4

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.a AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5, t1.c - t1.d AS col_6, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_7
---- hash rowsort
10 tuples hashing to bf6372bfaa44f73c0f583a0700e6020f

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.a AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5, t1.c - t1.d AS col_6, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_7 ORDER BY col_5, col_6, col_1, col_7, col_3, col_2
---- hash rowsort
10 tuples hashing to bf6372bfaa44f73c0f583a0700e6020f

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.a AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5, t1.c - t1.d AS col_6, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_7
---- hash rowsort
10 tuples hashing to bf6372bfaa44f73c0f583a0700e6020f

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.a AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5, t1.c - t1.d AS col_6, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_7 ORDER BY col_2, col_4, col_7, col_3, col_1, col_6, col_5
---- hash rowsort
10 tuples hashing to bf6372bfaa44f73c0f583a0700e6020f

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, abs(t1.a) AS col_2, t1.a AS col_3, t1.b - t1.c AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, t1.c - t1.d AS col_6
---- hash rowsort
2 tuples hashing to 6fa4ae3ff283b4f7d9825b4b2d067415

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, abs(t1.a) AS col_2, t1.a AS col_3, t1.b - t1.c AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, t1.c - t1.d AS col_6 ORDER BY col_6, col_1, col_4, col_3
---- hash rowsort
2 tuples hashing to 6fa4ae3ff283b4f7d9825b4b2d067415

-STATEMENT MATCH (t1:t1) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, abs(t1.b - t1.c) AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, t1.b - t1.c AS col_5
---- hash rowsort
30 tuples hashing to 313bbc0b791d1bb0d9b26be4e9e696f8

-STATEMENT MATCH (t1:t1) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, abs(t1.b - t1.c) AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, t1.b - t1.c AS col_5 ORDER BY col_2, col_3, col_1, col_5
---- hash rowsort
30 tuples hashing to 313bbc0b791d1bb0d9b26be4e9e696f8

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.a > t1.b AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.d AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.c - t1.d AS col_5, t1.a AS col_6
---- 0


-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.a > t1.b AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.d AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.c - t1.d AS col_5, t1.a AS col_6 ORDER BY col_2, col_6, col_4, col_1, col_5, col_3
---- 0


-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND t1.a > t1.b RETURN t1.a + t1.b * 2 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.d AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.c - t1.d AS col_5, t1.a AS col_6
---- 0


-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND t1.a > t1.b RETURN t1.a + t1.b * 2 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.d AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.c - t1.d AS col_5, t1.a AS col_6 ORDER BY col_1, col_2, col_5, col_3, col_6
---- 0


-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.a > t1.b AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.d AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.c - t1.d AS col_5, t1.a AS col_6
---- 0


-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.a > t1.b AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.d AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.c - t1.d AS col_5, t1.a AS col_6 ORDER BY col_2, col_1
---- 0


-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a + t1.b * 2 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.d AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.c - t1.d AS col_5, t1.a AS col_6
---- 0


-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a + t1.b * 2 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.d AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.c - t1.d AS col_5, t1.a AS col_6 ORDER BY col_3, col_4
---- 0


-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 AS col_1, t1.a - t1.b AS col_2, t1.c - t1.d AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.e AS col_5, t1.c AS col_6
---- hash rowsort
27 tuples hashing to cc30df9c14f53527405a1c239bb87c59

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 AS col_1, t1.a - t1.b AS col_2, t1.c - t1.d AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.e AS col_5, t1.c AS col_6 ORDER BY col_3, col_1
---- hash rowsort
27 tuples hashing to cc30df9c14f53527405a1c239bb87c59

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 AS col_1, t1.a - t1.b AS col_2, t1.c - t1.d AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.e AS col_5, t1.c AS col_6
---- hash rowsort
27 tuples hashing to cc30df9c14f53527405a1c239bb87c59

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 AS col_1, t1.a - t1.b AS col_2, t1.c - t1.d AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.e AS col_5, t1.c AS col_6 ORDER BY col_2, col_1, col_5
---- hash rowsort
27 tuples hashing to cc30df9c14f53527405a1c239bb87c59

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a + t1.b * 2 AS col_1, t1.a - t1.b AS col_2, t1.c - t1.d AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.e AS col_5, t1.c AS col_6
---- hash rowsort
27 tuples hashing to cc30df9c14f53527405a1c239bb87c59

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a + t1.b * 2 AS col_1, t1.a - t1.b AS col_2, t1.c - t1.d AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.e AS col_5, t1.c AS col_6 ORDER BY col_6, col_1
---- hash rowsort
27 tuples hashing to cc30df9c14f53527405a1c239bb87c59

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR t1.d > t1.e OR (t1.e > t1.a AND t1.e < t1.b) RETURN t1.b - t1.c AS col_1, t1.c - t1.d AS col_2, t1.a + t1.b * 2 AS col_3
---- hash rowsort
19 tuples hashing to 7ece664b68f1d5dd5df20c38b45bf700

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR t1.d > t1.e OR (t1.e > t1.a AND t1.e < t1.b) RETURN t1.b - t1.c AS col_1, t1.c - t1.d AS col_2, t1.a + t1.b * 2 AS col_3 ORDER BY col_3, col_1
---- hash rowsort
19 tuples hashing to 7ece664b68f1d5dd5df20c38b45bf700

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR t1.c > t1.d OR t1.d > t1.e RETURN t1.b - t1.c AS col_1, t1.c - t1.d AS col_2, t1.a + t1.b * 2 AS col_3
---- hash rowsort
19 tuples hashing to 7ece664b68f1d5dd5df20c38b45bf700

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR t1.c > t1.d OR t1.d > t1.e RETURN t1.b - t1.c AS col_1, t1.c - t1.d AS col_2, t1.a + t1.b * 2 AS col_3 ORDER BY col_2, col_1
---- hash rowsort
19 tuples hashing to 7ece664b68f1d5dd5df20c38b45bf700

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR t1.d > t1.e OR t1.c > t1.d RETURN t1.b - t1.c AS col_1, t1.c - t1.d AS col_2, t1.a + t1.b * 2 AS col_3
---- hash rowsort
19 tuples hashing to 7ece664b68f1d5dd5df20c38b45bf700

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR t1.d > t1.e OR t1.c > t1.d RETURN t1.b - t1.c AS col_1, t1.c - t1.d AS col_2, t1.a + t1.b * 2 AS col_3 ORDER BY col_1, col_2
---- hash rowsort
19 tuples hashing to 7ece664b68f1d5dd5df20c38b45bf700

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR (t1.e > t1.a AND t1.e < t1.b) OR t1.d > t1.e RETURN t1.b - t1.c AS col_1, t1.c - t1.d AS col_2, t1.a + t1.b * 2 AS col_3
---- hash rowsort
19 tuples hashing to 7ece664b68f1d5dd5df20c38b45bf700

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR (t1.e > t1.a AND t1.e < t1.b) OR t1.d > t1.e RETURN t1.b - t1.c AS col_1, t1.c - t1.d AS col_2, t1.a + t1.b * 2 AS col_3 ORDER BY col_2, col_1, col_3
---- hash rowsort
19 tuples hashing to 7ece664b68f1d5dd5df20c38b45bf700

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) RETURN t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.a AS col_3, t1.d AS col_4, t1.a + t1.b * 2 AS col_5, t1.b AS col_6
---- hash rowsort
21 tuples hashing to e39bc4de3557e78f0c6cef58f371354c

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) RETURN t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.a AS col_3, t1.d AS col_4, t1.a + t1.b * 2 AS col_5, t1.b AS col_6 ORDER BY col_3, col_5, col_6, col_1, col_2
---- hash rowsort
21 tuples hashing to e39bc4de3557e78f0c6cef58f371354c

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.d - t1.e AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.a + t1.b * 2 AS col_3, t1.d AS col_4, t1.a AS col_5
---- hash rowsort
30 tuples hashing to 9ee680f1a55fdef2116dcd0ea18d205a

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.d - t1.e AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.a + t1.b * 2 AS col_3, t1.d AS col_4, t1.a AS col_5 ORDER BY col_5, col_1
---- hash rowsort
30 tuples hashing to 9ee680f1a55fdef2116dcd0ea18d205a

-STATEMENT MATCH (t1:t1) RETURN abs(t1.a) AS col_1, t1.b - t1.c AS col_2, t1.a - t1.b AS col_3, t1.a AS col_4, t1.d - t1.e AS col_5
---- hash rowsort
30 tuples hashing to e7378b047d883082b38d789060e0ef95

-STATEMENT MATCH (t1:t1) RETURN abs(t1.a) AS col_1, t1.b - t1.c AS col_2, t1.a - t1.b AS col_3, t1.a AS col_4, t1.d - t1.e AS col_5 ORDER BY col_4, col_5, col_3
---- hash rowsort
30 tuples hashing to e7378b047d883082b38d789060e0ef95

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.b AS col_1, t1.c - t1.d AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_6, abs(t1.a) AS col_7
---- hash rowsort
30 tuples hashing to 28f5a6cd0114ba9eae51109f58e52f03

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.b AS col_1, t1.c - t1.d AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_6, abs(t1.a) AS col_7 ORDER BY col_6, col_4, col_2, col_7, col_5, col_1
---- hash rowsort
30 tuples hashing to 28f5a6cd0114ba9eae51109f58e52f03

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.d > t1.e RETURN abs(t1.b - t1.c) AS col_1, t1.d - t1.e AS col_2, t1.b AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.c - t1.d AS col_5, t1.a AS col_6, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_7
---- hash rowsort
11 tuples hashing to 16093e77f72d0aa3214799803026d32d

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.d > t1.e RETURN abs(t1.b - t1.c) AS col_1, t1.d - t1.e AS col_2, t1.b AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.c - t1.d AS col_5, t1.a AS col_6, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_7 ORDER BY col_6, col_4, col_5, col_1, col_7, col_2, col_3
---- hash rowsort
11 tuples hashing to 16093e77f72d0aa3214799803026d32d

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) RETURN t1.b - t1.c AS col_1, t1.d - t1.e AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5, t1.a - t1.b AS col_6
---- hash rowsort
21 tuples hashing to 2fc84e3374819064bf08ed664bb0332f

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) RETURN t1.b - t1.c AS col_1, t1.d - t1.e AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5, t1.a - t1.b AS col_6 ORDER BY col_6, col_1, col_5
---- hash rowsort
21 tuples hashing to 2fc84e3374819064bf08ed664bb0332f

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR t1.a > t1.b OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5, t1.c - t1.d AS col_6, t1.a + t1.b * 2 AS col_7
---- hash rowsort
23 tuples hashing to 44ac998ab65c19bee4410d6d64048302

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR t1.a > t1.b OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5, t1.c - t1.d AS col_6, t1.a + t1.b * 2 AS col_7 ORDER BY col_5, col_6, col_4, col_3, col_1, col_7
---- hash rowsort
23 tuples hashing to 44ac998ab65c19bee4410d6d64048302

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.a > t1.b RETURN t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5, t1.c - t1.d AS col_6, t1.a + t1.b * 2 AS col_7
---- hash rowsort
23 tuples hashing to 44ac998ab65c19bee4410d6d64048302

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.a > t1.b RETURN t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5, t1.c - t1.d AS col_6, t1.a + t1.b * 2 AS col_7 ORDER BY col_5, col_6, col_1, col_2, col_7, col_3, col_4
---- hash rowsort
23 tuples hashing to 44ac998ab65c19bee4410d6d64048302

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.d > t1.e AND (t1.e > t1.a AND t1.e < t1.b) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.a - t1.b AS col_2, t1.b - t1.c AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.a + t1.b * 2 AS col_5, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_6
---- hash rowsort
2 tuples hashing to f2c764c5c74ab5249e4c5d2a30b60401

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.d > t1.e AND (t1.e > t1.a AND t1.e < t1.b) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.a - t1.b AS col_2, t1.b - t1.c AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.a + t1.b * 2 AS col_5, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_6 ORDER BY col_1, col_5
---- hash rowsort
2 tuples hashing to f2c764c5c74ab5249e4c5d2a30b60401

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e > t1.a AND t1.e < t1.b) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.a - t1.b AS col_2, t1.b - t1.c AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.a + t1.b * 2 AS col_5, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_6
---- hash rowsort
2 tuples hashing to f2c764c5c74ab5249e4c5d2a30b60401

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e > t1.a AND t1.e < t1.b) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.a - t1.b AS col_2, t1.b - t1.c AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.a + t1.b * 2 AS col_5, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_6 ORDER BY col_5, col_4
---- hash rowsort
2 tuples hashing to f2c764c5c74ab5249e4c5d2a30b60401

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND t1.d > t1.e AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.a - t1.b AS col_2, t1.b - t1.c AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.a + t1.b * 2 AS col_5, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_6
---- hash rowsort
2 tuples hashing to f2c764c5c74ab5249e4c5d2a30b60401

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND t1.d > t1.e AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.a - t1.b AS col_2, t1.b - t1.c AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.a + t1.b * 2 AS col_5, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_6 ORDER BY col_4, col_3
---- hash rowsort
2 tuples hashing to f2c764c5c74ab5249e4c5d2a30b60401

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e > t1.a AND t1.e < t1.b) AND t1.d > t1.e RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.a - t1.b AS col_2, t1.b - t1.c AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.a + t1.b * 2 AS col_5, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_6
---- hash rowsort
2 tuples hashing to f2c764c5c74ab5249e4c5d2a30b60401

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e > t1.a AND t1.e < t1.b) AND t1.d > t1.e RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.a - t1.b AS col_2, t1.b - t1.c AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.a + t1.b * 2 AS col_5, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_6 ORDER BY col_5, col_2, col_3
---- hash rowsort
2 tuples hashing to f2c764c5c74ab5249e4c5d2a30b60401

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a - t1.b AS col_1
---- hash rowsort
15 tuples hashing to 0462df69a372162bd2326b32559acd24

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a - t1.b AS col_1 ORDER BY col_1
---- hash rowsort
15 tuples hashing to 0462df69a372162bd2326b32559acd24

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a - t1.b AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, abs(t1.b - t1.c) AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5, t1.a + t1.b * 2 AS col_6, t1.b AS col_7
---- hash rowsort
8 tuples hashing to cb68d9d22476a7b85975e7ab215073a1

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a - t1.b AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, abs(t1.b - t1.c) AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5, t1.a + t1.b * 2 AS col_6, t1.b AS col_7 ORDER BY col_4, col_3, col_6, col_1
---- hash rowsort
8 tuples hashing to cb68d9d22476a7b85975e7ab215073a1

-STATEMENT MATCH (t1:t1) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.c AS col_3, t1.b AS col_4
---- hash rowsort
30 tuples hashing to 9352a0c5f12faae85f27dc178913cf2d

-STATEMENT MATCH (t1:t1) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.c AS col_3, t1.b AS col_4 ORDER BY col_3, col_2
---- hash rowsort
30 tuples hashing to 9352a0c5f12faae85f27dc178913cf2d

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR t1.c > t1.d RETURN t1.d - t1.e AS col_1, abs(t1.a) AS col_2, t1.a AS col_3, abs(t1.b - t1.c) AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5
---- hash rowsort
28 tuples hashing to 16f5a6bc5dd998e2e3b84b3a5f72fefe

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR t1.c > t1.d RETURN t1.d - t1.e AS col_1, abs(t1.a) AS col_2, t1.a AS col_3, abs(t1.b - t1.c) AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5 ORDER BY col_5, col_2
---- hash rowsort
28 tuples hashing to 16f5a6bc5dd998e2e3b84b3a5f72fefe

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN abs(t1.a) AS col_1
---- 8
107
163
188
191
213
216
220
234

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN abs(t1.a) AS col_1 ORDER BY col_1
---- 8
107
163
188
191
213
216
220
234

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN abs(t1.a) AS col_1
---- 8
107
163
188
191
213
216
220
234

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN abs(t1.a) AS col_1 ORDER BY col_1
---- 8
107
163
188
191
213
216
220
234

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.a AS col_4, t1.b AS col_5, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_6, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_7
---- hash rowsort
21 tuples hashing to 5c2d165e1dbe999b1759525ee339ca9a

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.a AS col_4, t1.b AS col_5, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_6, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_7 ORDER BY col_5, col_7, col_1
---- hash rowsort
21 tuples hashing to 5c2d165e1dbe999b1759525ee339ca9a

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) RETURN abs(t1.a) AS col_1, t1.e AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5, t1.a - t1.b AS col_6
---- hash rowsort
3 tuples hashing to f7c0d5db3e9a4969e0527ffedf9b4d70

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) RETURN abs(t1.a) AS col_1, t1.e AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5, t1.a - t1.b AS col_6 ORDER BY col_1, col_5, col_6, col_4
---- hash rowsort
3 tuples hashing to f7c0d5db3e9a4969e0527ffedf9b4d70

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND t1.a > t1.b RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.a - t1.b AS col_5, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_6
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND t1.a > t1.b RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.a - t1.b AS col_5, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_6 ORDER BY col_3, col_2
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.e > t1.a AND t1.e < t1.b) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.a - t1.b AS col_5, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_6
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.e > t1.a AND t1.e < t1.b) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.a - t1.b AS col_5, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_6 ORDER BY col_3, col_6
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.a > t1.b RETURN abs(t1.b - t1.c) AS col_1, t1.a + t1.b * 2 AS col_2, abs(t1.a) AS col_3, t1.d - t1.e AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5
---- hash rowsort
26 tuples hashing to 0011ef36e28a0677318e32f0b4bb6169

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.a > t1.b RETURN abs(t1.b - t1.c) AS col_1, t1.a + t1.b * 2 AS col_2, abs(t1.a) AS col_3, t1.d - t1.e AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5 ORDER BY col_3, col_2, col_5, col_1
---- hash rowsort
26 tuples hashing to 0011ef36e28a0677318e32f0b4bb6169

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.b > t1.c RETURN abs(t1.b - t1.c) AS col_1, t1.a + t1.b * 2 AS col_2, abs(t1.a) AS col_3, t1.d - t1.e AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5
---- hash rowsort
26 tuples hashing to 0011ef36e28a0677318e32f0b4bb6169

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.b > t1.c RETURN abs(t1.b - t1.c) AS col_1, t1.a + t1.b * 2 AS col_2, abs(t1.a) AS col_3, t1.d - t1.e AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5 ORDER BY col_1, col_4
---- hash rowsort
26 tuples hashing to 0011ef36e28a0677318e32f0b4bb6169

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR t1.a > t1.b OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN abs(t1.b - t1.c) AS col_1, t1.a + t1.b * 2 AS col_2, abs(t1.a) AS col_3, t1.d - t1.e AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5
---- hash rowsort
26 tuples hashing to 0011ef36e28a0677318e32f0b4bb6169

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR t1.a > t1.b OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN abs(t1.b - t1.c) AS col_1, t1.a + t1.b * 2 AS col_2, abs(t1.a) AS col_3, t1.d - t1.e AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5 ORDER BY col_3, col_4, col_1
---- hash rowsort
26 tuples hashing to 0011ef36e28a0677318e32f0b4bb6169

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.a + t1.b * 2 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.d - t1.e AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5
---- hash rowsort
30 tuples hashing to 0ef2610e58bc4c197e69ef4e4790dcbf

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.a + t1.b * 2 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.d - t1.e AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5 ORDER BY col_3, col_1, col_4, col_2
---- hash rowsort
30 tuples hashing to 0ef2610e58bc4c197e69ef4e4790dcbf

-STATEMENT MATCH (t1:t1) RETURN t1.a AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, t1.a - t1.b AS col_5, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_6
---- hash rowsort
30 tuples hashing to 55ee5a9612b99a875a399d1da5d8426b

-STATEMENT MATCH (t1:t1) RETURN t1.a AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, t1.a - t1.b AS col_5, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_6 ORDER BY col_3, col_2, col_6, col_1, col_5
---- hash rowsort
30 tuples hashing to 55ee5a9612b99a875a399d1da5d8426b

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2
---- hash rowsort
5 tuples hashing to 7d54f2060f72872c2e80edaef61163c1

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2 ORDER BY col_1, col_2
---- hash rowsort
5 tuples hashing to 7d54f2060f72872c2e80edaef61163c1

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.a > t1.b RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2
---- hash rowsort
5 tuples hashing to 7d54f2060f72872c2e80edaef61163c1

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.a > t1.b RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2 ORDER BY col_2, col_1
---- hash rowsort
5 tuples hashing to 7d54f2060f72872c2e80edaef61163c1

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 AS col_1, abs(t1.a) AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, t1.b - t1.c AS col_5, t1.b AS col_6
---- hash rowsort
30 tuples hashing to 0a21fdcf930166b057f92d8f196eeda8

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 AS col_1, abs(t1.a) AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, t1.b - t1.c AS col_5, t1.b AS col_6 ORDER BY col_6, col_3, col_5, col_2, col_1
---- hash rowsort
30 tuples hashing to 0a21fdcf930166b057f92d8f196eeda8

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.d > t1.e AND (t1.e > t1.c OR t1.e < t1.d) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.a + t1.b * 2 AS col_5, t1.c - t1.d AS col_6
---- hash rowsort
5 tuples hashing to 00e154afdc515fe6805c2adeead80dc8

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.d > t1.e AND (t1.e > t1.c OR t1.e < t1.d) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.a + t1.b * 2 AS col_5, t1.c - t1.d AS col_6 ORDER BY col_6, col_3, col_2, col_1, col_5
---- hash rowsort
5 tuples hashing to 00e154afdc515fe6805c2adeead80dc8

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.d > t1.e RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.a + t1.b * 2 AS col_5, t1.c - t1.d AS col_6
---- hash rowsort
5 tuples hashing to 00e154afdc515fe6805c2adeead80dc8

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.d > t1.e RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.a + t1.b * 2 AS col_5, t1.c - t1.d AS col_6 ORDER BY col_4, col_1, col_2, col_6
---- hash rowsort
5 tuples hashing to 00e154afdc515fe6805c2adeead80dc8

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e RETURN t1.b - t1.c AS col_1, t1.c - t1.d AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, abs(t1.b - t1.c) AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5
---- hash rowsort
11 tuples hashing to 9ee42810091de9e456cdf451707dfb19

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e RETURN t1.b - t1.c AS col_1, t1.c - t1.d AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, abs(t1.b - t1.c) AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5 ORDER BY col_4, col_1
---- hash rowsort
11 tuples hashing to 9ee42810091de9e456cdf451707dfb19

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c RETURN abs(t1.a) AS col_1, t1.a + t1.b * 2 AS col_2, t1.c - t1.d AS col_3, abs(t1.b - t1.c) AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5, t1.a - t1.b AS col_6
---- hash rowsort
13 tuples hashing to 05c3a0c169dae692b136ec4da7900710

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c RETURN abs(t1.a) AS col_1, t1.a + t1.b * 2 AS col_2, t1.c - t1.d AS col_3, abs(t1.b - t1.c) AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5, t1.a - t1.b AS col_6 ORDER BY col_3, col_2
---- hash rowsort
13 tuples hashing to 05c3a0c169dae692b136ec4da7900710

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3
---- hash rowsort
17 tuples hashing to c4e39a7aad61c903c874fbef1b9cbd6d

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3 ORDER BY col_3, col_1
---- hash rowsort
17 tuples hashing to c4e39a7aad61c903c874fbef1b9cbd6d

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.e > t1.a AND t1.e < t1.b) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3
---- hash rowsort
17 tuples hashing to c4e39a7aad61c903c874fbef1b9cbd6d

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.e > t1.a AND t1.e < t1.b) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3 ORDER BY col_1, col_2, col_3
---- hash rowsort
17 tuples hashing to c4e39a7aad61c903c874fbef1b9cbd6d

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1
---- hash rowsort
15 tuples hashing to 6af3ceebf0777a1fdf502d4b4007fb96

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1 ORDER BY col_1
---- hash rowsort
15 tuples hashing to 6af3ceebf0777a1fdf502d4b4007fb96

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.b AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, abs(t1.a) AS col_4, t1.e AS col_5, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_6
---- 0


-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.b AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, abs(t1.a) AS col_4, t1.e AS col_5, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_6 ORDER BY col_4, col_1, col_6, col_3, col_5, col_2
---- 0


-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.b AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, abs(t1.a) AS col_4, t1.e AS col_5, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_6
---- 0


-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.b AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, abs(t1.a) AS col_4, t1.e AS col_5, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_6 ORDER BY col_4, col_3, col_1, col_2
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.e > t1.c OR t1.e < t1.d) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1
---- hash rowsort
25 tuples hashing to 64a52fdf762f93fa572da96c506b2fe2

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.e > t1.c OR t1.e < t1.d) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1 ORDER BY col_1
---- hash rowsort
25 tuples hashing to 64a52fdf762f93fa572da96c506b2fe2

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.e > t1.c OR t1.e < t1.d) OR t1.b > t1.c RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1
---- hash rowsort
25 tuples hashing to 64a52fdf762f93fa572da96c506b2fe2

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.e > t1.c OR t1.e < t1.d) OR t1.b > t1.c RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1 ORDER BY col_1
---- hash rowsort
25 tuples hashing to 64a52fdf762f93fa572da96c506b2fe2

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR t1.b > t1.c OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1
---- hash rowsort
25 tuples hashing to 64a52fdf762f93fa572da96c506b2fe2

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR t1.b > t1.c OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1 ORDER BY col_1
---- hash rowsort
25 tuples hashing to 64a52fdf762f93fa572da96c506b2fe2

-STATEMENT MATCH (t1:t1) RETURN t1.a AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2
---- hash rowsort
30 tuples hashing to 062c0e56752ce88d0167d9e0fd0770d7

-STATEMENT MATCH (t1:t1) RETURN t1.a AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2 ORDER BY col_2, col_1
---- hash rowsort
30 tuples hashing to 062c0e56752ce88d0167d9e0fd0770d7

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.d - t1.e AS col_4, t1.b AS col_5
---- hash rowsort
8 tuples hashing to fae5120fb39277696b35aa3553bfd248

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.d - t1.e AS col_4, t1.b AS col_5 ORDER BY col_2, col_1, col_3, col_4, col_5
---- hash rowsort
8 tuples hashing to fae5120fb39277696b35aa3553bfd248

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.d - t1.e AS col_4, t1.b AS col_5
---- hash rowsort
8 tuples hashing to fae5120fb39277696b35aa3553bfd248

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.d - t1.e AS col_4, t1.b AS col_5 ORDER BY col_4, col_3, col_2, col_5, col_1
---- hash rowsort
8 tuples hashing to fae5120fb39277696b35aa3553bfd248

-STATEMENT MATCH (t1:t1) RETURN t1.c AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.c - t1.d AS col_3, t1.a - t1.b AS col_4, abs(t1.b - t1.c) AS col_5, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_6, t1.a AS col_7
---- hash rowsort
30 tuples hashing to a8320bf92935acc06873c02a2ef70728

-STATEMENT MATCH (t1:t1) RETURN t1.c AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.c - t1.d AS col_3, t1.a - t1.b AS col_4, abs(t1.b - t1.c) AS col_5, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_6, t1.a AS col_7 ORDER BY col_2, col_4, col_6, col_1
---- hash rowsort
30 tuples hashing to a8320bf92935acc06873c02a2ef70728

-STATEMENT MATCH (t1:t1) RETURN t1.a - t1.b AS col_1, t1.c - t1.d AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4
---- hash rowsort
30 tuples hashing to eba5cda4cc13d96f727c559c41db8919

-STATEMENT MATCH (t1:t1) RETURN t1.a - t1.b AS col_1, t1.c - t1.d AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4 ORDER BY col_4, col_1, col_3
---- hash rowsort
30 tuples hashing to eba5cda4cc13d96f727c559c41db8919

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.c AS col_2, t1.d AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.b - t1.c AS col_5
---- hash rowsort
29 tuples hashing to eca95b112211ab95103202c15c975890

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.c AS col_2, t1.d AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.b - t1.c AS col_5 ORDER BY col_2, col_3
---- hash rowsort
29 tuples hashing to eca95b112211ab95103202c15c975890

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.c AS col_2, t1.d AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.b - t1.c AS col_5
---- hash rowsort
29 tuples hashing to eca95b112211ab95103202c15c975890

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.c AS col_2, t1.d AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.b - t1.c AS col_5 ORDER BY col_4, col_1
---- hash rowsort
29 tuples hashing to eca95b112211ab95103202c15c975890

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.c AS col_2, t1.d AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.b - t1.c AS col_5
---- hash rowsort
29 tuples hashing to eca95b112211ab95103202c15c975890

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.c AS col_2, t1.d AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.b - t1.c AS col_5 ORDER BY col_3, col_5
---- hash rowsort
29 tuples hashing to eca95b112211ab95103202c15c975890

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR NOT (t1.d >= 110 AND t1.d <= 150) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.c AS col_2, t1.d AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.b - t1.c AS col_5
---- hash rowsort
29 tuples hashing to eca95b112211ab95103202c15c975890

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR NOT (t1.d >= 110 AND t1.d <= 150) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.c AS col_2, t1.d AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.b - t1.c AS col_5 ORDER BY col_4, col_1, col_3
---- hash rowsort
29 tuples hashing to eca95b112211ab95103202c15c975890

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.a > t1.b RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.c - t1.d AS col_3, t1.e AS col_4
---- hash rowsort
3 tuples hashing to a55c98f195d20b15999740a67127a991

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.a > t1.b RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.c - t1.d AS col_3, t1.e AS col_4 ORDER BY col_3, col_2, col_1, col_4
---- hash rowsort
3 tuples hashing to a55c98f195d20b15999740a67127a991

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.a > t1.b AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.c - t1.d AS col_3, t1.e AS col_4
---- hash rowsort
3 tuples hashing to a55c98f195d20b15999740a67127a991

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.a > t1.b AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.c - t1.d AS col_3, t1.e AS col_4 ORDER BY col_2, col_4, col_3
---- hash rowsort
3 tuples hashing to a55c98f195d20b15999740a67127a991

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.c AS col_3, t1.b AS col_4, abs(t1.a) AS col_5, t1.d AS col_6, t1.a AS col_7
---- hash rowsort
26 tuples hashing to db856adb50d6b2c59247ce864ee0b0f7

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.c AS col_3, t1.b AS col_4, abs(t1.a) AS col_5, t1.d AS col_6, t1.a AS col_7 ORDER BY col_1, col_5, col_4, col_2
---- hash rowsort
26 tuples hashing to db856adb50d6b2c59247ce864ee0b0f7

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.b > t1.c RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.b - t1.c AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, abs(t1.a) AS col_4, t1.a - t1.b AS col_5
---- hash rowsort
13 tuples hashing to 3008ddf6b506ac06a02ab54f4a4dbab7

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.b > t1.c RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.b - t1.c AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, abs(t1.a) AS col_4, t1.a - t1.b AS col_5 ORDER BY col_3, col_2, col_1, col_5, col_4
---- hash rowsort
13 tuples hashing to 3008ddf6b506ac06a02ab54f4a4dbab7

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.b - t1.c AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, abs(t1.a) AS col_4, t1.a - t1.b AS col_5
---- hash rowsort
13 tuples hashing to 3008ddf6b506ac06a02ab54f4a4dbab7

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.b - t1.c AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, abs(t1.a) AS col_4, t1.a - t1.b AS col_5 ORDER BY col_3, col_5
---- hash rowsort
13 tuples hashing to 3008ddf6b506ac06a02ab54f4a4dbab7

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR (t1.e > t1.c OR t1.e < t1.d) OR t1.b > t1.c RETURN t1.e AS col_1, abs(t1.a) AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.b - t1.c AS col_5, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_6, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_7
---- hash rowsort
25 tuples hashing to e99a4f7e39ea9b3735fc5ef9e055f336

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR (t1.e > t1.c OR t1.e < t1.d) OR t1.b > t1.c RETURN t1.e AS col_1, abs(t1.a) AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.b - t1.c AS col_5, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_6, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_7 ORDER BY col_5, col_4, col_3, col_6, col_2, col_1, col_7
---- hash rowsort
25 tuples hashing to e99a4f7e39ea9b3735fc5ef9e055f336

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR t1.b > t1.c OR (t1.e > t1.a AND t1.e < t1.b) RETURN t1.e AS col_1, abs(t1.a) AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.b - t1.c AS col_5, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_6, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_7
---- hash rowsort
25 tuples hashing to e99a4f7e39ea9b3735fc5ef9e055f336

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR t1.b > t1.c OR (t1.e > t1.a AND t1.e < t1.b) RETURN t1.e AS col_1, abs(t1.a) AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.b - t1.c AS col_5, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_6, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_7 ORDER BY col_1, col_4, col_6, col_2, col_3, col_5
---- hash rowsort
25 tuples hashing to e99a4f7e39ea9b3735fc5ef9e055f336

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.e > t1.c OR t1.e < t1.d) OR (t1.e > t1.a AND t1.e < t1.b) RETURN t1.e AS col_1, abs(t1.a) AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.b - t1.c AS col_5, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_6, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_7
---- hash rowsort
25 tuples hashing to e99a4f7e39ea9b3735fc5ef9e055f336

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.e > t1.c OR t1.e < t1.d) OR (t1.e > t1.a AND t1.e < t1.b) RETURN t1.e AS col_1, abs(t1.a) AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.b - t1.c AS col_5, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_6, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_7 ORDER BY col_4, col_3, col_6, col_5, col_7, col_1
---- hash rowsort
25 tuples hashing to e99a4f7e39ea9b3735fc5ef9e055f336

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR (t1.e > t1.a AND t1.e < t1.b) OR t1.b > t1.c RETURN t1.e AS col_1, abs(t1.a) AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.b - t1.c AS col_5, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_6, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_7
---- hash rowsort
25 tuples hashing to e99a4f7e39ea9b3735fc5ef9e055f336

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR (t1.e > t1.a AND t1.e < t1.b) OR t1.b > t1.c RETURN t1.e AS col_1, abs(t1.a) AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.b - t1.c AS col_5, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_6, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_7 ORDER BY col_5, col_3
---- hash rowsort
25 tuples hashing to e99a4f7e39ea9b3735fc5ef9e055f336

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.e > t1.c OR t1.e < t1.d) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.b - t1.c AS col_2, t1.c - t1.d AS col_3, t1.a AS col_4
---- hash rowsort
26 tuples hashing to 33946dd780d80a44b8a5a40324ac28c1

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.e > t1.c OR t1.e < t1.d) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.b - t1.c AS col_2, t1.c - t1.d AS col_3, t1.a AS col_4 ORDER BY col_3, col_4, col_2, col_1
---- hash rowsort
26 tuples hashing to 33946dd780d80a44b8a5a40324ac28c1

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR t1.b > t1.c OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.b - t1.c AS col_2, t1.c - t1.d AS col_3, t1.a AS col_4
---- hash rowsort
26 tuples hashing to 33946dd780d80a44b8a5a40324ac28c1

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR t1.b > t1.c OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.b - t1.c AS col_2, t1.c - t1.d AS col_3, t1.a AS col_4 ORDER BY col_2, col_3
---- hash rowsort
26 tuples hashing to 33946dd780d80a44b8a5a40324ac28c1

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.b - t1.c AS col_2, t1.c - t1.d AS col_3, t1.a AS col_4
---- hash rowsort
26 tuples hashing to 33946dd780d80a44b8a5a40324ac28c1

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.b - t1.c AS col_2, t1.c - t1.d AS col_3, t1.a AS col_4 ORDER BY col_3, col_2
---- hash rowsort
26 tuples hashing to 33946dd780d80a44b8a5a40324ac28c1

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.b > t1.c OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.b - t1.c AS col_2, t1.c - t1.d AS col_3, t1.a AS col_4
---- hash rowsort
26 tuples hashing to 33946dd780d80a44b8a5a40324ac28c1

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.b > t1.c OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.b - t1.c AS col_2, t1.c - t1.d AS col_3, t1.a AS col_4 ORDER BY col_4, col_1, col_3
---- hash rowsort
26 tuples hashing to 33946dd780d80a44b8a5a40324ac28c1

-STATEMENT MATCH (t1:t1) RETURN abs(t1.a) AS col_1, t1.a AS col_2, t1.b - t1.c AS col_3
---- hash rowsort
30 tuples hashing to 5265c15239d446b5dc315f3e79dd842d

-STATEMENT MATCH (t1:t1) RETURN abs(t1.a) AS col_1, t1.a AS col_2, t1.b - t1.c AS col_3 ORDER BY col_1, col_3
---- hash rowsort
30 tuples hashing to 5265c15239d446b5dc315f3e79dd842d

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.b > t1.c AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a + t1.b * 2 AS col_2, t1.c AS col_3, t1.d AS col_4, t1.e AS col_5
---- 1
0|698|231|233|230

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.b > t1.c AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a + t1.b * 2 AS col_2, t1.c AS col_3, t1.d AS col_4, t1.e AS col_5 ORDER BY col_5, col_1, col_4, col_2
---- 1
0|698|231|233|230

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a + t1.b * 2 AS col_2, t1.c AS col_3, t1.d AS col_4, t1.e AS col_5
---- 1
0|698|231|233|230

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a + t1.b * 2 AS col_2, t1.c AS col_3, t1.d AS col_4, t1.e AS col_5 ORDER BY col_5, col_1, col_3
---- 1
0|698|231|233|230

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a + t1.b * 2 AS col_2, t1.c AS col_3, t1.d AS col_4, t1.e AS col_5
---- 1
0|698|231|233|230

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a + t1.b * 2 AS col_2, t1.c AS col_3, t1.d AS col_4, t1.e AS col_5 ORDER BY col_3, col_2
---- 1
0|698|231|233|230

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, abs(t1.b - t1.c) AS col_2, t1.e AS col_3, t1.d - t1.e AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, t1.c AS col_6
---- hash rowsort
30 tuples hashing to ea162126b301a546664c33ff053c4566

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, abs(t1.b - t1.c) AS col_2, t1.e AS col_3, t1.d - t1.e AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, t1.c AS col_6 ORDER BY col_4, col_2, col_1, col_6
---- hash rowsort
30 tuples hashing to ea162126b301a546664c33ff053c4566

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.d > t1.e OR t1.a > t1.b OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.b - t1.c AS col_1, abs(t1.a) AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.a - t1.b AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_6, t1.e AS col_7
---- hash rowsort
22 tuples hashing to ed3dbfdce513c2b78ba7fd5300dd487d

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.d > t1.e OR t1.a > t1.b OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.b - t1.c AS col_1, abs(t1.a) AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.a - t1.b AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_6, t1.e AS col_7 ORDER BY col_5, col_3
---- hash rowsort
22 tuples hashing to ed3dbfdce513c2b78ba7fd5300dd487d

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.a > t1.b OR t1.d > t1.e RETURN t1.b - t1.c AS col_1, abs(t1.a) AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.a - t1.b AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_6, t1.e AS col_7
---- hash rowsort
22 tuples hashing to ed3dbfdce513c2b78ba7fd5300dd487d

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.a > t1.b OR t1.d > t1.e RETURN t1.b - t1.c AS col_1, abs(t1.a) AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.a - t1.b AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_6, t1.e AS col_7 ORDER BY col_5, col_4
---- hash rowsort
22 tuples hashing to ed3dbfdce513c2b78ba7fd5300dd487d

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.a > t1.b OR t1.d > t1.e OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.b - t1.c AS col_1, abs(t1.a) AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.a - t1.b AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_6, t1.e AS col_7
---- hash rowsort
22 tuples hashing to ed3dbfdce513c2b78ba7fd5300dd487d

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.a > t1.b OR t1.d > t1.e OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.b - t1.c AS col_1, abs(t1.a) AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.a - t1.b AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_6, t1.e AS col_7 ORDER BY col_6, col_1, col_3, col_5, col_7, col_4
---- hash rowsort
22 tuples hashing to ed3dbfdce513c2b78ba7fd5300dd487d

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.c - t1.d AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4
---- hash rowsort
18 tuples hashing to 4d667e79e731c3952e5378b96fd2a448

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.c - t1.d AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4 ORDER BY col_2, col_4, col_1, col_3
---- hash rowsort
18 tuples hashing to 4d667e79e731c3952e5378b96fd2a448

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.c - t1.d AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4
---- hash rowsort
18 tuples hashing to 4d667e79e731c3952e5378b96fd2a448

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.c - t1.d AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4 ORDER BY col_3, col_2, col_1, col_4
---- hash rowsort
18 tuples hashing to 4d667e79e731c3952e5378b96fd2a448

-STATEMENT MATCH (t1:t1) RETURN t1.e AS col_1, t1.b AS col_2
---- hash rowsort
30 tuples hashing to aea68eb2207c713683774d94afe4f14d

-STATEMENT MATCH (t1:t1) RETURN t1.e AS col_1, t1.b AS col_2 ORDER BY col_1, col_2
---- hash rowsort
30 tuples hashing to aea68eb2207c713683774d94afe4f14d

-STATEMENT MATCH (t1:t1) RETURN t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, abs(t1.a) AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5, t1.a + t1.b * 2 + t1.c * 3 AS col_6
---- hash rowsort
30 tuples hashing to bddfab6a73f43e1b4ffe964de7db62eb

-STATEMENT MATCH (t1:t1) RETURN t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, abs(t1.a) AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5, t1.a + t1.b * 2 + t1.c * 3 AS col_6 ORDER BY col_5, col_1, col_2, col_3
---- hash rowsort
30 tuples hashing to bddfab6a73f43e1b4ffe964de7db62eb

-STATEMENT MATCH (t1:t1) RETURN t1.c - t1.d AS col_1, t1.c AS col_2, t1.d AS col_3, t1.a - t1.b AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5, t1.b - t1.c AS col_6
---- hash rowsort
30 tuples hashing to 0bdc6744bb66a70d9d1edc0844bb5d82

-STATEMENT MATCH (t1:t1) RETURN t1.c - t1.d AS col_1, t1.c AS col_2, t1.d AS col_3, t1.a - t1.b AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5, t1.b - t1.c AS col_6 ORDER BY col_5, col_2, col_4, col_1
---- hash rowsort
30 tuples hashing to 0bdc6744bb66a70d9d1edc0844bb5d82

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.b > t1.c RETURN t1.a AS col_1, t1.b - t1.c AS col_2
---- hash rowsort
21 tuples hashing to 84d2510a39db3f4308120d8b0ab47b9d

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.b > t1.c RETURN t1.a AS col_1, t1.b - t1.c AS col_2 ORDER BY col_1, col_2
---- hash rowsort
21 tuples hashing to 84d2510a39db3f4308120d8b0ab47b9d

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a AS col_1, t1.b - t1.c AS col_2
---- hash rowsort
21 tuples hashing to 84d2510a39db3f4308120d8b0ab47b9d

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a AS col_1, t1.b - t1.c AS col_2 ORDER BY col_2, col_1
---- hash rowsort
21 tuples hashing to 84d2510a39db3f4308120d8b0ab47b9d

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.b > t1.c OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a AS col_1, t1.b - t1.c AS col_2
---- hash rowsort
21 tuples hashing to 84d2510a39db3f4308120d8b0ab47b9d

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.b > t1.c OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a AS col_1, t1.b - t1.c AS col_2 ORDER BY col_1, col_2
---- hash rowsort
21 tuples hashing to 84d2510a39db3f4308120d8b0ab47b9d

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.c - t1.d AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3
---- hash rowsort
19 tuples hashing to b393e5b09a6c3fcbe99c4db72e5040c0

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.c - t1.d AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3 ORDER BY col_2, col_1, col_3
---- hash rowsort
19 tuples hashing to b393e5b09a6c3fcbe99c4db72e5040c0

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.e AS col_3
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.e AS col_3 ORDER BY col_1, col_3, col_2
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.c AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.e AS col_3, t1.c - t1.d AS col_4, t1.d AS col_5, abs(t1.b - t1.c) AS col_6
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.c AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.e AS col_3, t1.c - t1.d AS col_4, t1.d AS col_5, abs(t1.b - t1.c) AS col_6 ORDER BY col_1, col_3
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.c AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.e AS col_3, t1.c - t1.d AS col_4, t1.d AS col_5, abs(t1.b - t1.c) AS col_6
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.c AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.e AS col_3, t1.c - t1.d AS col_4, t1.d AS col_5, abs(t1.b - t1.c) AS col_6 ORDER BY col_2, col_6, col_1
---- 0


-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.c AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.c - t1.d AS col_4
---- hash rowsort
24 tuples hashing to b29a4f53653c0e1a8bc6300aaa07f9de

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.c AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.c - t1.d AS col_4 ORDER BY col_2, col_4, col_3, col_1
---- hash rowsort
24 tuples hashing to b29a4f53653c0e1a8bc6300aaa07f9de

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR (t1.e > t1.a AND t1.e < t1.b) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.c AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.c - t1.d AS col_4
---- hash rowsort
24 tuples hashing to b29a4f53653c0e1a8bc6300aaa07f9de

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR (t1.e > t1.a AND t1.e < t1.b) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.c AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.c - t1.d AS col_4 ORDER BY col_1, col_3, col_2
---- hash rowsort
24 tuples hashing to b29a4f53653c0e1a8bc6300aaa07f9de

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.e > t1.a AND t1.e < t1.b) RETURN t1.c AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.c - t1.d AS col_4
---- hash rowsort
24 tuples hashing to b29a4f53653c0e1a8bc6300aaa07f9de

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.e > t1.a AND t1.e < t1.b) RETURN t1.c AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.c - t1.d AS col_4 ORDER BY col_2, col_3, col_4, col_1
---- hash rowsort
24 tuples hashing to b29a4f53653c0e1a8bc6300aaa07f9de

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR (t1.e > t1.c OR t1.e < t1.d) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.c AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.c - t1.d AS col_4
---- hash rowsort
24 tuples hashing to b29a4f53653c0e1a8bc6300aaa07f9de

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR (t1.e > t1.c OR t1.e < t1.d) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.c AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.c - t1.d AS col_4 ORDER BY col_4, col_1
---- hash rowsort
24 tuples hashing to b29a4f53653c0e1a8bc6300aaa07f9de

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.b AS col_1
---- hash rowsort
21 tuples hashing to b84ff2c254f6ba4bcd8942c4ceb7e064

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.b AS col_1 ORDER BY col_1
---- hash rowsort
21 tuples hashing to b84ff2c254f6ba4bcd8942c4ceb7e064

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR t1.d > t1.e RETURN t1.b AS col_1
---- hash rowsort
21 tuples hashing to b84ff2c254f6ba4bcd8942c4ceb7e064

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR t1.d > t1.e RETURN t1.b AS col_1 ORDER BY col_1
---- hash rowsort
21 tuples hashing to b84ff2c254f6ba4bcd8942c4ceb7e064

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN abs(t1.a) AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3
---- hash rowsort
30 tuples hashing to 774ffc972efa8f12fb5270b9a2811464

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN abs(t1.a) AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3 ORDER BY col_1, col_2, col_3
---- hash rowsort
30 tuples hashing to 774ffc972efa8f12fb5270b9a2811464

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR t1.c > t1.d OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.b - t1.c AS col_3, t1.a AS col_4
---- hash rowsort
26 tuples hashing to 9d70636a8311231198a150a2ac8bb8f9

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR t1.c > t1.d OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.b - t1.c AS col_3, t1.a AS col_4 ORDER BY col_4, col_3
---- hash rowsort
26 tuples hashing to 9d70636a8311231198a150a2ac8bb8f9

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.c > t1.d RETURN t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.b - t1.c AS col_3, t1.a AS col_4
---- hash rowsort
26 tuples hashing to 9d70636a8311231198a150a2ac8bb8f9

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.c > t1.d RETURN t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.b - t1.c AS col_3, t1.a AS col_4 ORDER BY col_3, col_1, col_4
---- hash rowsort
26 tuples hashing to 9d70636a8311231198a150a2ac8bb8f9

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.d - t1.e AS col_2, t1.b - t1.c AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4
---- hash rowsort
6 tuples hashing to 4eefd8751c9e5d963858bd7c3e44d8de

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.d - t1.e AS col_2, t1.b - t1.c AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4 ORDER BY col_1, col_4
---- hash rowsort
6 tuples hashing to 4eefd8751c9e5d963858bd7c3e44d8de

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND t1.b > t1.c RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.d - t1.e AS col_2, t1.b - t1.c AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4
---- hash rowsort
6 tuples hashing to 4eefd8751c9e5d963858bd7c3e44d8de

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND t1.b > t1.c RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.d - t1.e AS col_2, t1.b - t1.c AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4 ORDER BY col_2, col_1, col_4, col_3
---- hash rowsort
6 tuples hashing to 4eefd8751c9e5d963858bd7c3e44d8de

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2
---- hash rowsort
26 tuples hashing to 76d6c381b206468784f3ebd5580f5604

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2 ORDER BY col_2, col_1
---- hash rowsort
26 tuples hashing to 76d6c381b206468784f3ebd5580f5604

-STATEMENT MATCH (t1:t1) RETURN t1.c - t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, t1.b AS col_5
---- hash rowsort
30 tuples hashing to 5cb0c05a7c53a276c11f188783d0ad8b

-STATEMENT MATCH (t1:t1) RETURN t1.c - t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, t1.b AS col_5 ORDER BY col_3, col_5, col_4, col_2, col_1
---- hash rowsort
30 tuples hashing to 5cb0c05a7c53a276c11f188783d0ad8b

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.d - t1.e AS col_1, t1.c - t1.d AS col_2
---- hash rowsort
14 tuples hashing to a0c29878c36a8a23511f201b3f7b1800

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.d - t1.e AS col_1, t1.c - t1.d AS col_2 ORDER BY col_2, col_1
---- hash rowsort
14 tuples hashing to a0c29878c36a8a23511f201b3f7b1800

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.e > t1.c OR t1.e < t1.d) RETURN t1.d - t1.e AS col_1, t1.c - t1.d AS col_2
---- hash rowsort
14 tuples hashing to a0c29878c36a8a23511f201b3f7b1800

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.e > t1.c OR t1.e < t1.d) RETURN t1.d - t1.e AS col_1, t1.c - t1.d AS col_2 ORDER BY col_2, col_1
---- hash rowsort
14 tuples hashing to a0c29878c36a8a23511f201b3f7b1800

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.d - t1.e AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4
---- hash rowsort
16 tuples hashing to e06b774130bc687e564232bbcf51a91e

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.d - t1.e AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4 ORDER BY col_3, col_1, col_2
---- hash rowsort
16 tuples hashing to e06b774130bc687e564232bbcf51a91e

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.d > t1.e RETURN t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.d - t1.e AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4
---- hash rowsort
16 tuples hashing to e06b774130bc687e564232bbcf51a91e

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.d > t1.e RETURN t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.d - t1.e AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4 ORDER BY col_3, col_1
---- hash rowsort
16 tuples hashing to e06b774130bc687e564232bbcf51a91e

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.d > t1.e RETURN t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.e AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, t1.a AS col_6
---- hash rowsort
12 tuples hashing to 9eb6d54a1620a7b85e6d7b7044fcaef0

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.d > t1.e RETURN t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.e AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, t1.a AS col_6 ORDER BY col_5, col_6, col_3, col_4, col_1
---- hash rowsort
12 tuples hashing to 9eb6d54a1620a7b85e6d7b7044fcaef0

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.e AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, t1.a AS col_6
---- hash rowsort
12 tuples hashing to 9eb6d54a1620a7b85e6d7b7044fcaef0

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.e AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, t1.a AS col_6 ORDER BY col_2, col_5, col_4, col_3
---- hash rowsort
12 tuples hashing to 9eb6d54a1620a7b85e6d7b7044fcaef0

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.e AS col_1, t1.a AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.c - t1.d AS col_4, abs(t1.a) AS col_5, t1.d AS col_6, t1.b - t1.c AS col_7
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.e AS col_1, t1.a AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.c - t1.d AS col_4, abs(t1.a) AS col_5, t1.d AS col_6, t1.b - t1.c AS col_7 ORDER BY col_5, col_1, col_7, col_6, col_4, col_3, col_2
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.e AS col_1, t1.a AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.c - t1.d AS col_4, abs(t1.a) AS col_5, t1.d AS col_6, t1.b - t1.c AS col_7
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.e AS col_1, t1.a AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.c - t1.d AS col_4, abs(t1.a) AS col_5, t1.d AS col_6, t1.b - t1.c AS col_7 ORDER BY col_2, col_3, col_1, col_5, col_4, col_6, col_7
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.b - t1.c AS col_2, t1.c - t1.d AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4
---- hash rowsort
21 tuples hashing to a925a6ed3eaeb65d2def43aa60e4ba0a

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.b - t1.c AS col_2, t1.c - t1.d AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4 ORDER BY col_1, col_4, col_3
---- hash rowsort
21 tuples hashing to a925a6ed3eaeb65d2def43aa60e4ba0a

-STATEMENT MATCH (t1:t1) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3
---- hash rowsort
30 tuples hashing to af2f5c460dcbe5d859625a848b452ff9

-STATEMENT MATCH (t1:t1) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3 ORDER BY col_3, col_2
---- hash rowsort
30 tuples hashing to af2f5c460dcbe5d859625a848b452ff9

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.a > t1.b AND (t1.e > t1.c OR t1.e < t1.d) RETURN t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4
---- hash rowsort
8 tuples hashing to 9240066ab585efc3f0b28794f435c20b

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.a > t1.b AND (t1.e > t1.c OR t1.e < t1.d) RETURN t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4 ORDER BY col_2, col_4, col_3
---- hash rowsort
8 tuples hashing to 9240066ab585efc3f0b28794f435c20b

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e > t1.c OR t1.e < t1.d) AND t1.a > t1.b RETURN t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4
---- hash rowsort
8 tuples hashing to 9240066ab585efc3f0b28794f435c20b

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e > t1.c OR t1.e < t1.d) AND t1.a > t1.b RETURN t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4 ORDER BY col_2, col_3, col_1
---- hash rowsort
8 tuples hashing to 9240066ab585efc3f0b28794f435c20b

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.e > t1.c OR t1.e < t1.d) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4
---- hash rowsort
8 tuples hashing to 9240066ab585efc3f0b28794f435c20b

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.e > t1.c OR t1.e < t1.d) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4 ORDER BY col_2, col_1, col_3, col_4
---- hash rowsort
8 tuples hashing to 9240066ab585efc3f0b28794f435c20b

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, abs(t1.b - t1.c) AS col_4
---- hash rowsort
8 tuples hashing to 761c1d3eca857c88bfbc6357ef1d4bb9

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, abs(t1.b - t1.c) AS col_4 ORDER BY col_2, col_1
---- hash rowsort
8 tuples hashing to 761c1d3eca857c88bfbc6357ef1d4bb9

-STATEMENT MATCH (t1:t1) RETURN t1.c AS col_1, t1.c - t1.d AS col_2, t1.a - t1.b AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, abs(t1.a) AS col_5
---- hash rowsort
30 tuples hashing to 17b6a2380f484c02289aad797fddc52c

-STATEMENT MATCH (t1:t1) RETURN t1.c AS col_1, t1.c - t1.d AS col_2, t1.a - t1.b AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, abs(t1.a) AS col_5 ORDER BY col_5, col_3, col_2, col_4, col_1
---- hash rowsort
30 tuples hashing to 17b6a2380f484c02289aad797fddc52c

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR t1.d > t1.e RETURN t1.b AS col_1, abs(t1.a) AS col_2, t1.a + t1.b * 2 AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.d - t1.e AS col_5, t1.a AS col_6, t1.c AS col_7
---- hash rowsort
21 tuples hashing to ddce6438f6ded8f787d7c7c9142766c8

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR t1.d > t1.e RETURN t1.b AS col_1, abs(t1.a) AS col_2, t1.a + t1.b * 2 AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.d - t1.e AS col_5, t1.a AS col_6, t1.c AS col_7 ORDER BY col_5, col_2, col_1, col_7, col_3, col_4
---- hash rowsort
21 tuples hashing to ddce6438f6ded8f787d7c7c9142766c8

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.d > t1.e OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.b AS col_1, abs(t1.a) AS col_2, t1.a + t1.b * 2 AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.d - t1.e AS col_5, t1.a AS col_6, t1.c AS col_7
---- hash rowsort
21 tuples hashing to ddce6438f6ded8f787d7c7c9142766c8

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.d > t1.e OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.b AS col_1, abs(t1.a) AS col_2, t1.a + t1.b * 2 AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.d - t1.e AS col_5, t1.a AS col_6, t1.c AS col_7 ORDER BY col_5, col_4
---- hash rowsort
21 tuples hashing to ddce6438f6ded8f787d7c7c9142766c8

-STATEMENT MATCH (t1:t1) RETURN t1.c - t1.d AS col_1
---- hash rowsort
30 tuples hashing to 5597b8fa34613aadc270053ea54637e5

-STATEMENT MATCH (t1:t1) RETURN t1.c - t1.d AS col_1 ORDER BY col_1
---- hash rowsort
30 tuples hashing to 5597b8fa34613aadc270053ea54637e5

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.b > t1.c RETURN t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.b - t1.c AS col_4, t1.a + t1.b * 2 AS col_5, t1.a AS col_6, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_7
---- hash rowsort
13 tuples hashing to b18e90ba041643b851f2789fb293e177

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.b > t1.c RETURN t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.b - t1.c AS col_4, t1.a + t1.b * 2 AS col_5, t1.a AS col_6, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_7 ORDER BY col_1, col_4, col_2, col_6, col_7, col_3, col_5
---- hash rowsort
13 tuples hashing to b18e90ba041643b851f2789fb293e177

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.d > t1.e RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.e AS col_2
---- hash rowsort
11 tuples hashing to 72d2ab4ad233ab33010bd2c5d1749440

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.d > t1.e RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.e AS col_2 ORDER BY col_1, col_2
---- hash rowsort
11 tuples hashing to 72d2ab4ad233ab33010bd2c5d1749440

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.a - t1.b AS col_2
---- hash rowsort
26 tuples hashing to bbd8f5be08e13456f3bfc16a88013529

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.a - t1.b AS col_2 ORDER BY col_1, col_2
---- hash rowsort
26 tuples hashing to bbd8f5be08e13456f3bfc16a88013529

-STATEMENT MATCH (t1:t1) RETURN abs(t1.b - t1.c) AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.c AS col_4
---- hash rowsort
30 tuples hashing to aa5182b024988c706aea974de8e9c476

-STATEMENT MATCH (t1:t1) RETURN abs(t1.b - t1.c) AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.c AS col_4 ORDER BY col_3, col_1, col_4
---- hash rowsort
30 tuples hashing to aa5182b024988c706aea974de8e9c476

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 AS col_2, t1.a AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, t1.c - t1.d AS col_5
---- hash rowsort
23 tuples hashing to bd1ad3e6a227b77b65945fd596e52c3d

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 AS col_2, t1.a AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, t1.c - t1.d AS col_5 ORDER BY col_4, col_2, col_1, col_3
---- hash rowsort
23 tuples hashing to bd1ad3e6a227b77b65945fd596e52c3d

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR t1.b > t1.c RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 AS col_2, t1.a AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, t1.c - t1.d AS col_5
---- hash rowsort
23 tuples hashing to bd1ad3e6a227b77b65945fd596e52c3d

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR t1.b > t1.c RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 AS col_2, t1.a AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, t1.c - t1.d AS col_5 ORDER BY col_4, col_1, col_2, col_3, col_5
---- hash rowsort
23 tuples hashing to bd1ad3e6a227b77b65945fd596e52c3d

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR t1.c > t1.d OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5, abs(t1.b - t1.c) AS col_6
---- hash rowsort
26 tuples hashing to d3db380510f107abcd9c2a05962f73f7

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR t1.c > t1.d OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5, abs(t1.b - t1.c) AS col_6 ORDER BY col_4, col_6, col_1
---- hash rowsort
26 tuples hashing to d3db380510f107abcd9c2a05962f73f7

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.e > t1.c OR t1.e < t1.d) OR t1.c > t1.d RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5, abs(t1.b - t1.c) AS col_6
---- hash rowsort
26 tuples hashing to d3db380510f107abcd9c2a05962f73f7

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.e > t1.c OR t1.e < t1.d) OR t1.c > t1.d RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5, abs(t1.b - t1.c) AS col_6 ORDER BY col_1, col_4, col_6, col_5, col_3, col_2
---- hash rowsort
26 tuples hashing to d3db380510f107abcd9c2a05962f73f7

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) RETURN t1.b - t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, abs(t1.a) AS col_3, t1.d AS col_4, t1.a + t1.b * 2 AS col_5, t1.c - t1.d AS col_6
---- hash rowsort
21 tuples hashing to a224d388369a7a8762e00a350ed763cf

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) RETURN t1.b - t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, abs(t1.a) AS col_3, t1.d AS col_4, t1.a + t1.b * 2 AS col_5, t1.c - t1.d AS col_6 ORDER BY col_6, col_4, col_1, col_5, col_3
---- hash rowsort
21 tuples hashing to a224d388369a7a8762e00a350ed763cf

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.c AS col_3
---- 2
1050|333|106
1290|222|125

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.c AS col_3 ORDER BY col_3, col_2
---- 2
1050|333|106
1290|222|125

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1
---- hash rowsort
13 tuples hashing to 6e6a0a6e4c35b3bbdf0c9dcc6d9ee805

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1 ORDER BY col_1
---- hash rowsort
13 tuples hashing to 6e6a0a6e4c35b3bbdf0c9dcc6d9ee805

-STATEMENT MATCH (t1:t1) RETURN t1.d - t1.e AS col_1
---- hash rowsort
30 tuples hashing to 9e2d6381b04ea314cd79c5fc9325b30e

-STATEMENT MATCH (t1:t1) RETURN t1.d - t1.e AS col_1 ORDER BY col_1
---- hash rowsort
30 tuples hashing to 9e2d6381b04ea314cd79c5fc9325b30e

-STATEMENT MATCH (t1:t1) RETURN t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.a AS col_4, t1.d AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_6, t1.a + t1.b * 2 AS col_7
---- hash rowsort
30 tuples hashing to f30cba68ce30be44d3c41534b606390b

-STATEMENT MATCH (t1:t1) RETURN t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.a AS col_4, t1.d AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_6, t1.a + t1.b * 2 AS col_7 ORDER BY col_1, col_3, col_2
---- hash rowsort
30 tuples hashing to f30cba68ce30be44d3c41534b606390b

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.a + t1.b * 2 AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5
---- hash rowsort
30 tuples hashing to 9e0e10ca0afcd1880c61c538aa2b92c4

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.a + t1.b * 2 AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5 ORDER BY col_5, col_2, col_1, col_3, col_4
---- hash rowsort
30 tuples hashing to 9e0e10ca0afcd1880c61c538aa2b92c4

-STATEMENT MATCH (t1:t1) RETURN t1.b - t1.c AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.a + t1.b * 2 AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.d - t1.e AS col_5, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_6, t1.a AS col_7
---- hash rowsort
30 tuples hashing to 33ed025860d993d5123dff93b1bb0b4c

-STATEMENT MATCH (t1:t1) RETURN t1.b - t1.c AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.a + t1.b * 2 AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.d - t1.e AS col_5, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_6, t1.a AS col_7 ORDER BY col_4, col_5, col_2
---- hash rowsort
30 tuples hashing to 33ed025860d993d5123dff93b1bb0b4c

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a AS col_1
---- hash rowsort
23 tuples hashing to aa1f40b06f76ca4564c5f92ac6387d9c

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a AS col_1 ORDER BY col_1
---- hash rowsort
23 tuples hashing to aa1f40b06f76ca4564c5f92ac6387d9c

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a AS col_1
---- hash rowsort
23 tuples hashing to aa1f40b06f76ca4564c5f92ac6387d9c

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a AS col_1 ORDER BY col_1
---- hash rowsort
23 tuples hashing to aa1f40b06f76ca4564c5f92ac6387d9c

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a AS col_1
---- hash rowsort
23 tuples hashing to aa1f40b06f76ca4564c5f92ac6387d9c

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a AS col_1 ORDER BY col_1
---- hash rowsort
23 tuples hashing to aa1f40b06f76ca4564c5f92ac6387d9c

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.a > t1.b OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2
---- hash rowsort
27 tuples hashing to 05003b5eabd6b2f7219b7c465b3e72fa

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.a > t1.b OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2 ORDER BY col_1, col_2
---- hash rowsort
27 tuples hashing to 05003b5eabd6b2f7219b7c465b3e72fa

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR t1.a > t1.b RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2
---- hash rowsort
27 tuples hashing to 05003b5eabd6b2f7219b7c465b3e72fa

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR t1.a > t1.b RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2 ORDER BY col_2, col_1
---- hash rowsort
27 tuples hashing to 05003b5eabd6b2f7219b7c465b3e72fa

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.e > t1.c OR t1.e < t1.d) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.c - t1.d AS col_1, abs(t1.a) AS col_2, t1.b AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5
---- hash rowsort
24 tuples hashing to 9deb969b4c89e7dd30619358d4f7c3e1

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.e > t1.c OR t1.e < t1.d) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.c - t1.d AS col_1, abs(t1.a) AS col_2, t1.b AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5 ORDER BY col_3, col_2, col_1
---- hash rowsort
24 tuples hashing to 9deb969b4c89e7dd30619358d4f7c3e1

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR t1.d > t1.e OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.c - t1.d AS col_1, abs(t1.a) AS col_2, t1.b AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5
---- hash rowsort
24 tuples hashing to 9deb969b4c89e7dd30619358d4f7c3e1

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR t1.d > t1.e OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.c - t1.d AS col_1, abs(t1.a) AS col_2, t1.b AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5 ORDER BY col_3, col_1
---- hash rowsort
24 tuples hashing to 9deb969b4c89e7dd30619358d4f7c3e1

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.d - t1.e AS col_2, t1.d AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.a - t1.b AS col_5, t1.c - t1.d AS col_6, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_7
---- hash rowsort
22 tuples hashing to 638a0b12ab089da4bdab26fa4a86d2a4

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.d - t1.e AS col_2, t1.d AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.a - t1.b AS col_5, t1.c - t1.d AS col_6, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_7 ORDER BY col_5, col_7, col_2, col_6, col_1
---- hash rowsort
22 tuples hashing to 638a0b12ab089da4bdab26fa4a86d2a4

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.d - t1.e AS col_2, t1.d AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.a - t1.b AS col_5, t1.c - t1.d AS col_6, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_7
---- hash rowsort
22 tuples hashing to 638a0b12ab089da4bdab26fa4a86d2a4

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.d - t1.e AS col_2, t1.d AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.a - t1.b AS col_5, t1.c - t1.d AS col_6, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_7 ORDER BY col_6, col_2, col_1, col_7
---- hash rowsort
22 tuples hashing to 638a0b12ab089da4bdab26fa4a86d2a4

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.d AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.e AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4
---- 2
190|192|192|1158
222|222|221|1338

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.d AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.e AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4 ORDER BY col_3, col_1, col_4
---- 2
190|192|192|1158
222|222|221|1338

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.e AS col_1, t1.c - t1.d AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, abs(t1.b - t1.c) AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_6, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_7
---- hash rowsort
30 tuples hashing to 8db0848d7a26b7f11f3c119d26e7ab9b

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.e AS col_1, t1.c - t1.d AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, abs(t1.b - t1.c) AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_6, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_7 ORDER BY col_2, col_5, col_3, col_6, col_7, col_4, col_1
---- hash rowsort
30 tuples hashing to 8db0848d7a26b7f11f3c119d26e7ab9b

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.c - t1.d AS col_1, t1.c AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, t1.d - t1.e AS col_5
---- hash rowsort
30 tuples hashing to b1e6017bcd974b8b6dfea93e886e7860

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.c - t1.d AS col_1, t1.c AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, t1.d - t1.e AS col_5 ORDER BY col_5, col_3, col_2, col_4
---- hash rowsort
30 tuples hashing to b1e6017bcd974b8b6dfea93e886e7860

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, abs(t1.a) AS col_2, t1.b - t1.c AS col_3
---- hash rowsort
30 tuples hashing to 26cd92291109a2b8b185dc4cf12c1eb0

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, abs(t1.a) AS col_2, t1.b - t1.c AS col_3 ORDER BY col_3, col_1, col_2
---- hash rowsort
30 tuples hashing to 26cd92291109a2b8b185dc4cf12c1eb0

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.c - t1.d AS col_1, t1.b - t1.c AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5
---- hash rowsort
12 tuples hashing to 787fde79bb821591a7414b43c68a481a

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.c - t1.d AS col_1, t1.b - t1.c AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5 ORDER BY col_4, col_1, col_5, col_3
---- hash rowsort
12 tuples hashing to 787fde79bb821591a7414b43c68a481a

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.d > t1.e RETURN t1.c - t1.d AS col_1, t1.b - t1.c AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5
---- hash rowsort
12 tuples hashing to 787fde79bb821591a7414b43c68a481a

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.d > t1.e RETURN t1.c - t1.d AS col_1, t1.b - t1.c AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5 ORDER BY col_1, col_4, col_3, col_2
---- hash rowsort
12 tuples hashing to 787fde79bb821591a7414b43c68a481a

-STATEMENT MATCH (t1:t1) RETURN t1.c AS col_1, abs(t1.b - t1.c) AS col_2, t1.c - t1.d AS col_3
---- hash rowsort
30 tuples hashing to 41eddffbb1026fde489f8ddf1b8edefe

-STATEMENT MATCH (t1:t1) RETURN t1.c AS col_1, abs(t1.b - t1.c) AS col_2, t1.c - t1.d AS col_3 ORDER BY col_3, col_2, col_1
---- hash rowsort
30 tuples hashing to 41eddffbb1026fde489f8ddf1b8edefe

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d RETURN abs(t1.b - t1.c) AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a + t1.b * 2 AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4
---- hash rowsort
13 tuples hashing to 3d0071aa52b76cfd5320ac97977aa574

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d RETURN abs(t1.b - t1.c) AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a + t1.b * 2 AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4 ORDER BY col_2, col_1, col_4, col_3
---- hash rowsort
13 tuples hashing to 3d0071aa52b76cfd5320ac97977aa574

-STATEMENT MATCH (t1:t1) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3
---- hash rowsort
30 tuples hashing to 30a2cb0a98d6a10177a711a683f98ddf

-STATEMENT MATCH (t1:t1) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3 ORDER BY col_3, col_1
---- hash rowsort
30 tuples hashing to 30a2cb0a98d6a10177a711a683f98ddf

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.c AS col_1
---- 3
184
195
225

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.c AS col_1 ORDER BY col_1
---- 3
184
195
225

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.c AS col_1
---- 3
184
195
225

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.c AS col_1 ORDER BY col_1
---- 3
184
195
225

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.c - t1.d AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4
---- hash rowsort
3 tuples hashing to 20519844c8541213771f3169975a81c7

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.c - t1.d AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4 ORDER BY col_4, col_2, col_1
---- hash rowsort
3 tuples hashing to 20519844c8541213771f3169975a81c7

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.c - t1.d AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4
---- hash rowsort
3 tuples hashing to 20519844c8541213771f3169975a81c7

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.c - t1.d AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4 ORDER BY col_1, col_3
---- hash rowsort
3 tuples hashing to 20519844c8541213771f3169975a81c7

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.c AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.d - t1.e AS col_4, t1.a AS col_5
---- hash rowsort
7 tuples hashing to 831bf1ee380966afc5246d9d7f22ddcc

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.c AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.d - t1.e AS col_4, t1.a AS col_5 ORDER BY col_3, col_4, col_1
---- hash rowsort
7 tuples hashing to 831bf1ee380966afc5246d9d7f22ddcc

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.c AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.d - t1.e AS col_4, t1.a AS col_5
---- hash rowsort
7 tuples hashing to 831bf1ee380966afc5246d9d7f22ddcc

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.c AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.d - t1.e AS col_4, t1.a AS col_5 ORDER BY col_4, col_1, col_3, col_2, col_5
---- hash rowsort
7 tuples hashing to 831bf1ee380966afc5246d9d7f22ddcc

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.c AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.d - t1.e AS col_4, t1.a AS col_5
---- hash rowsort
7 tuples hashing to 831bf1ee380966afc5246d9d7f22ddcc

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.c AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.d - t1.e AS col_4, t1.a AS col_5 ORDER BY col_2, col_5, col_4
---- hash rowsort
7 tuples hashing to 831bf1ee380966afc5246d9d7f22ddcc

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.d - t1.e AS col_3, t1.b - t1.c AS col_4, t1.a AS col_5
---- hash rowsort
30 tuples hashing to b08d384a8ae66fff46482ed9d1f3539a

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.d - t1.e AS col_3, t1.b - t1.c AS col_4, t1.a AS col_5 ORDER BY col_1, col_2, col_4, col_3, col_5
---- hash rowsort
30 tuples hashing to b08d384a8ae66fff46482ed9d1f3539a

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) RETURN t1.e AS col_1, t1.d AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3
---- hash rowsort
3 tuples hashing to f47afebd970f10c8665b0f3887055c1e

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) RETURN t1.e AS col_1, t1.d AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3 ORDER BY col_1, col_2, col_3
---- hash rowsort
3 tuples hashing to f47afebd970f10c8665b0f3887055c1e

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.a AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, t1.a + t1.b * 2 AS col_5, t1.c AS col_6
---- hash rowsort
10 tuples hashing to e35119f8f9d05653a965303acf684221

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.a AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, t1.a + t1.b * 2 AS col_5, t1.c AS col_6 ORDER BY col_6, col_2, col_1
---- hash rowsort
10 tuples hashing to e35119f8f9d05653a965303acf684221

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.a > t1.b RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a - t1.b AS col_2, t1.a AS col_3
---- hash rowsort
22 tuples hashing to 42d7ccf4a35710e53f6fc55ab6fe39b2

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.a > t1.b RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a - t1.b AS col_2, t1.a AS col_3 ORDER BY col_2, col_3, col_1
---- hash rowsort
22 tuples hashing to 42d7ccf4a35710e53f6fc55ab6fe39b2

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.d > t1.e OR t1.a > t1.b RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a - t1.b AS col_2, t1.a AS col_3
---- hash rowsort
22 tuples hashing to 42d7ccf4a35710e53f6fc55ab6fe39b2

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.d > t1.e OR t1.a > t1.b RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a - t1.b AS col_2, t1.a AS col_3 ORDER BY col_1, col_2, col_3
---- hash rowsort
22 tuples hashing to 42d7ccf4a35710e53f6fc55ab6fe39b2

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.a > t1.b OR t1.d > t1.e RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a - t1.b AS col_2, t1.a AS col_3
---- hash rowsort
22 tuples hashing to 42d7ccf4a35710e53f6fc55ab6fe39b2

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.a > t1.b OR t1.d > t1.e RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a - t1.b AS col_2, t1.a AS col_3 ORDER BY col_2, col_3
---- hash rowsort
22 tuples hashing to 42d7ccf4a35710e53f6fc55ab6fe39b2

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.b - t1.c AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3
---- hash rowsort
10 tuples hashing to 0737ede50d772682aae2bc5274742144

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.b - t1.c AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3 ORDER BY col_1, col_2, col_3
---- hash rowsort
10 tuples hashing to 0737ede50d772682aae2bc5274742144

-STATEMENT MATCH (t1:t1) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.e AS col_3, t1.a + t1.b * 2 AS col_4, t1.b - t1.c AS col_5
---- hash rowsort
30 tuples hashing to 39ac092c2826387388852a972eee0fd0

-STATEMENT MATCH (t1:t1) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.e AS col_3, t1.a + t1.b * 2 AS col_4, t1.b - t1.c AS col_5 ORDER BY col_3, col_1, col_4
---- hash rowsort
30 tuples hashing to 39ac092c2826387388852a972eee0fd0

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND t1.b > t1.c AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, abs(t1.b - t1.c) AS col_2
---- 1
137|2

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND t1.b > t1.c AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, abs(t1.b - t1.c) AS col_2 ORDER BY col_2, col_1
---- 1
137|2

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.b > t1.c AND t1.d > t1.e RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, abs(t1.b - t1.c) AS col_2
---- 1
137|2

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.b > t1.c AND t1.d > t1.e RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, abs(t1.b - t1.c) AS col_2 ORDER BY col_1, col_2
---- 1
137|2

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.b > t1.c RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, abs(t1.b - t1.c) AS col_2
---- 1
137|2

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.b > t1.c RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, abs(t1.b - t1.c) AS col_2 ORDER BY col_1, col_2
---- 1
137|2

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN abs(t1.a) AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.a - t1.b AS col_4
---- 2
107|1612|107|2
127|1902|127|-2

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN abs(t1.a) AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.a - t1.b AS col_4 ORDER BY col_2, col_4, col_3
---- 2
107|1612|107|2
127|1902|127|-2

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.d > t1.e AND (t1.e > t1.c OR t1.e < t1.d) RETURN t1.d AS col_1
---- hash rowsort
11 tuples hashing to 5fb1f7f101ae97ec369e8865b2f70e95

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.d > t1.e AND (t1.e > t1.c OR t1.e < t1.d) RETURN t1.d AS col_1 ORDER BY col_1
---- hash rowsort
11 tuples hashing to 5fb1f7f101ae97ec369e8865b2f70e95

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.e > t1.c OR t1.e < t1.d) AND t1.d > t1.e RETURN t1.d AS col_1
---- hash rowsort
11 tuples hashing to 5fb1f7f101ae97ec369e8865b2f70e95

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.e > t1.c OR t1.e < t1.d) AND t1.d > t1.e RETURN t1.d AS col_1 ORDER BY col_1
---- hash rowsort
11 tuples hashing to 5fb1f7f101ae97ec369e8865b2f70e95

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.e > t1.c OR t1.e < t1.d) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.d AS col_1
---- hash rowsort
11 tuples hashing to 5fb1f7f101ae97ec369e8865b2f70e95

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.e > t1.c OR t1.e < t1.d) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.d AS col_1 ORDER BY col_1
---- hash rowsort
11 tuples hashing to 5fb1f7f101ae97ec369e8865b2f70e95

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.e > t1.c OR t1.e < t1.d) RETURN t1.d AS col_1
---- hash rowsort
11 tuples hashing to 5fb1f7f101ae97ec369e8865b2f70e95

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.e > t1.c OR t1.e < t1.d) RETURN t1.d AS col_1 ORDER BY col_1
---- hash rowsort
11 tuples hashing to 5fb1f7f101ae97ec369e8865b2f70e95

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.e > t1.c OR t1.e < t1.d) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a - t1.b AS col_3, t1.b - t1.c AS col_4
---- hash rowsort
21 tuples hashing to c1e82635b3d7facb5d9b45719f40b4cd

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.e > t1.c OR t1.e < t1.d) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a - t1.b AS col_3, t1.b - t1.c AS col_4 ORDER BY col_1, col_4, col_2
---- hash rowsort
21 tuples hashing to c1e82635b3d7facb5d9b45719f40b4cd

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a - t1.b AS col_3, t1.b - t1.c AS col_4
---- hash rowsort
21 tuples hashing to c1e82635b3d7facb5d9b45719f40b4cd

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a - t1.b AS col_3, t1.b - t1.c AS col_4 ORDER BY col_3, col_4
---- hash rowsort
21 tuples hashing to c1e82635b3d7facb5d9b45719f40b4cd

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND t1.a > t1.b RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2
---- hash rowsort
6 tuples hashing to 2c0f6ec6275ba6c5272610a42842bac0

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND t1.a > t1.b RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2 ORDER BY col_1, col_2
---- hash rowsort
6 tuples hashing to 2c0f6ec6275ba6c5272610a42842bac0

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND t1.b > t1.c RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2
---- hash rowsort
6 tuples hashing to 2c0f6ec6275ba6c5272610a42842bac0

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND t1.b > t1.c RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2 ORDER BY col_2, col_1
---- hash rowsort
6 tuples hashing to 2c0f6ec6275ba6c5272610a42842bac0

-STATEMENT MATCH (t1:t1) RETURN t1.d AS col_1, abs(t1.b - t1.c) AS col_2
---- hash rowsort
30 tuples hashing to 00d4ab74410d8ac671760d7198435203

-STATEMENT MATCH (t1:t1) RETURN t1.d AS col_1, abs(t1.b - t1.c) AS col_2 ORDER BY col_2, col_1
---- hash rowsort
30 tuples hashing to 00d4ab74410d8ac671760d7198435203

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN abs(t1.b - t1.c) AS col_1, t1.c - t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.b - t1.c AS col_5, t1.a - t1.b AS col_6, t1.e AS col_7
---- hash rowsort
15 tuples hashing to 3e83008eb896a69947fcb2f5c00261ba

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN abs(t1.b - t1.c) AS col_1, t1.c - t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.b - t1.c AS col_5, t1.a - t1.b AS col_6, t1.e AS col_7 ORDER BY col_7, col_6, col_5, col_3
---- hash rowsort
15 tuples hashing to 3e83008eb896a69947fcb2f5c00261ba

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.b - t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.a AS col_3, t1.d - t1.e AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5
---- hash rowsort
8 tuples hashing to b20721d73ba3f6a923266e8b71e69295

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.b - t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.a AS col_3, t1.d - t1.e AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5 ORDER BY col_3, col_5, col_2, col_4
---- hash rowsort
8 tuples hashing to b20721d73ba3f6a923266e8b71e69295

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND t1.a > t1.b AND t1.c > t1.d RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1
---- 4
222
333
444
555

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND t1.a > t1.b AND t1.c > t1.d RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1 ORDER BY col_1
---- 4
222
333
444
555

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND NOT (t1.d >= 110 AND t1.d <= 150) AND t1.c > t1.d RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1
---- 4
222
333
444
555

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND NOT (t1.d >= 110 AND t1.d <= 150) AND t1.c > t1.d RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1 ORDER BY col_1
---- 4
222
333
444
555

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND NOT (t1.d >= 110 AND t1.d <= 150) AND t1.a > t1.b RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1
---- 4
222
333
444
555

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND NOT (t1.d >= 110 AND t1.d <= 150) AND t1.a > t1.b RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1 ORDER BY col_1
---- 4
222
333
444
555

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.c > t1.d RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a - t1.b AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.d AS col_5, t1.b - t1.c AS col_6
---- hash rowsort
22 tuples hashing to d647e0271e7dcd20be4b01806dc9049c

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.c > t1.d RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a - t1.b AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.d AS col_5, t1.b - t1.c AS col_6 ORDER BY col_3, col_6, col_5, col_1
---- hash rowsort
22 tuples hashing to d647e0271e7dcd20be4b01806dc9049c

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.c > t1.d OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a - t1.b AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.d AS col_5, t1.b - t1.c AS col_6
---- hash rowsort
22 tuples hashing to d647e0271e7dcd20be4b01806dc9049c

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.c > t1.d OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a - t1.b AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.d AS col_5, t1.b - t1.c AS col_6 ORDER BY col_1, col_3, col_4, col_6, col_5, col_2
---- hash rowsort
22 tuples hashing to d647e0271e7dcd20be4b01806dc9049c

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.c > t1.d RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a - t1.b AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.d AS col_5, t1.b - t1.c AS col_6
---- hash rowsort
22 tuples hashing to d647e0271e7dcd20be4b01806dc9049c

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.c > t1.d RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a - t1.b AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.d AS col_5, t1.b - t1.c AS col_6 ORDER BY col_5, col_1
---- hash rowsort
22 tuples hashing to d647e0271e7dcd20be4b01806dc9049c

-STATEMENT MATCH (t1:t1) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.d - t1.e AS col_2, t1.a + t1.b * 2 AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4
---- hash rowsort
30 tuples hashing to 16464527e24811f4febac77ea834135d

-STATEMENT MATCH (t1:t1) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.d - t1.e AS col_2, t1.a + t1.b * 2 AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4 ORDER BY col_2, col_4, col_1, col_3
---- hash rowsort
30 tuples hashing to 16464527e24811f4febac77ea834135d

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.b - t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2
---- hash rowsort
10 tuples hashing to 6fd9b50aa7457890a85c270b8a4f1525

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.b - t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2 ORDER BY col_2, col_1
---- hash rowsort
10 tuples hashing to 6fd9b50aa7457890a85c270b8a4f1525

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.d > t1.e RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, abs(t1.a) AS col_2, abs(t1.b - t1.c) AS col_3, t1.a - t1.b AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, t1.c - t1.d AS col_6
---- hash rowsort
12 tuples hashing to ead099d9e1a14c3c5109d016773391b0

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.d > t1.e RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, abs(t1.a) AS col_2, abs(t1.b - t1.c) AS col_3, t1.a - t1.b AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, t1.c - t1.d AS col_6 ORDER BY col_5, col_2, col_1, col_3
---- hash rowsort
12 tuples hashing to ead099d9e1a14c3c5109d016773391b0

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, abs(t1.a) AS col_2, abs(t1.b - t1.c) AS col_3, t1.a - t1.b AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, t1.c - t1.d AS col_6
---- hash rowsort
12 tuples hashing to ead099d9e1a14c3c5109d016773391b0

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, abs(t1.a) AS col_2, abs(t1.b - t1.c) AS col_3, t1.a - t1.b AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, t1.c - t1.d AS col_6 ORDER BY col_1, col_4, col_3
---- hash rowsort
12 tuples hashing to ead099d9e1a14c3c5109d016773391b0

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, abs(t1.a) AS col_3
---- 2
107|635|107
127|760|127

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, abs(t1.a) AS col_3 ORDER BY col_3, col_1, col_2
---- 2
107|635|107
127|760|127

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR t1.d > t1.e RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a AS col_2, t1.e AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, t1.a + t1.b * 2 + t1.c * 3 AS col_6
---- hash rowsort
20 tuples hashing to 49200402fefc8a32ee212ece11bbc9b2

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR t1.d > t1.e RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a AS col_2, t1.e AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, t1.a + t1.b * 2 + t1.c * 3 AS col_6 ORDER BY col_2, col_1, col_3, col_5, col_6, col_4
---- hash rowsort
20 tuples hashing to 49200402fefc8a32ee212ece11bbc9b2

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.e AS col_2, abs(t1.a) AS col_3
---- hash rowsort
30 tuples hashing to ee68c9fb4d87c760d5e873f2e913c5a4

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.e AS col_2, abs(t1.a) AS col_3 ORDER BY col_2, col_1, col_3
---- hash rowsort
30 tuples hashing to ee68c9fb4d87c760d5e873f2e913c5a4

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1
---- 8
11
14
17
22
4
5
6
9

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1 ORDER BY col_1
---- 8
11
14
17
22
4
5
6
9

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.c AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.a - t1.b AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5, t1.d AS col_6
---- hash rowsort
15 tuples hashing to 29aa5114ddb75cbea4d8cc45fa4afd54

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.c AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.a - t1.b AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5, t1.d AS col_6 ORDER BY col_5, col_2, col_3, col_6, col_4, col_1
---- hash rowsort
15 tuples hashing to 29aa5114ddb75cbea4d8cc45fa4afd54

-STATEMENT MATCH (t1:t1) RETURN t1.b - t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, abs(t1.a) AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5
---- hash rowsort
30 tuples hashing to 354baf9bf652faec3b23d9dd96f3dcd7

-STATEMENT MATCH (t1:t1) RETURN t1.b - t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, abs(t1.a) AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5 ORDER BY col_4, col_1, col_5
---- hash rowsort
30 tuples hashing to 354baf9bf652faec3b23d9dd96f3dcd7

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.e AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.a - t1.b AS col_4, t1.d AS col_5
---- hash rowsort
26 tuples hashing to aaa3b65ee00e530554fa3a2333bbc4ee

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.e AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.a - t1.b AS col_4, t1.d AS col_5 ORDER BY col_5, col_3, col_2, col_4, col_1
---- hash rowsort
26 tuples hashing to aaa3b65ee00e530554fa3a2333bbc4ee

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.b > t1.c RETURN abs(t1.a) AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.b - t1.c AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5
---- hash rowsort
5 tuples hashing to f67c91cee8cbcab4101b0c4e9ea42a8b

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.b > t1.c RETURN abs(t1.a) AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.b - t1.c AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5 ORDER BY col_3, col_2, col_4, col_5, col_1
---- hash rowsort
5 tuples hashing to f67c91cee8cbcab4101b0c4e9ea42a8b

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN abs(t1.a) AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.b - t1.c AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5
---- hash rowsort
5 tuples hashing to f67c91cee8cbcab4101b0c4e9ea42a8b

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN abs(t1.a) AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.b - t1.c AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5 ORDER BY col_3, col_1, col_2, col_5
---- hash rowsort
5 tuples hashing to f67c91cee8cbcab4101b0c4e9ea42a8b

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, abs(t1.a) AS col_2, t1.a + t1.b * 2 AS col_3, t1.b AS col_4, t1.e AS col_5, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_6
---- hash rowsort
26 tuples hashing to 4d0ab061ded856d78530159d920fafd1

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, abs(t1.a) AS col_2, t1.a + t1.b * 2 AS col_3, t1.b AS col_4, t1.e AS col_5, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_6 ORDER BY col_1, col_3, col_5
---- hash rowsort
26 tuples hashing to 4d0ab061ded856d78530159d920fafd1

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.e > t1.c OR t1.e < t1.d) RETURN t1.c - t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.b AS col_3
---- hash rowsort
19 tuples hashing to 8f966a2a20167d48616300e9b21f073e

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.e > t1.c OR t1.e < t1.d) RETURN t1.c - t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.b AS col_3 ORDER BY col_1, col_3
---- hash rowsort
19 tuples hashing to 8f966a2a20167d48616300e9b21f073e

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.c - t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.b AS col_3
---- hash rowsort
19 tuples hashing to 8f966a2a20167d48616300e9b21f073e

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.c - t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.b AS col_3 ORDER BY col_3, col_1, col_2
---- hash rowsort
19 tuples hashing to 8f966a2a20167d48616300e9b21f073e

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR t1.b > t1.c RETURN t1.a - t1.b AS col_1, t1.a + t1.b * 2 AS col_2, t1.a AS col_3
---- hash rowsort
20 tuples hashing to 59d499d10435c069fa6a84e2d995bf33

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR t1.b > t1.c RETURN t1.a - t1.b AS col_1, t1.a + t1.b * 2 AS col_2, t1.a AS col_3 ORDER BY col_3, col_1
---- hash rowsort
20 tuples hashing to 59d499d10435c069fa6a84e2d995bf33

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR t1.d > t1.e RETURN t1.a - t1.b AS col_1, t1.a + t1.b * 2 AS col_2, t1.a AS col_3
---- hash rowsort
20 tuples hashing to 59d499d10435c069fa6a84e2d995bf33

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR t1.d > t1.e RETURN t1.a - t1.b AS col_1, t1.a + t1.b * 2 AS col_2, t1.a AS col_3 ORDER BY col_2, col_3, col_1
---- hash rowsort
20 tuples hashing to 59d499d10435c069fa6a84e2d995bf33

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.c > t1.d RETURN t1.e AS col_1, t1.b AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.a + t1.b * 2 AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_6
---- hash rowsort
10 tuples hashing to c211130e730d38e13bad6ff26cee19a9

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.c > t1.d RETURN t1.e AS col_1, t1.b AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.a + t1.b * 2 AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_6 ORDER BY col_5, col_4, col_3, col_6, col_2
---- hash rowsort
10 tuples hashing to c211130e730d38e13bad6ff26cee19a9

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.e AS col_1, t1.b AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.a + t1.b * 2 AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_6
---- hash rowsort
10 tuples hashing to c211130e730d38e13bad6ff26cee19a9

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.e AS col_1, t1.b AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.a + t1.b * 2 AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_6 ORDER BY col_1, col_2
---- hash rowsort
10 tuples hashing to c211130e730d38e13bad6ff26cee19a9

-STATEMENT MATCH (t1:t1) RETURN t1.a AS col_1
---- hash rowsort
30 tuples hashing to 9a6afb6b859fc856aafb6a7af11a38e4

-STATEMENT MATCH (t1:t1) RETURN t1.a AS col_1 ORDER BY col_1
---- hash rowsort
30 tuples hashing to 9a6afb6b859fc856aafb6a7af11a38e4

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, abs(t1.b - t1.c) AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4
---- hash rowsort
11 tuples hashing to 2a90f8140851a46adb39b25b04957845

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, abs(t1.b - t1.c) AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4 ORDER BY col_2, col_1
---- hash rowsort
11 tuples hashing to 2a90f8140851a46adb39b25b04957845

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.c > t1.d RETURN t1.a AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, abs(t1.b - t1.c) AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4
---- hash rowsort
11 tuples hashing to 2a90f8140851a46adb39b25b04957845

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.c > t1.d RETURN t1.a AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, abs(t1.b - t1.c) AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4 ORDER BY col_4, col_2, col_3, col_1
---- hash rowsort
11 tuples hashing to 2a90f8140851a46adb39b25b04957845

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR t1.a > t1.b OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.d - t1.e AS col_1, t1.e AS col_2, t1.b AS col_3, t1.c AS col_4, abs(t1.b - t1.c) AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_6, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_7
---- hash rowsort
27 tuples hashing to 9f4ad7fd9a7988f4345043e6a470f0eb

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR t1.a > t1.b OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.d - t1.e AS col_1, t1.e AS col_2, t1.b AS col_3, t1.c AS col_4, abs(t1.b - t1.c) AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_6, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_7 ORDER BY col_2, col_1, col_6, col_3
---- hash rowsort
27 tuples hashing to 9f4ad7fd9a7988f4345043e6a470f0eb

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.e > t1.c OR t1.e < t1.d) OR t1.a > t1.b RETURN t1.d - t1.e AS col_1, t1.e AS col_2, t1.b AS col_3, t1.c AS col_4, abs(t1.b - t1.c) AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_6, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_7
---- hash rowsort
27 tuples hashing to 9f4ad7fd9a7988f4345043e6a470f0eb

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.e > t1.c OR t1.e < t1.d) OR t1.a > t1.b RETURN t1.d - t1.e AS col_1, t1.e AS col_2, t1.b AS col_3, t1.c AS col_4, abs(t1.b - t1.c) AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_6, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_7 ORDER BY col_4, col_7, col_1, col_2, col_6
---- hash rowsort
27 tuples hashing to 9f4ad7fd9a7988f4345043e6a470f0eb

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR t1.a > t1.b OR t1.b > t1.c RETURN t1.d - t1.e AS col_1, t1.e AS col_2, t1.b AS col_3, t1.c AS col_4, abs(t1.b - t1.c) AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_6, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_7
---- hash rowsort
27 tuples hashing to 9f4ad7fd9a7988f4345043e6a470f0eb

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR t1.a > t1.b OR t1.b > t1.c RETURN t1.d - t1.e AS col_1, t1.e AS col_2, t1.b AS col_3, t1.c AS col_4, abs(t1.b - t1.c) AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_6, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_7 ORDER BY col_7, col_2, col_6, col_1, col_5, col_4, col_3
---- hash rowsort
27 tuples hashing to 9f4ad7fd9a7988f4345043e6a470f0eb

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, t1.a + t1.b * 2 AS col_5, t1.d - t1.e AS col_6
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, t1.a + t1.b * 2 AS col_5, t1.d - t1.e AS col_6 ORDER BY col_4, col_5, col_6
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND t1.c > t1.d AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, t1.a + t1.b * 2 AS col_5, t1.d - t1.e AS col_6
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND t1.c > t1.d AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, t1.a + t1.b * 2 AS col_5, t1.d - t1.e AS col_6 ORDER BY col_4, col_6, col_2, col_1, col_5, col_3
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.c - t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4
---- hash rowsort
11 tuples hashing to b0e581470db2e8b2cc006ff316140cf7

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.c - t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4 ORDER BY col_4, col_2, col_1
---- hash rowsort
11 tuples hashing to b0e581470db2e8b2cc006ff316140cf7

-STATEMENT MATCH (t1:t1) RETURN t1.b AS col_1
---- hash rowsort
30 tuples hashing to 9697cb5cadc4331af70386531f7792a9

-STATEMENT MATCH (t1:t1) RETURN t1.b AS col_1 ORDER BY col_1
---- hash rowsort
30 tuples hashing to 9697cb5cadc4331af70386531f7792a9

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND t1.d > t1.e AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.d AS col_1, t1.a + t1.b * 2 AS col_2
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND t1.d > t1.e AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.d AS col_1, t1.a + t1.b * 2 AS col_2 ORDER BY col_1, col_2
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.d > t1.e RETURN t1.d AS col_1, t1.a + t1.b * 2 AS col_2
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.d > t1.e RETURN t1.d AS col_1, t1.a + t1.b * 2 AS col_2 ORDER BY col_2, col_1
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND t1.d > t1.e RETURN t1.d AS col_1, t1.a + t1.b * 2 AS col_2
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND t1.d > t1.e RETURN t1.d AS col_1, t1.a + t1.b * 2 AS col_2 ORDER BY col_2, col_1
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.e > t1.a AND t1.e < t1.b) OR t1.b > t1.c RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a AS col_2
---- hash rowsort
23 tuples hashing to 4e3336bea5bf7984bcab041050e540ec

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.e > t1.a AND t1.e < t1.b) OR t1.b > t1.c RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a AS col_2 ORDER BY col_2, col_1
---- hash rowsort
23 tuples hashing to 4e3336bea5bf7984bcab041050e540ec

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR t1.b > t1.c OR (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a AS col_2
---- hash rowsort
23 tuples hashing to 4e3336bea5bf7984bcab041050e540ec

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR t1.b > t1.c OR (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a AS col_2 ORDER BY col_2, col_1
---- hash rowsort
23 tuples hashing to 4e3336bea5bf7984bcab041050e540ec

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 AS col_1, abs(t1.b - t1.c) AS col_2
---- hash rowsort
30 tuples hashing to 1bf213ae7ba406909284a56a0a055f68

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 AS col_1, abs(t1.b - t1.c) AS col_2 ORDER BY col_1, col_2
---- hash rowsort
30 tuples hashing to 1bf213ae7ba406909284a56a0a055f68

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.c > t1.d RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.e AS col_2, abs(t1.b - t1.c) AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.c - t1.d AS col_5
---- hash rowsort
13 tuples hashing to d0755f06ce4481afa6b7f87a5410f7ae

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.c > t1.d RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.e AS col_2, abs(t1.b - t1.c) AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.c - t1.d AS col_5 ORDER BY col_1, col_2, col_3, col_5, col_4
---- hash rowsort
13 tuples hashing to d0755f06ce4481afa6b7f87a5410f7ae

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN abs(t1.b - t1.c) AS col_1, t1.d - t1.e AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4
---- hash rowsort
5 tuples hashing to 2106e5a753ac202c6064546142a3578f

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN abs(t1.b - t1.c) AS col_1, t1.d - t1.e AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4 ORDER BY col_1, col_3, col_4, col_2
---- hash rowsort
5 tuples hashing to 2106e5a753ac202c6064546142a3578f

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a - t1.b AS col_3, t1.b - t1.c AS col_4, abs(t1.b - t1.c) AS col_5, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_6
---- hash rowsort
21 tuples hashing to 92b9ad83b8c6fc2f68ce4915d40e2834

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a - t1.b AS col_3, t1.b - t1.c AS col_4, abs(t1.b - t1.c) AS col_5, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_6 ORDER BY col_6, col_1, col_5, col_4
---- hash rowsort
21 tuples hashing to 92b9ad83b8c6fc2f68ce4915d40e2834

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN abs(t1.b - t1.c) AS col_1
---- hash rowsort
16 tuples hashing to 5cbad2abd3a002a9adb35870fd42e9fa

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN abs(t1.b - t1.c) AS col_1 ORDER BY col_1
---- hash rowsort
16 tuples hashing to 5cbad2abd3a002a9adb35870fd42e9fa

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.e > t1.a AND t1.e < t1.b) RETURN abs(t1.b - t1.c) AS col_1
---- hash rowsort
16 tuples hashing to 5cbad2abd3a002a9adb35870fd42e9fa

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.e > t1.a AND t1.e < t1.b) RETURN abs(t1.b - t1.c) AS col_1 ORDER BY col_1
---- hash rowsort
16 tuples hashing to 5cbad2abd3a002a9adb35870fd42e9fa

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.e AS col_4
---- hash rowsort
8 tuples hashing to 81c854081b1d86fd5d815aee775e79da

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.e AS col_4 ORDER BY col_2, col_1
---- hash rowsort
8 tuples hashing to 81c854081b1d86fd5d815aee775e79da

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, abs(t1.b - t1.c) AS col_2, t1.c AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.c - t1.d AS col_5
---- hash rowsort
19 tuples hashing to 7811b63159124b3a5f973e1d6733e15e

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, abs(t1.b - t1.c) AS col_2, t1.c AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.c - t1.d AS col_5 ORDER BY col_1, col_5, col_3, col_4
---- hash rowsort
19 tuples hashing to 7811b63159124b3a5f973e1d6733e15e

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.b > t1.c RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, abs(t1.b - t1.c) AS col_2, t1.c AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.c - t1.d AS col_5
---- hash rowsort
19 tuples hashing to 7811b63159124b3a5f973e1d6733e15e

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.b > t1.c RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, abs(t1.b - t1.c) AS col_2, t1.c AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.c - t1.d AS col_5 ORDER BY col_4, col_2, col_5, col_3
---- hash rowsort
19 tuples hashing to 7811b63159124b3a5f973e1d6733e15e

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.b > t1.c AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, abs(t1.b - t1.c) AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.c AS col_4
---- hash rowsort
4 tuples hashing to 42d8187b851bde596da680e62bd20ad1

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.b > t1.c AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, abs(t1.b - t1.c) AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.c AS col_4 ORDER BY col_2, col_1
---- hash rowsort
4 tuples hashing to 42d8187b851bde596da680e62bd20ad1

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.b > t1.c RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, abs(t1.b - t1.c) AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.c AS col_4
---- hash rowsort
4 tuples hashing to 42d8187b851bde596da680e62bd20ad1

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.b > t1.c RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, abs(t1.b - t1.c) AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.c AS col_4 ORDER BY col_4, col_3, col_2
---- hash rowsort
4 tuples hashing to 42d8187b851bde596da680e62bd20ad1

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.b > t1.c AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, abs(t1.b - t1.c) AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.c AS col_4
---- hash rowsort
4 tuples hashing to 42d8187b851bde596da680e62bd20ad1

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.b > t1.c AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, abs(t1.b - t1.c) AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.c AS col_4 ORDER BY col_3, col_1, col_4
---- hash rowsort
4 tuples hashing to 42d8187b851bde596da680e62bd20ad1

-STATEMENT MATCH (t1:t1) RETURN t1.e AS col_1, t1.d - t1.e AS col_2, abs(t1.a) AS col_3, t1.b - t1.c AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5
---- hash rowsort
30 tuples hashing to 27f32d662f3d6d294760141373c8ce9e

-STATEMENT MATCH (t1:t1) RETURN t1.e AS col_1, t1.d - t1.e AS col_2, abs(t1.a) AS col_3, t1.b - t1.c AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5 ORDER BY col_5, col_3, col_4
---- hash rowsort
30 tuples hashing to 27f32d662f3d6d294760141373c8ce9e

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1
---- 8
1000
1096
1180
1360
793
827
851
940

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1 ORDER BY col_1
---- 8
1000
1096
1180
1360
793
827
851
940

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR t1.d > t1.e OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 AS col_1, t1.d AS col_2, t1.e AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5
---- hash rowsort
25 tuples hashing to 53f534fc08db58afb6497d397bd5bb95

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR t1.d > t1.e OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 AS col_1, t1.d AS col_2, t1.e AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5 ORDER BY col_2, col_4
---- hash rowsort
25 tuples hashing to 53f534fc08db58afb6497d397bd5bb95

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.a > t1.b OR t1.d > t1.e RETURN t1.a + t1.b * 2 AS col_1, t1.d AS col_2, t1.e AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5
---- hash rowsort
25 tuples hashing to 53f534fc08db58afb6497d397bd5bb95

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.a > t1.b OR t1.d > t1.e RETURN t1.a + t1.b * 2 AS col_1, t1.d AS col_2, t1.e AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5 ORDER BY col_1, col_3, col_2, col_5, col_4
---- hash rowsort
25 tuples hashing to 53f534fc08db58afb6497d397bd5bb95

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.a > t1.b RETURN t1.a + t1.b * 2 AS col_1, t1.d AS col_2, t1.e AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5
---- hash rowsort
25 tuples hashing to 53f534fc08db58afb6497d397bd5bb95

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.a > t1.b RETURN t1.a + t1.b * 2 AS col_1, t1.d AS col_2, t1.e AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5 ORDER BY col_1, col_2, col_5, col_4, col_3
---- hash rowsort
25 tuples hashing to 53f534fc08db58afb6497d397bd5bb95

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) RETURN t1.b AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.e AS col_4
---- hash rowsort
21 tuples hashing to 6619e98949acd58a236485d6798b4082

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) RETURN t1.b AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.e AS col_4 ORDER BY col_3, col_1
---- hash rowsort
21 tuples hashing to 6619e98949acd58a236485d6798b4082

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.e AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5
---- hash rowsort
2 tuples hashing to 99ad44057ef6c31bb7427cf8ad3c0d26

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.e AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5 ORDER BY col_2, col_1, col_3
---- hash rowsort
2 tuples hashing to 99ad44057ef6c31bb7427cf8ad3c0d26

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.e AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5
---- hash rowsort
2 tuples hashing to 99ad44057ef6c31bb7427cf8ad3c0d26

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.e AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5 ORDER BY col_3, col_4, col_1, col_5
---- hash rowsort
2 tuples hashing to 99ad44057ef6c31bb7427cf8ad3c0d26

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e > t1.c OR t1.e < t1.d) RETURN t1.c - t1.d AS col_1, t1.c AS col_2, abs(t1.a) AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4
---- hash rowsort
13 tuples hashing to 043a1bf0ea90cf65a472357be8cbec27

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e > t1.c OR t1.e < t1.d) RETURN t1.c - t1.d AS col_1, t1.c AS col_2, abs(t1.a) AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4 ORDER BY col_2, col_4, col_3, col_1
---- hash rowsort
13 tuples hashing to 043a1bf0ea90cf65a472357be8cbec27

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.c - t1.d AS col_1, t1.c AS col_2, abs(t1.a) AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4
---- hash rowsort
13 tuples hashing to 043a1bf0ea90cf65a472357be8cbec27

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.c - t1.d AS col_1, t1.c AS col_2, abs(t1.a) AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4 ORDER BY col_3, col_1
---- hash rowsort
13 tuples hashing to 043a1bf0ea90cf65a472357be8cbec27

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.c AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, t1.d AS col_5
---- hash rowsort
30 tuples hashing to 865170780eff2a2d4fea71d70cee629f

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.c AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, t1.d AS col_5 ORDER BY col_3, col_1, col_5, col_4
---- hash rowsort
30 tuples hashing to 865170780eff2a2d4fea71d70cee629f

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.b - t1.c AS col_1, t1.d AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4
---- hash rowsort
8 tuples hashing to c75b58a5e64e9082eface00abf923bd4

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.b - t1.c AS col_1, t1.d AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4 ORDER BY col_3, col_4
---- hash rowsort
8 tuples hashing to c75b58a5e64e9082eface00abf923bd4

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.c > t1.d RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.a AS col_4, t1.b - t1.c AS col_5, t1.c - t1.d AS col_6, abs(t1.a) AS col_7
---- hash rowsort
23 tuples hashing to 0075fc322441a6991573270f863c003e

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.c > t1.d RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.a AS col_4, t1.b - t1.c AS col_5, t1.c - t1.d AS col_6, abs(t1.a) AS col_7 ORDER BY col_7, col_6, col_2
---- hash rowsort
23 tuples hashing to 0075fc322441a6991573270f863c003e

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR t1.c > t1.d OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.a AS col_4, t1.b - t1.c AS col_5, t1.c - t1.d AS col_6, abs(t1.a) AS col_7
---- hash rowsort
23 tuples hashing to 0075fc322441a6991573270f863c003e

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR t1.c > t1.d OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.a AS col_4, t1.b - t1.c AS col_5, t1.c - t1.d AS col_6, abs(t1.a) AS col_7 ORDER BY col_4, col_3, col_5
---- hash rowsort
23 tuples hashing to 0075fc322441a6991573270f863c003e

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR t1.d > t1.e OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.a AS col_4, t1.b - t1.c AS col_5, t1.c - t1.d AS col_6, abs(t1.a) AS col_7
---- hash rowsort
23 tuples hashing to 0075fc322441a6991573270f863c003e

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR t1.d > t1.e OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.a AS col_4, t1.b - t1.c AS col_5, t1.c - t1.d AS col_6, abs(t1.a) AS col_7 ORDER BY col_7, col_1, col_3, col_2, col_6, col_5
---- hash rowsort
23 tuples hashing to 0075fc322441a6991573270f863c003e

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.b AS col_5, abs(t1.a) AS col_6
---- hash rowsort
30 tuples hashing to b995fd3ed3a0e0bb771def6e5722bb0a

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.b AS col_5, abs(t1.a) AS col_6 ORDER BY col_1, col_2, col_5, col_4, col_3
---- hash rowsort
30 tuples hashing to b995fd3ed3a0e0bb771def6e5722bb0a

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.a - t1.b AS col_2, t1.d AS col_3
---- hash rowsort
8 tuples hashing to 6b5bb07ceb8e20f75fc46fed8f804e00

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.a - t1.b AS col_2, t1.d AS col_3 ORDER BY col_3, col_2
---- hash rowsort
8 tuples hashing to 6b5bb07ceb8e20f75fc46fed8f804e00

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5, t1.b AS col_6
---- hash rowsort
13 tuples hashing to eac728c6ddb91ccd31a0d1128417639c

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5, t1.b AS col_6 ORDER BY col_2, col_4, col_5, col_6
---- hash rowsort
13 tuples hashing to eac728c6ddb91ccd31a0d1128417639c

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a - t1.b AS col_1
---- hash rowsort
22 tuples hashing to 0bdc2e35193aab199c06b8b1e1fbe779

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a - t1.b AS col_1 ORDER BY col_1
---- hash rowsort
22 tuples hashing to 0bdc2e35193aab199c06b8b1e1fbe779

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.e > t1.c OR t1.e < t1.d) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a - t1.b AS col_1
---- hash rowsort
22 tuples hashing to 0bdc2e35193aab199c06b8b1e1fbe779

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.e > t1.c OR t1.e < t1.d) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a - t1.b AS col_1 ORDER BY col_1
---- hash rowsort
22 tuples hashing to 0bdc2e35193aab199c06b8b1e1fbe779

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a - t1.b AS col_1
---- hash rowsort
22 tuples hashing to 0bdc2e35193aab199c06b8b1e1fbe779

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a - t1.b AS col_1 ORDER BY col_1
---- hash rowsort
22 tuples hashing to 0bdc2e35193aab199c06b8b1e1fbe779

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.e AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.d AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_6, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_7
---- hash rowsort
8 tuples hashing to ea44c18e5d7f35f44d27e96d1a548408

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.e AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.d AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_6, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_7 ORDER BY col_7, col_4, col_3, col_5, col_2, col_1
---- hash rowsort
8 tuples hashing to ea44c18e5d7f35f44d27e96d1a548408

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.a > t1.b AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a + t1.b * 2 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4
---- 2
1325|391|444|4
1828|544|333|14

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.a > t1.b AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a + t1.b * 2 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4 ORDER BY col_3, col_2
---- 2
1325|391|444|4
1828|544|333|14

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a + t1.b * 2 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4
---- 2
1325|391|444|4
1828|544|333|14

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a + t1.b * 2 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4 ORDER BY col_2, col_1, col_3, col_4
---- 2
1325|391|444|4
1828|544|333|14

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.a > t1.b RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a + t1.b * 2 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4
---- 2
1325|391|444|4
1828|544|333|14

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.a > t1.b RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a + t1.b * 2 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4 ORDER BY col_2, col_4, col_3, col_1
---- 2
1325|391|444|4
1828|544|333|14

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a + t1.b * 2 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4
---- 2
1325|391|444|4
1828|544|333|14

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a + t1.b * 2 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4 ORDER BY col_2, col_1, col_4
---- 2
1325|391|444|4
1828|544|333|14

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.a > t1.b RETURN t1.e AS col_1
---- hash rowsort
16 tuples hashing to 7d839bd833a63d8738f66b90ff985dab

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.a > t1.b RETURN t1.e AS col_1 ORDER BY col_1
---- hash rowsort
16 tuples hashing to 7d839bd833a63d8738f66b90ff985dab

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.e AS col_1
---- hash rowsort
16 tuples hashing to 7d839bd833a63d8738f66b90ff985dab

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.e AS col_1 ORDER BY col_1
---- hash rowsort
16 tuples hashing to 7d839bd833a63d8738f66b90ff985dab

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.b > t1.c RETURN t1.e AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.b - t1.c AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.a + t1.b * 2 AS col_5
---- hash rowsort
27 tuples hashing to e7aa3c5e3a24b65ef956b409a661d477

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.b > t1.c RETURN t1.e AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.b - t1.c AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.a + t1.b * 2 AS col_5 ORDER BY col_4, col_1
---- hash rowsort
27 tuples hashing to e7aa3c5e3a24b65ef956b409a661d477

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.b > t1.c OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.e AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.b - t1.c AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.a + t1.b * 2 AS col_5
---- hash rowsort
27 tuples hashing to e7aa3c5e3a24b65ef956b409a661d477

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.b > t1.c OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.e AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.b - t1.c AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.a + t1.b * 2 AS col_5 ORDER BY col_5, col_2, col_1, col_4, col_3
---- hash rowsort
27 tuples hashing to e7aa3c5e3a24b65ef956b409a661d477

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR t1.b > t1.c OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.e AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.b - t1.c AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.a + t1.b * 2 AS col_5
---- hash rowsort
27 tuples hashing to e7aa3c5e3a24b65ef956b409a661d477

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR t1.b > t1.c OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.e AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.b - t1.c AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.a + t1.b * 2 AS col_5 ORDER BY col_1, col_5, col_3, col_4, col_2
---- hash rowsort
27 tuples hashing to e7aa3c5e3a24b65ef956b409a661d477

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR t1.d > t1.e RETURN t1.d - t1.e AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2
---- hash rowsort
26 tuples hashing to f1d3044a0e85a2767084245edcb2f4a6

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR t1.d > t1.e RETURN t1.d - t1.e AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2 ORDER BY col_2, col_1
---- hash rowsort
26 tuples hashing to f1d3044a0e85a2767084245edcb2f4a6

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.e > t1.a AND t1.e < t1.b) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.d - t1.e AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2
---- hash rowsort
26 tuples hashing to f1d3044a0e85a2767084245edcb2f4a6

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.e > t1.a AND t1.e < t1.b) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.d - t1.e AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2 ORDER BY col_2, col_1
---- hash rowsort
26 tuples hashing to f1d3044a0e85a2767084245edcb2f4a6

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR t1.d > t1.e OR (t1.e > t1.a AND t1.e < t1.b) RETURN t1.d - t1.e AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2
---- hash rowsort
26 tuples hashing to f1d3044a0e85a2767084245edcb2f4a6

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR t1.d > t1.e OR (t1.e > t1.a AND t1.e < t1.b) RETURN t1.d - t1.e AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2 ORDER BY col_1, col_2
---- hash rowsort
26 tuples hashing to f1d3044a0e85a2767084245edcb2f4a6

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR t1.a > t1.b OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.d AS col_3
---- hash rowsort
25 tuples hashing to cf041186510209396f2e00bd4f59e36f

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR t1.a > t1.b OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.d AS col_3 ORDER BY col_2, col_3, col_1
---- hash rowsort
25 tuples hashing to cf041186510209396f2e00bd4f59e36f

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.d AS col_3
---- hash rowsort
25 tuples hashing to cf041186510209396f2e00bd4f59e36f

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.d AS col_3 ORDER BY col_1, col_3, col_2
---- hash rowsort
25 tuples hashing to cf041186510209396f2e00bd4f59e36f

-STATEMENT MATCH (t1:t1) RETURN t1.c AS col_1, t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.d - t1.e AS col_4, t1.b - t1.c AS col_5, t1.a + t1.b * 2 AS col_6
---- hash rowsort
30 tuples hashing to efbf7446555a01f143d113eadb8baae3

-STATEMENT MATCH (t1:t1) RETURN t1.c AS col_1, t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.d - t1.e AS col_4, t1.b - t1.c AS col_5, t1.a + t1.b * 2 AS col_6 ORDER BY col_5, col_4, col_3
---- hash rowsort
30 tuples hashing to efbf7446555a01f143d113eadb8baae3

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.b AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.a AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, t1.b - t1.c AS col_5, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_6, t1.c - t1.d AS col_7
---- hash rowsort
30 tuples hashing to 7de752c4774915444d60e77708b2048c

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.b AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.a AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, t1.b - t1.c AS col_5, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_6, t1.c - t1.d AS col_7 ORDER BY col_1, col_6, col_5, col_4, col_7, col_2
---- hash rowsort
30 tuples hashing to 7de752c4774915444d60e77708b2048c

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.a + t1.b * 2 AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, t1.c AS col_5, t1.c - t1.d AS col_6
---- hash rowsort
11 tuples hashing to 33243dacc3029b5e540ce9e560aac25f

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.a + t1.b * 2 AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, t1.c AS col_5, t1.c - t1.d AS col_6 ORDER BY col_2, col_4, col_6, col_5, col_3
---- hash rowsort
11 tuples hashing to 33243dacc3029b5e540ce9e560aac25f

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.a > t1.b OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, abs(t1.b - t1.c) AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3
---- hash rowsort
22 tuples hashing to 7cbbec5d5fa1bb9944f843aa4c37f973

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.a > t1.b OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, abs(t1.b - t1.c) AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3 ORDER BY col_2, col_3
---- hash rowsort
22 tuples hashing to 7cbbec5d5fa1bb9944f843aa4c37f973

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.a > t1.b RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, abs(t1.b - t1.c) AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3
---- hash rowsort
22 tuples hashing to 7cbbec5d5fa1bb9944f843aa4c37f973

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.a > t1.b RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, abs(t1.b - t1.c) AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3 ORDER BY col_1, col_3, col_2
---- hash rowsort
22 tuples hashing to 7cbbec5d5fa1bb9944f843aa4c37f973

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, abs(t1.b - t1.c) AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5, t1.a AS col_6
---- 1
0|760|4|3|1902|127

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, abs(t1.b - t1.c) AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5, t1.a AS col_6 ORDER BY col_1, col_6, col_4, col_3, col_5
---- 1
0|760|4|3|1902|127

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, abs(t1.b - t1.c) AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5, t1.a AS col_6
---- 1
0|760|4|3|1902|127

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, abs(t1.b - t1.c) AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5, t1.a AS col_6 ORDER BY col_6, col_4, col_2, col_5, col_3
---- 1
0|760|4|3|1902|127

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, abs(t1.a) AS col_2, abs(t1.b - t1.c) AS col_3, t1.a + t1.b * 2 AS col_4, t1.a - t1.b AS col_5
---- hash rowsort
8 tuples hashing to b9cade3e1ff5363496ae3fe0437b7238

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, abs(t1.a) AS col_2, abs(t1.b - t1.c) AS col_3, t1.a + t1.b * 2 AS col_4, t1.a - t1.b AS col_5 ORDER BY col_3, col_2, col_1, col_4, col_5
---- hash rowsort
8 tuples hashing to b9cade3e1ff5363496ae3fe0437b7238

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.d > t1.e RETURN t1.e AS col_1
---- hash rowsort
9 tuples hashing to b54db3efe6d10d8d5c23d5b40a6e98f4

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.d > t1.e RETURN t1.e AS col_1 ORDER BY col_1
---- hash rowsort
9 tuples hashing to b54db3efe6d10d8d5c23d5b40a6e98f4

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.e AS col_1
---- hash rowsort
9 tuples hashing to b54db3efe6d10d8d5c23d5b40a6e98f4

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.e AS col_1 ORDER BY col_1
---- hash rowsort
9 tuples hashing to b54db3efe6d10d8d5c23d5b40a6e98f4

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a + t1.b * 2 AS col_1, abs(t1.a) AS col_2
---- hash rowsort
17 tuples hashing to 431dcbdecbfe1b6d6b282b2f49c172ac

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a + t1.b * 2 AS col_1, abs(t1.a) AS col_2 ORDER BY col_1, col_2
---- hash rowsort
17 tuples hashing to 431dcbdecbfe1b6d6b282b2f49c172ac

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e > t1.a AND t1.e < t1.b) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3
---- 2
21|220|1338
26|245|1484

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e > t1.a AND t1.e < t1.b) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3 ORDER BY col_2, col_3
---- 2
21|220|1338
26|245|1484

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3
---- 2
21|220|1338
26|245|1484

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3 ORDER BY col_3, col_2
---- 2
21|220|1338
26|245|1484

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.c - t1.d AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.d AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_6, abs(t1.a) AS col_7
---- hash rowsort
10 tuples hashing to 6e510133a22ce9d30f9d1179329b8878

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.c - t1.d AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.d AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_6, abs(t1.a) AS col_7 ORDER BY col_3, col_7
---- hash rowsort
10 tuples hashing to 6e510133a22ce9d30f9d1179329b8878

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.d AS col_2, t1.a + t1.b * 2 AS col_3, t1.c - t1.d AS col_4, t1.e AS col_5, t1.b - t1.c AS col_6
---- hash rowsort
30 tuples hashing to bc4513b12162a93825e9bfea4fe97a1d

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.d AS col_2, t1.a + t1.b * 2 AS col_3, t1.c - t1.d AS col_4, t1.e AS col_5, t1.b - t1.c AS col_6 ORDER BY col_4, col_2, col_5
---- hash rowsort
30 tuples hashing to bc4513b12162a93825e9bfea4fe97a1d

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, abs(t1.a) AS col_2, t1.d - t1.e AS col_3
---- 2
2226|220|1
2476|245|2

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, abs(t1.a) AS col_2, t1.d - t1.e AS col_3 ORDER BY col_1, col_3
---- 2
2226|220|1
2476|245|2

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, abs(t1.a) AS col_2, t1.d - t1.e AS col_3
---- 2
2226|220|1
2476|245|2

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, abs(t1.a) AS col_2, t1.d - t1.e AS col_3 ORDER BY col_2, col_1, col_3
---- 2
2226|220|1
2476|245|2

-STATEMENT MATCH (t1:t1) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.c - t1.d AS col_2, t1.d - t1.e AS col_3, t1.c AS col_4
---- hash rowsort
30 tuples hashing to 6f7f6e9e0a1d7b8bf7c070d9ce0a22c0

-STATEMENT MATCH (t1:t1) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.c - t1.d AS col_2, t1.d - t1.e AS col_3, t1.c AS col_4 ORDER BY col_3, col_2, col_1, col_4
---- hash rowsort
30 tuples hashing to 6f7f6e9e0a1d7b8bf7c070d9ce0a22c0

-STATEMENT MATCH (t1:t1) RETURN t1.d - t1.e AS col_1
---- hash rowsort
30 tuples hashing to 9e2d6381b04ea314cd79c5fc9325b30e

-STATEMENT MATCH (t1:t1) RETURN t1.d - t1.e AS col_1 ORDER BY col_1
---- hash rowsort
30 tuples hashing to 9e2d6381b04ea314cd79c5fc9325b30e

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.b > t1.c RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.b AS col_3
---- 1
333|3|129

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.b > t1.c RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.b AS col_3 ORDER BY col_2, col_3
---- 1
333|3|129

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND t1.b > t1.c RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.b AS col_3
---- 1
333|3|129

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND t1.b > t1.c RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.b AS col_3 ORDER BY col_1, col_3, col_2
---- 1
333|3|129

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.b > t1.c AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.b AS col_3
---- 1
333|3|129

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.b > t1.c AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.b AS col_3 ORDER BY col_1, col_2, col_3
---- 1
333|3|129

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.c AS col_1, t1.a + t1.b * 2 AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, abs(t1.b - t1.c) AS col_5
---- hash rowsort
22 tuples hashing to 4323943c45e250340feb8d5708b8e62f

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.c AS col_1, t1.a + t1.b * 2 AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, abs(t1.b - t1.c) AS col_5 ORDER BY col_3, col_1, col_5, col_2, col_4
---- hash rowsort
22 tuples hashing to 4323943c45e250340feb8d5708b8e62f

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.c AS col_1, t1.a + t1.b * 2 AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, abs(t1.b - t1.c) AS col_5
---- hash rowsort
22 tuples hashing to 4323943c45e250340feb8d5708b8e62f

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.c AS col_1, t1.a + t1.b * 2 AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, abs(t1.b - t1.c) AS col_5 ORDER BY col_3, col_4, col_5, col_1
---- hash rowsort
22 tuples hashing to 4323943c45e250340feb8d5708b8e62f

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.d - t1.e AS col_1, t1.e AS col_2
---- hash rowsort
8 tuples hashing to 5c9ea7d17d4d991b597a507c0c7402e0

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.d - t1.e AS col_1, t1.e AS col_2 ORDER BY col_2, col_1
---- hash rowsort
8 tuples hashing to 5c9ea7d17d4d991b597a507c0c7402e0

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND t1.b > t1.c AND (t1.e > t1.a AND t1.e < t1.b) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a + t1.b * 2 AS col_2
---- 2
0|579
0|743

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND t1.b > t1.c AND (t1.e > t1.a AND t1.e < t1.b) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a + t1.b * 2 AS col_2 ORDER BY col_1, col_2
---- 2
0|579
0|743

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.e > t1.a AND t1.e < t1.b) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a + t1.b * 2 AS col_2
---- 2
0|579
0|743

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.e > t1.a AND t1.e < t1.b) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a + t1.b * 2 AS col_2 ORDER BY col_1, col_2
---- 2
0|579
0|743

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND NOT (t1.d >= 110 AND t1.d <= 150) AND t1.b > t1.c RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a + t1.b * 2 AS col_2
---- 2
0|579
0|743

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND NOT (t1.d >= 110 AND t1.d <= 150) AND t1.b > t1.c RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a + t1.b * 2 AS col_2 ORDER BY col_1, col_2
---- 2
0|579
0|743

-STATEMENT MATCH (t1:t1) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1
---- hash rowsort
30 tuples hashing to 62634e04a17da0e006feac1d867155ac

-STATEMENT MATCH (t1:t1) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1 ORDER BY col_1
---- hash rowsort
30 tuples hashing to 62634e04a17da0e006feac1d867155ac

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.c - t1.d AS col_1
---- hash rowsort
10 tuples hashing to 298da0bf5f4a33425b406d45cfe7a02f

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.c - t1.d AS col_1 ORDER BY col_1
---- hash rowsort
10 tuples hashing to 298da0bf5f4a33425b406d45cfe7a02f

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.c - t1.d AS col_1
---- hash rowsort
10 tuples hashing to 298da0bf5f4a33425b406d45cfe7a02f

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.c - t1.d AS col_1 ORDER BY col_1
---- hash rowsort
10 tuples hashing to 298da0bf5f4a33425b406d45cfe7a02f

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR t1.c > t1.d RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.b AS col_2
---- hash rowsort
25 tuples hashing to 8b693107f5d03208df22ebd40471e4c5

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR t1.c > t1.d RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.b AS col_2 ORDER BY col_1, col_2
---- hash rowsort
25 tuples hashing to 8b693107f5d03208df22ebd40471e4c5

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR t1.c > t1.d OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.b AS col_2
---- hash rowsort
25 tuples hashing to 8b693107f5d03208df22ebd40471e4c5

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR t1.c > t1.d OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.b AS col_2 ORDER BY col_1, col_2
---- hash rowsort
25 tuples hashing to 8b693107f5d03208df22ebd40471e4c5

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR t1.b > t1.c OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.b AS col_2
---- hash rowsort
25 tuples hashing to 8b693107f5d03208df22ebd40471e4c5

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR t1.b > t1.c OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.b AS col_2 ORDER BY col_1, col_2
---- hash rowsort
25 tuples hashing to 8b693107f5d03208df22ebd40471e4c5

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.d - t1.e AS col_1, t1.a AS col_2, t1.e AS col_3
---- hash rowsort
10 tuples hashing to 6d73a828975e3289a657efba0304054c

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.d - t1.e AS col_1, t1.a AS col_2, t1.e AS col_3 ORDER BY col_3, col_2, col_1
---- hash rowsort
10 tuples hashing to 6d73a828975e3289a657efba0304054c

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 AS col_1
---- hash rowsort
30 tuples hashing to fbca95e5a969d3d61cef1ebdfb618461

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 AS col_1 ORDER BY col_1
---- hash rowsort
30 tuples hashing to fbca95e5a969d3d61cef1ebdfb618461

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.d > t1.e AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.b - t1.c AS col_3
---- hash rowsort
4 tuples hashing to 4b4ca058935d839f72f52963e0da4925

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.d > t1.e AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.b - t1.c AS col_3 ORDER BY col_1, col_3
---- hash rowsort
4 tuples hashing to 4b4ca058935d839f72f52963e0da4925

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.b - t1.c AS col_3
---- hash rowsort
4 tuples hashing to 4b4ca058935d839f72f52963e0da4925

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.b - t1.c AS col_3 ORDER BY col_2, col_1
---- hash rowsort
4 tuples hashing to 4b4ca058935d839f72f52963e0da4925

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.b > t1.c RETURN t1.d - t1.e AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.e AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, t1.a AS col_5, t1.a + t1.b * 2 + t1.c * 3 AS col_6, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_7
---- hash rowsort
13 tuples hashing to 18f349038c355a58d26ec68d72766f74

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.b > t1.c RETURN t1.d - t1.e AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.e AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, t1.a AS col_5, t1.a + t1.b * 2 + t1.c * 3 AS col_6, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_7 ORDER BY col_5, col_6, col_2, col_4
---- hash rowsort
13 tuples hashing to 18f349038c355a58d26ec68d72766f74

-STATEMENT MATCH (t1:t1) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.e AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.a AS col_4
---- hash rowsort
30 tuples hashing to 4a6e5a11c1b2cadbd2509edd4727fc36

-STATEMENT MATCH (t1:t1) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.e AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.a AS col_4 ORDER BY col_2, col_3
---- hash rowsort
30 tuples hashing to 4a6e5a11c1b2cadbd2509edd4727fc36

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.a - t1.b AS col_2, t1.e AS col_3, t1.d - t1.e AS col_4
---- hash rowsort
13 tuples hashing to b425d3cd6fe34fd738c34e0c2c726c94

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.a - t1.b AS col_2, t1.e AS col_3, t1.d - t1.e AS col_4 ORDER BY col_3, col_1
---- hash rowsort
13 tuples hashing to b425d3cd6fe34fd738c34e0c2c726c94

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.a > t1.b RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, abs(t1.b - t1.c) AS col_2, t1.e AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.b AS col_5, t1.d AS col_6, t1.c - t1.d AS col_7
---- hash rowsort
19 tuples hashing to 35456f0028870395a71bdffc4cf633ec

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.a > t1.b RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, abs(t1.b - t1.c) AS col_2, t1.e AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.b AS col_5, t1.d AS col_6, t1.c - t1.d AS col_7 ORDER BY col_2, col_6, col_3, col_1, col_5, col_4, col_7
---- hash rowsort
19 tuples hashing to 35456f0028870395a71bdffc4cf633ec

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.a AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5
---- hash rowsort
2 tuples hashing to 8831886a230ed0211a4e484d7642fe2e

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.a AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5 ORDER BY col_4, col_5, col_1, col_3, col_2
---- hash rowsort
2 tuples hashing to 8831886a230ed0211a4e484d7642fe2e

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, abs(t1.a) AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.a AS col_4, t1.c - t1.d AS col_5, t1.a + t1.b * 2 AS col_6
---- hash rowsort
26 tuples hashing to 4432156680365971a3e4cbf671510d6d

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, abs(t1.a) AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.a AS col_4, t1.c - t1.d AS col_5, t1.a + t1.b * 2 AS col_6 ORDER BY col_3, col_6
---- hash rowsort
26 tuples hashing to 4432156680365971a3e4cbf671510d6d

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR t1.d > t1.e RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, abs(t1.a) AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.a AS col_4, t1.c - t1.d AS col_5, t1.a + t1.b * 2 AS col_6
---- hash rowsort
26 tuples hashing to 4432156680365971a3e4cbf671510d6d

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR t1.d > t1.e RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, abs(t1.a) AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.a AS col_4, t1.c - t1.d AS col_5, t1.a + t1.b * 2 AS col_6 ORDER BY col_3, col_4
---- hash rowsort
26 tuples hashing to 4432156680365971a3e4cbf671510d6d

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.b > t1.c RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4
---- hash rowsort
13 tuples hashing to 65fa8f30fe3b38c1f63914b24dd0ae36

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.b > t1.c RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4 ORDER BY col_1, col_3
---- hash rowsort
13 tuples hashing to 65fa8f30fe3b38c1f63914b24dd0ae36

-STATEMENT MATCH (t1:t1) RETURN t1.b - t1.c AS col_1, t1.c - t1.d AS col_2, t1.c AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4
---- hash rowsort
30 tuples hashing to ee5ebd71e2885766385292465c73b289

-STATEMENT MATCH (t1:t1) RETURN t1.b - t1.c AS col_1, t1.c - t1.d AS col_2, t1.c AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4 ORDER BY col_1, col_3, col_4
---- hash rowsort
30 tuples hashing to ee5ebd71e2885766385292465c73b289

-STATEMENT MATCH (t1:t1) RETURN t1.a - t1.b AS col_1, t1.c AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4
---- hash rowsort
30 tuples hashing to 12556e5006f3a24e10df5da2cc282ae5

-STATEMENT MATCH (t1:t1) RETURN t1.a - t1.b AS col_1, t1.c AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4 ORDER BY col_4, col_2
---- hash rowsort
30 tuples hashing to 12556e5006f3a24e10df5da2cc282ae5

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.e > t1.c OR t1.e < t1.d) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.d AS col_1, t1.b - t1.c AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3
---- hash rowsort
5 tuples hashing to 4935fb89cfb41e1c3e07004dd65f5c35

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.e > t1.c OR t1.e < t1.d) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.d AS col_1, t1.b - t1.c AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3 ORDER BY col_2, col_3, col_1
---- hash rowsort
5 tuples hashing to 4935fb89cfb41e1c3e07004dd65f5c35

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.e > t1.c OR t1.e < t1.d) RETURN t1.d AS col_1, t1.b - t1.c AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3
---- hash rowsort
5 tuples hashing to 4935fb89cfb41e1c3e07004dd65f5c35

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.e > t1.c OR t1.e < t1.d) RETURN t1.d AS col_1, t1.b - t1.c AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3 ORDER BY col_1, col_3
---- hash rowsort
5 tuples hashing to 4935fb89cfb41e1c3e07004dd65f5c35

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.e > t1.c OR t1.e < t1.d) AND t1.d > t1.e RETURN t1.d AS col_1, t1.b - t1.c AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3
---- hash rowsort
5 tuples hashing to 4935fb89cfb41e1c3e07004dd65f5c35

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.e > t1.c OR t1.e < t1.d) AND t1.d > t1.e RETURN t1.d AS col_1, t1.b - t1.c AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3 ORDER BY col_1, col_2
---- hash rowsort
5 tuples hashing to 4935fb89cfb41e1c3e07004dd65f5c35

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.c - t1.d AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, abs(t1.a) AS col_6
---- hash rowsort
8 tuples hashing to 9a1c2dfd2507a0a0eb699119d7e6fa15

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.c - t1.d AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, abs(t1.a) AS col_6 ORDER BY col_2, col_3
---- hash rowsort
8 tuples hashing to 9a1c2dfd2507a0a0eb699119d7e6fa15

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.d > t1.e RETURN t1.a AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.e AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5, abs(t1.a) AS col_6
---- hash rowsort
9 tuples hashing to 70cd18685ab99a2b7c3fc0b4491b7cdb

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.d > t1.e RETURN t1.a AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.e AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5, abs(t1.a) AS col_6 ORDER BY col_1, col_5, col_3, col_6, col_2
---- hash rowsort
9 tuples hashing to 70cd18685ab99a2b7c3fc0b4491b7cdb

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.e AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5, abs(t1.a) AS col_6
---- hash rowsort
9 tuples hashing to 70cd18685ab99a2b7c3fc0b4491b7cdb

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.e AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5, abs(t1.a) AS col_6 ORDER BY col_1, col_2
---- hash rowsort
9 tuples hashing to 70cd18685ab99a2b7c3fc0b4491b7cdb

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND t1.d > t1.e AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.e AS col_1
---- 7
162
180
210
221
230
237
246

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND t1.d > t1.e AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.e AS col_1 ORDER BY col_1
---- 7
162
180
210
221
230
237
246

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.e > t1.c OR t1.e < t1.d) RETURN t1.e AS col_1
---- 7
162
180
210
221
230
237
246

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.e > t1.c OR t1.e < t1.d) RETURN t1.e AS col_1 ORDER BY col_1
---- 7
162
180
210
221
230
237
246

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.e > t1.c OR t1.e < t1.d) AND t1.d > t1.e RETURN t1.e AS col_1
---- 7
162
180
210
221
230
237
246

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.e > t1.c OR t1.e < t1.d) AND t1.d > t1.e RETURN t1.e AS col_1 ORDER BY col_1
---- 7
162
180
210
221
230
237
246

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND NOT (t1.d >= 110 AND t1.d <= 150) AND t1.d > t1.e RETURN t1.e AS col_1
---- 7
162
180
210
221
230
237
246

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND NOT (t1.d >= 110 AND t1.d <= 150) AND t1.d > t1.e RETURN t1.e AS col_1 ORDER BY col_1
---- 7
162
180
210
221
230
237
246

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.a - t1.b AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5, t1.d AS col_6
---- hash rowsort
17 tuples hashing to 99987b7ee71d19ed1c2374b9fafa7bf0

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.a - t1.b AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5, t1.d AS col_6 ORDER BY col_1, col_5, col_4, col_3, col_6, col_2
---- hash rowsort
17 tuples hashing to 99987b7ee71d19ed1c2374b9fafa7bf0

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.a - t1.b AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5, t1.d AS col_6
---- hash rowsort
17 tuples hashing to 99987b7ee71d19ed1c2374b9fafa7bf0

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.a - t1.b AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5, t1.d AS col_6 ORDER BY col_6, col_1, col_5, col_2
---- hash rowsort
17 tuples hashing to 99987b7ee71d19ed1c2374b9fafa7bf0

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2
---- 2
1050|107
1290|127

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2 ORDER BY col_1, col_2
---- 2
1050|107
1290|127

-STATEMENT MATCH (t1:t1) RETURN t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, abs(t1.b - t1.c) AS col_4, t1.b AS col_5
---- hash rowsort
30 tuples hashing to 08650458538a7f599e07dc060bd0d5a8

-STATEMENT MATCH (t1:t1) RETURN t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, abs(t1.b - t1.c) AS col_4, t1.b AS col_5 ORDER BY col_2, col_4, col_1, col_3, col_5
---- hash rowsort
30 tuples hashing to 08650458538a7f599e07dc060bd0d5a8

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.a + t1.b * 2 AS col_1, t1.c - t1.d AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4
---- hash rowsort
30 tuples hashing to e4765bbd17a313f600b42a1fdae917ae

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.a + t1.b * 2 AS col_1, t1.c - t1.d AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4 ORDER BY col_2, col_3, col_4
---- hash rowsort
30 tuples hashing to e4765bbd17a313f600b42a1fdae917ae

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.e > t1.a AND t1.e < t1.b) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.b - t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.a + t1.b * 2 AS col_3
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.e > t1.a AND t1.e < t1.b) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.b - t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.a + t1.b * 2 AS col_3 ORDER BY col_2, col_1
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.e > t1.a AND t1.e < t1.b) AND t1.a > t1.b RETURN t1.b - t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.a + t1.b * 2 AS col_3
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.e > t1.a AND t1.e < t1.b) AND t1.a > t1.b RETURN t1.b - t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.a + t1.b * 2 AS col_3 ORDER BY col_3, col_1, col_2
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.b - t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.a + t1.b * 2 AS col_3
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.b - t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.a + t1.b * 2 AS col_3 ORDER BY col_3, col_2, col_1
---- 0


-STATEMENT MATCH (t1:t1) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4
---- hash rowsort
30 tuples hashing to 44fd7ec618532e84d2b224108a6efc76

-STATEMENT MATCH (t1:t1) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4 ORDER BY col_2, col_3, col_1, col_4
---- hash rowsort
30 tuples hashing to 44fd7ec618532e84d2b224108a6efc76

-STATEMENT MATCH (t1:t1) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.b - t1.c AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, t1.b AS col_5
---- hash rowsort
30 tuples hashing to 1bd193a7d8faa78de64325339eff9e57

-STATEMENT MATCH (t1:t1) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.b - t1.c AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, t1.b AS col_5 ORDER BY col_3, col_5
---- hash rowsort
30 tuples hashing to 1bd193a7d8faa78de64325339eff9e57

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.a - t1.b AS col_2, t1.d AS col_3
---- 2
1612|2|108
1902|-2|128

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.a - t1.b AS col_2, t1.d AS col_3 ORDER BY col_2, col_1
---- 2
1612|2|108
1902|-2|128

-STATEMENT MATCH (t1:t1) RETURN t1.a AS col_1, abs(t1.a) AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3
---- hash rowsort
30 tuples hashing to e7f4afdfc7ec5420ff8bea9047b73d7e

-STATEMENT MATCH (t1:t1) RETURN t1.a AS col_1, abs(t1.a) AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3 ORDER BY col_1, col_3
---- hash rowsort
30 tuples hashing to e7f4afdfc7ec5420ff8bea9047b73d7e

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.d > t1.e RETURN t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.b - t1.c AS col_3, t1.a AS col_4, t1.d - t1.e AS col_5
---- hash rowsort
21 tuples hashing to 6db0595048bb4b87385375c23fbb03e9

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.d > t1.e RETURN t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.b - t1.c AS col_3, t1.a AS col_4, t1.d - t1.e AS col_5 ORDER BY col_3, col_5, col_4, col_2
---- hash rowsort
21 tuples hashing to 6db0595048bb4b87385375c23fbb03e9

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR t1.d > t1.e RETURN t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.b - t1.c AS col_3, t1.a AS col_4, t1.d - t1.e AS col_5
---- hash rowsort
21 tuples hashing to 6db0595048bb4b87385375c23fbb03e9

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR t1.d > t1.e RETURN t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.b - t1.c AS col_3, t1.a AS col_4, t1.d - t1.e AS col_5 ORDER BY col_3, col_2, col_5, col_1, col_4
---- hash rowsort
21 tuples hashing to 6db0595048bb4b87385375c23fbb03e9

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.d > t1.e OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.b - t1.c AS col_3, t1.a AS col_4, t1.d - t1.e AS col_5
---- hash rowsort
21 tuples hashing to 6db0595048bb4b87385375c23fbb03e9

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.d > t1.e OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.b - t1.c AS col_3, t1.a AS col_4, t1.d - t1.e AS col_5 ORDER BY col_5, col_3
---- hash rowsort
21 tuples hashing to 6db0595048bb4b87385375c23fbb03e9

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b RETURN t1.a AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.b - t1.c AS col_3, t1.a + t1.b * 2 AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5
---- hash rowsort
17 tuples hashing to 4805fd0e5a976f4378ba55c5494b747e

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b RETURN t1.a AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.b - t1.c AS col_3, t1.a + t1.b * 2 AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5 ORDER BY col_1, col_2
---- hash rowsort
17 tuples hashing to 4805fd0e5a976f4378ba55c5494b747e

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR t1.a > t1.b RETURN t1.a + t1.b * 2 AS col_1
---- hash rowsort
24 tuples hashing to e71470a4cbcc21748346c6f62f1c096d

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR t1.a > t1.b RETURN t1.a + t1.b * 2 AS col_1 ORDER BY col_1
---- hash rowsort
24 tuples hashing to e71470a4cbcc21748346c6f62f1c096d

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR t1.b > t1.c RETURN t1.a + t1.b * 2 AS col_1
---- hash rowsort
24 tuples hashing to e71470a4cbcc21748346c6f62f1c096d

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR t1.b > t1.c RETURN t1.a + t1.b * 2 AS col_1 ORDER BY col_1
---- hash rowsort
24 tuples hashing to e71470a4cbcc21748346c6f62f1c096d

-STATEMENT MATCH (t1:t1) RETURN t1.b - t1.c AS col_1, t1.a + t1.b * 2 AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.d - t1.e AS col_4
---- hash rowsort
30 tuples hashing to 6e54ebf916f41ecf931f4532456d3be2

-STATEMENT MATCH (t1:t1) RETURN t1.b - t1.c AS col_1, t1.a + t1.b * 2 AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.d - t1.e AS col_4 ORDER BY col_4, col_3
---- hash rowsort
30 tuples hashing to 6e54ebf916f41ecf931f4532456d3be2

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b RETURN abs(t1.b - t1.c) AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.a AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4
---- hash rowsort
17 tuples hashing to 06c7ceeead894606cbb65850934466f4

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b RETURN abs(t1.b - t1.c) AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.a AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4 ORDER BY col_3, col_4
---- hash rowsort
17 tuples hashing to 06c7ceeead894606cbb65850934466f4

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.d > t1.e RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1
---- 2
2125
2226

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.d > t1.e RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1 ORDER BY col_1
---- 2
2125
2226

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND t1.c > t1.d AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1
---- 2
2125
2226

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND t1.c > t1.d AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1 ORDER BY col_1
---- 2
2125
2226

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND t1.d > t1.e AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1
---- 2
2125
2226

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND t1.d > t1.e AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1 ORDER BY col_1
---- 2
2125
2226

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e RETURN t1.b - t1.c AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2
---- hash rowsort
11 tuples hashing to 8555b014659201768f0fe7baf9967e06

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e RETURN t1.b - t1.c AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2 ORDER BY col_1, col_2
---- hash rowsort
11 tuples hashing to 8555b014659201768f0fe7baf9967e06

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2
---- hash rowsort
30 tuples hashing to 47be54c84370bf1c6eb0642f00978093

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2 ORDER BY col_1, col_2
---- hash rowsort
30 tuples hashing to 47be54c84370bf1c6eb0642f00978093

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, abs(t1.b - t1.c) AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, t1.e AS col_5
---- hash rowsort
2 tuples hashing to 2fa427a693b2bdbbb544b9392fe8952a

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, abs(t1.b - t1.c) AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, t1.e AS col_5 ORDER BY col_5, col_4, col_2
---- hash rowsort
2 tuples hashing to 2fa427a693b2bdbbb544b9392fe8952a

-STATEMENT MATCH (t1:t1) RETURN t1.a - t1.b AS col_1, t1.a AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, abs(t1.a) AS col_5
---- hash rowsort
30 tuples hashing to 5129a20d65fcd44a07408f5142b1cd09

-STATEMENT MATCH (t1:t1) RETURN t1.a - t1.b AS col_1, t1.a AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, abs(t1.a) AS col_5 ORDER BY col_4, col_2
---- hash rowsort
30 tuples hashing to 5129a20d65fcd44a07408f5142b1cd09

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND t1.c > t1.d RETURN abs(t1.a) AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.b AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5, t1.a - t1.b AS col_6, t1.e AS col_7
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND t1.c > t1.d RETURN abs(t1.a) AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.b AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5, t1.a - t1.b AS col_6, t1.e AS col_7 ORDER BY col_5, col_3, col_1, col_4, col_2, col_6
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.e > t1.c OR t1.e < t1.d) AND t1.c > t1.d RETURN abs(t1.a) AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.b AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5, t1.a - t1.b AS col_6, t1.e AS col_7
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.e > t1.c OR t1.e < t1.d) AND t1.c > t1.d RETURN abs(t1.a) AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.b AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5, t1.a - t1.b AS col_6, t1.e AS col_7 ORDER BY col_6, col_5, col_4, col_7, col_1, col_3
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.e > t1.c OR t1.e < t1.d) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN abs(t1.a) AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.b AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5, t1.a - t1.b AS col_6, t1.e AS col_7
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.e > t1.c OR t1.e < t1.d) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN abs(t1.a) AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.b AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5, t1.a - t1.b AS col_6, t1.e AS col_7 ORDER BY col_1, col_2, col_3, col_6, col_7, col_4, col_5
---- 0


-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a - t1.b AS col_1, t1.c AS col_2
---- hash rowsort
26 tuples hashing to a9641b59792fc08509de991d21cf1449

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a - t1.b AS col_1, t1.c AS col_2 ORDER BY col_1, col_2
---- hash rowsort
26 tuples hashing to a9641b59792fc08509de991d21cf1449

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.e > t1.a AND t1.e < t1.b) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.e > t1.a AND t1.e < t1.b) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2 ORDER BY col_2, col_1
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2 ORDER BY col_1, col_2
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.e > t1.a AND t1.e < t1.b) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.e > t1.a AND t1.e < t1.b) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2 ORDER BY col_1, col_2
---- 0


-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.b AS col_2, abs(t1.b - t1.c) AS col_3, t1.c AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5
---- hash rowsort
27 tuples hashing to 605ff1ace3fefbac5df841361cbdd14e

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.b AS col_2, abs(t1.b - t1.c) AS col_3, t1.c AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5 ORDER BY col_3, col_4, col_5, col_1, col_2
---- hash rowsort
27 tuples hashing to 605ff1ace3fefbac5df841361cbdd14e

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.b > t1.c OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.b AS col_2, abs(t1.b - t1.c) AS col_3, t1.c AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5
---- hash rowsort
27 tuples hashing to 605ff1ace3fefbac5df841361cbdd14e

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.b > t1.c OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.b AS col_2, abs(t1.b - t1.c) AS col_3, t1.c AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5 ORDER BY col_5, col_4, col_3
---- hash rowsort
27 tuples hashing to 605ff1ace3fefbac5df841361cbdd14e

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, abs(t1.a) AS col_3, t1.c AS col_4
---- hash rowsort
24 tuples hashing to 2b9cb6d210d8977b701edd7cc1a21cd6

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, abs(t1.a) AS col_3, t1.c AS col_4 ORDER BY col_2, col_4, col_3, col_1
---- hash rowsort
24 tuples hashing to 2b9cb6d210d8977b701edd7cc1a21cd6

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.e > t1.c OR t1.e < t1.d) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, abs(t1.a) AS col_3, t1.c AS col_4
---- hash rowsort
24 tuples hashing to 2b9cb6d210d8977b701edd7cc1a21cd6

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.e > t1.c OR t1.e < t1.d) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, abs(t1.a) AS col_3, t1.c AS col_4 ORDER BY col_1, col_4, col_2
---- hash rowsort
24 tuples hashing to 2b9cb6d210d8977b701edd7cc1a21cd6

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR t1.a > t1.b RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3
---- hash rowsort
20 tuples hashing to b670a82934f4611abfa49da6ac4c7700

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR t1.a > t1.b RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3 ORDER BY col_3, col_1
---- hash rowsort
20 tuples hashing to b670a82934f4611abfa49da6ac4c7700

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.d AS col_1, t1.e AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.c AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, t1.b AS col_6
---- hash rowsort
19 tuples hashing to 78365d176362a43babd7bf2b93ff7edd

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.d AS col_1, t1.e AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.c AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, t1.b AS col_6 ORDER BY col_5, col_6, col_4
---- hash rowsort
19 tuples hashing to 78365d176362a43babd7bf2b93ff7edd

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.c > t1.d RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.d AS col_2, t1.c - t1.d AS col_3, abs(t1.b - t1.c) AS col_4
---- hash rowsort
15 tuples hashing to 87c38a4989a95b372a49f40afe4b6ee7

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.c > t1.d RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.d AS col_2, t1.c - t1.d AS col_3, abs(t1.b - t1.c) AS col_4 ORDER BY col_3, col_2, col_4, col_1
---- hash rowsort
15 tuples hashing to 87c38a4989a95b372a49f40afe4b6ee7

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.d AS col_2, t1.c - t1.d AS col_3, abs(t1.b - t1.c) AS col_4
---- hash rowsort
15 tuples hashing to 87c38a4989a95b372a49f40afe4b6ee7

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.d AS col_2, t1.c - t1.d AS col_3, abs(t1.b - t1.c) AS col_4 ORDER BY col_1, col_4, col_2
---- hash rowsort
15 tuples hashing to 87c38a4989a95b372a49f40afe4b6ee7

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.a + t1.b * 2 AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.d AS col_5, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_6
---- hash rowsort
4 tuples hashing to 96313609120ed6ed43f19282bb33448a

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.a + t1.b * 2 AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.d AS col_5, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_6 ORDER BY col_5, col_4
---- hash rowsort
4 tuples hashing to 96313609120ed6ed43f19282bb33448a

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.d > t1.e RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.a + t1.b * 2 AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.d AS col_5, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_6
---- hash rowsort
4 tuples hashing to 96313609120ed6ed43f19282bb33448a

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.d > t1.e RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.a + t1.b * 2 AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.d AS col_5, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_6 ORDER BY col_6, col_3, col_4
---- hash rowsort
4 tuples hashing to 96313609120ed6ed43f19282bb33448a

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1
---- 3
111
222
222

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1 ORDER BY col_1
---- 3
111
222
222

-STATEMENT MATCH (t1:t1) RETURN abs(t1.a) AS col_1, abs(t1.b - t1.c) AS col_2
---- hash rowsort
30 tuples hashing to ef628e93360c6418a161c8bc984fc005

-STATEMENT MATCH (t1:t1) RETURN abs(t1.a) AS col_1, abs(t1.b - t1.c) AS col_2 ORDER BY col_1, col_2
---- hash rowsort
30 tuples hashing to ef628e93360c6418a161c8bc984fc005

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b RETURN abs(t1.b - t1.c) AS col_1, t1.d AS col_2, t1.d - t1.e AS col_3, t1.c - t1.d AS col_4, t1.e AS col_5
---- hash rowsort
17 tuples hashing to 936fa92f2a3e8f45419618b59f6a8858

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b RETURN abs(t1.b - t1.c) AS col_1, t1.d AS col_2, t1.d - t1.e AS col_3, t1.c - t1.d AS col_4, t1.e AS col_5 ORDER BY col_4, col_1, col_5, col_2
---- hash rowsort
17 tuples hashing to 936fa92f2a3e8f45419618b59f6a8858

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.d - t1.e AS col_2, t1.a + t1.b * 2 AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4
---- hash rowsort
10 tuples hashing to 0bcf1508dc78bc1867e520ca3db7355d

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.d - t1.e AS col_2, t1.a + t1.b * 2 AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4 ORDER BY col_4, col_1, col_3, col_2
---- hash rowsort
10 tuples hashing to 0bcf1508dc78bc1867e520ca3db7355d

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.d - t1.e AS col_2, t1.a + t1.b * 2 AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4
---- hash rowsort
10 tuples hashing to 0bcf1508dc78bc1867e520ca3db7355d

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.d - t1.e AS col_2, t1.a + t1.b * 2 AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4 ORDER BY col_4, col_2, col_3
---- hash rowsort
10 tuples hashing to 0bcf1508dc78bc1867e520ca3db7355d

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.a AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3
---- hash rowsort
30 tuples hashing to 1c204adbdc05d0927b60e997937fe50a

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.a AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3 ORDER BY col_2, col_3, col_1
---- hash rowsort
30 tuples hashing to 1c204adbdc05d0927b60e997937fe50a

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR t1.b > t1.c OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1
---- hash rowsort
27 tuples hashing to ccb5588394c5680f5305fcb9ef5b3e2e

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR t1.b > t1.c OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1 ORDER BY col_1
---- hash rowsort
27 tuples hashing to ccb5588394c5680f5305fcb9ef5b3e2e

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR t1.b > t1.c OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1
---- hash rowsort
27 tuples hashing to ccb5588394c5680f5305fcb9ef5b3e2e

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR t1.b > t1.c OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1 ORDER BY col_1
---- hash rowsort
27 tuples hashing to ccb5588394c5680f5305fcb9ef5b3e2e

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR NOT (t1.d >= 110 AND t1.d <= 150) OR t1.b > t1.c RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1
---- hash rowsort
27 tuples hashing to ccb5588394c5680f5305fcb9ef5b3e2e

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR NOT (t1.d >= 110 AND t1.d <= 150) OR t1.b > t1.c RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1 ORDER BY col_1
---- hash rowsort
27 tuples hashing to ccb5588394c5680f5305fcb9ef5b3e2e

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a AS col_1, t1.a + t1.b * 2 AS col_2, abs(t1.b - t1.c) AS col_3
---- hash rowsort
26 tuples hashing to 9770cbf7ed4c923952579ab2f2657e25

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a AS col_1, t1.a + t1.b * 2 AS col_2, abs(t1.b - t1.c) AS col_3 ORDER BY col_2, col_1
---- hash rowsort
26 tuples hashing to 9770cbf7ed4c923952579ab2f2657e25

-STATEMENT MATCH (t1:t1) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 AS col_2, t1.d AS col_3, t1.a AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5, t1.c - t1.d AS col_6
---- hash rowsort
30 tuples hashing to e6dcf1f455e14598f16d8f906e8ef7e9

-STATEMENT MATCH (t1:t1) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 AS col_2, t1.d AS col_3, t1.a AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5, t1.c - t1.d AS col_6 ORDER BY col_6, col_5, col_3, col_4, col_1, col_2
---- hash rowsort
30 tuples hashing to e6dcf1f455e14598f16d8f906e8ef7e9

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.a > t1.b RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, t1.d AS col_5
---- hash rowsort
16 tuples hashing to 6ef54925015c9504f804e0fdb4d91037

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.a > t1.b RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, t1.d AS col_5 ORDER BY col_4, col_5, col_1, col_2
---- hash rowsort
16 tuples hashing to 6ef54925015c9504f804e0fdb4d91037

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, t1.d AS col_5
---- hash rowsort
16 tuples hashing to 6ef54925015c9504f804e0fdb4d91037

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, t1.d AS col_5 ORDER BY col_3, col_4
---- hash rowsort
16 tuples hashing to 6ef54925015c9504f804e0fdb4d91037

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR t1.d > t1.e RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.b - t1.c AS col_4, abs(t1.a) AS col_5
---- hash rowsort
19 tuples hashing to bed7235daff0f9f53011e8f710309332

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR t1.d > t1.e RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.b - t1.c AS col_4, abs(t1.a) AS col_5 ORDER BY col_1, col_3, col_4
---- hash rowsort
19 tuples hashing to bed7235daff0f9f53011e8f710309332

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND t1.a > t1.b AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.b - t1.c AS col_1, t1.a + t1.b * 2 AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.a AS col_4
---- hash rowsort
9 tuples hashing to 9b60c80f1253128bfdf084e82443c834

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND t1.a > t1.b AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.b - t1.c AS col_1, t1.a + t1.b * 2 AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.a AS col_4 ORDER BY col_1, col_4, col_2
---- hash rowsort
9 tuples hashing to 9b60c80f1253128bfdf084e82443c834

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.a > t1.b AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.b - t1.c AS col_1, t1.a + t1.b * 2 AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.a AS col_4
---- hash rowsort
9 tuples hashing to 9b60c80f1253128bfdf084e82443c834

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.a > t1.b AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.b - t1.c AS col_1, t1.a + t1.b * 2 AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.a AS col_4 ORDER BY col_2, col_1, col_3, col_4
---- hash rowsort
9 tuples hashing to 9b60c80f1253128bfdf084e82443c834

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.b - t1.c AS col_1, t1.a + t1.b * 2 AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.a AS col_4
---- hash rowsort
9 tuples hashing to 9b60c80f1253128bfdf084e82443c834

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.b - t1.c AS col_1, t1.a + t1.b * 2 AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.a AS col_4 ORDER BY col_4, col_2, col_1, col_3
---- hash rowsort
9 tuples hashing to 9b60c80f1253128bfdf084e82443c834

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.b AS col_1
---- 8
130
139
143
158
167
181
198
228

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.b AS col_1 ORDER BY col_1
---- 8
130
139
143
158
167
181
198
228

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 AS col_1, t1.e AS col_2
---- hash rowsort
30 tuples hashing to e0271f8ba22474f4049d1c4117e25a26

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 AS col_1, t1.e AS col_2 ORDER BY col_2, col_1
---- hash rowsort
30 tuples hashing to e0271f8ba22474f4049d1c4117e25a26

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.e > t1.c OR t1.e < t1.d) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.a AS col_2, t1.b - t1.c AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5
---- hash rowsort
8 tuples hashing to c3933b6e8cb7e7bff2b8e6232d42043a

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.e > t1.c OR t1.e < t1.d) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.a AS col_2, t1.b - t1.c AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5 ORDER BY col_3, col_2
---- hash rowsort
8 tuples hashing to c3933b6e8cb7e7bff2b8e6232d42043a

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND t1.c > t1.d RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.a AS col_2, t1.b - t1.c AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5
---- hash rowsort
8 tuples hashing to c3933b6e8cb7e7bff2b8e6232d42043a

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND t1.c > t1.d RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.a AS col_2, t1.b - t1.c AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5 ORDER BY col_3, col_2, col_4
---- hash rowsort
8 tuples hashing to c3933b6e8cb7e7bff2b8e6232d42043a

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1
---- hash rowsort
15 tuples hashing to 24301db3251cc0181759db55e6ca955d

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1 ORDER BY col_1
---- hash rowsort
15 tuples hashing to 24301db3251cc0181759db55e6ca955d

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND t1.c > t1.d AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a - t1.b AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.b AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5, t1.a + t1.b * 2 + t1.c * 3 AS col_6, abs(t1.a) AS col_7
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND t1.c > t1.d AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a - t1.b AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.b AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5, t1.a + t1.b * 2 + t1.c * 3 AS col_6, abs(t1.a) AS col_7 ORDER BY col_5, col_2, col_7, col_3, col_4
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND t1.b > t1.c AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a - t1.b AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.b AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5, t1.a + t1.b * 2 + t1.c * 3 AS col_6, abs(t1.a) AS col_7
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND t1.b > t1.c AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a - t1.b AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.b AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5, t1.a + t1.b * 2 + t1.c * 3 AS col_6, abs(t1.a) AS col_7 ORDER BY col_5, col_4
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND t1.b > t1.c AND t1.c > t1.d RETURN t1.a - t1.b AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.b AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5, t1.a + t1.b * 2 + t1.c * 3 AS col_6, abs(t1.a) AS col_7
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND t1.b > t1.c AND t1.c > t1.d RETURN t1.a - t1.b AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.b AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5, t1.a + t1.b * 2 + t1.c * 3 AS col_6, abs(t1.a) AS col_7 ORDER BY col_4, col_6, col_3, col_1, col_7, col_2, col_5
---- 0


-STATEMENT MATCH (t1:t1) RETURN t1.e AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2
---- hash rowsort
30 tuples hashing to d498732e2676d6a2598a7fc7eb42e20c

-STATEMENT MATCH (t1:t1) RETURN t1.e AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2 ORDER BY col_2, col_1
---- hash rowsort
30 tuples hashing to d498732e2676d6a2598a7fc7eb42e20c

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.e AS col_2, t1.d - t1.e AS col_3, t1.a - t1.b AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, t1.c - t1.d AS col_6, t1.a + t1.b * 2 + t1.c * 3 AS col_7
---- hash rowsort
13 tuples hashing to 33c48df60edc29d417900f70ffaa09c1

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.e AS col_2, t1.d - t1.e AS col_3, t1.a - t1.b AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, t1.c - t1.d AS col_6, t1.a + t1.b * 2 + t1.c * 3 AS col_7 ORDER BY col_2, col_3, col_7, col_5, col_4, col_6
---- hash rowsort
13 tuples hashing to 33c48df60edc29d417900f70ffaa09c1

-STATEMENT MATCH (t1:t1) RETURN t1.e AS col_1, t1.c AS col_2, t1.c - t1.d AS col_3, abs(t1.a) AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, t1.a AS col_6, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_7
---- hash rowsort
30 tuples hashing to 65c04b0e28cbaad4c60a25ea653f926f

-STATEMENT MATCH (t1:t1) RETURN t1.e AS col_1, t1.c AS col_2, t1.c - t1.d AS col_3, abs(t1.a) AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, t1.a AS col_6, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_7 ORDER BY col_3, col_2
---- hash rowsort
30 tuples hashing to 65c04b0e28cbaad4c60a25ea653f926f

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.a + t1.b * 2 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.c - t1.d AS col_5, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_6
---- hash rowsort
30 tuples hashing to 84287fc53576cbb5bb4df2db89013970

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.a + t1.b * 2 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.c - t1.d AS col_5, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_6 ORDER BY col_1, col_4, col_5, col_6
---- hash rowsort
30 tuples hashing to 84287fc53576cbb5bb4df2db89013970

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1
---- hash rowsort
26 tuples hashing to bacf799fb7f910fb7d7a8d0e0ab6cc33

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1 ORDER BY col_1
---- hash rowsort
26 tuples hashing to bacf799fb7f910fb7d7a8d0e0ab6cc33

-STATEMENT MATCH (t1:t1) RETURN t1.a - t1.b AS col_1
---- hash rowsort
30 tuples hashing to a8508bcdf86e494dd5feccb5ca8d9768

-STATEMENT MATCH (t1:t1) RETURN t1.a - t1.b AS col_1 ORDER BY col_1
---- hash rowsort
30 tuples hashing to a8508bcdf86e494dd5feccb5ca8d9768

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.e > t1.a AND t1.e < t1.b) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a - t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3
---- 0


-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.e > t1.a AND t1.e < t1.b) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a - t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3 ORDER BY col_3, col_2, col_1
---- 0


-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.e > t1.a AND t1.e < t1.b) AND t1.a > t1.b RETURN t1.a - t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3
---- 0


-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.e > t1.a AND t1.e < t1.b) AND t1.a > t1.b RETURN t1.a - t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3 ORDER BY col_2, col_3, col_1
---- 0


-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a - t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3
---- 0


-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a - t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3 ORDER BY col_1, col_3, col_2
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, abs(t1.a) AS col_3, t1.b AS col_4, t1.e AS col_5, t1.a + t1.b * 2 AS col_6, t1.b - t1.c AS col_7
---- hash rowsort
3 tuples hashing to f6e9afbfb91f2c78712b7e371b0629ca

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, abs(t1.a) AS col_3, t1.b AS col_4, t1.e AS col_5, t1.a + t1.b * 2 AS col_6, t1.b - t1.c AS col_7 ORDER BY col_7, col_3, col_5, col_2, col_4, col_1
---- hash rowsort
3 tuples hashing to f6e9afbfb91f2c78712b7e371b0629ca

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.e AS col_1, t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3
---- hash rowsort
26 tuples hashing to b3cb3cb66bde843991043df72fec3f0c

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.e AS col_1, t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3 ORDER BY col_1, col_3, col_2
---- hash rowsort
26 tuples hashing to b3cb3cb66bde843991043df72fec3f0c

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.a > t1.b OR t1.d > t1.e RETURN t1.e AS col_1, t1.b AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.a + t1.b * 2 AS col_5
---- hash rowsort
23 tuples hashing to bb21d817f25fca8477eb01b4fedb58c7

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.a > t1.b OR t1.d > t1.e RETURN t1.e AS col_1, t1.b AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.a + t1.b * 2 AS col_5 ORDER BY col_3, col_1
---- hash rowsort
23 tuples hashing to bb21d817f25fca8477eb01b4fedb58c7

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.d > t1.e RETURN t1.e AS col_1, t1.b AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.a + t1.b * 2 AS col_5
---- hash rowsort
23 tuples hashing to bb21d817f25fca8477eb01b4fedb58c7

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.d > t1.e RETURN t1.e AS col_1, t1.b AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.a + t1.b * 2 AS col_5 ORDER BY col_3, col_2, col_4, col_5, col_1
---- hash rowsort
23 tuples hashing to bb21d817f25fca8477eb01b4fedb58c7

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR t1.a > t1.b OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.e AS col_1, t1.b AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.a + t1.b * 2 AS col_5
---- hash rowsort
23 tuples hashing to bb21d817f25fca8477eb01b4fedb58c7

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR t1.a > t1.b OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.e AS col_1, t1.b AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.a + t1.b * 2 AS col_5 ORDER BY col_4, col_2, col_3, col_1
---- hash rowsort
23 tuples hashing to bb21d817f25fca8477eb01b4fedb58c7

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.b - t1.c AS col_1, t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.a + t1.b * 2 AS col_5, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_6, t1.a - t1.b AS col_7
---- hash rowsort
3 tuples hashing to 66cd7aeef4414a02b7f5507993fab335

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.b - t1.c AS col_1, t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.a + t1.b * 2 AS col_5, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_6, t1.a - t1.b AS col_7 ORDER BY col_4, col_3
---- hash rowsort
3 tuples hashing to 66cd7aeef4414a02b7f5507993fab335

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND t1.b > t1.c AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.b - t1.c AS col_1, t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.a + t1.b * 2 AS col_5, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_6, t1.a - t1.b AS col_7
---- hash rowsort
3 tuples hashing to 66cd7aeef4414a02b7f5507993fab335

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND t1.b > t1.c AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.b - t1.c AS col_1, t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.a + t1.b * 2 AS col_5, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_6, t1.a - t1.b AS col_7 ORDER BY col_4, col_1, col_2, col_7
---- hash rowsort
3 tuples hashing to 66cd7aeef4414a02b7f5507993fab335

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND NOT (t1.d >= 110 AND t1.d <= 150) AND t1.b > t1.c RETURN t1.b - t1.c AS col_1, t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.a + t1.b * 2 AS col_5, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_6, t1.a - t1.b AS col_7
---- hash rowsort
3 tuples hashing to 66cd7aeef4414a02b7f5507993fab335

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND NOT (t1.d >= 110 AND t1.d <= 150) AND t1.b > t1.c RETURN t1.b - t1.c AS col_1, t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.a + t1.b * 2 AS col_5, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_6, t1.a - t1.b AS col_7 ORDER BY col_4, col_1, col_5, col_6, col_2
---- hash rowsort
3 tuples hashing to 66cd7aeef4414a02b7f5507993fab335

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.b - t1.c AS col_1, t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.a + t1.b * 2 AS col_5, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_6, t1.a - t1.b AS col_7
---- hash rowsort
3 tuples hashing to 66cd7aeef4414a02b7f5507993fab335

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.b - t1.c AS col_1, t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.a + t1.b * 2 AS col_5, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_6, t1.a - t1.b AS col_7 ORDER BY col_1, col_2, col_5, col_3, col_7, col_4, col_6
---- hash rowsort
3 tuples hashing to 66cd7aeef4414a02b7f5507993fab335

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.c - t1.d AS col_1, t1.b AS col_2
---- hash rowsort
15 tuples hashing to 5c44e220765931661a93eef7d781f382

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.c - t1.d AS col_1, t1.b AS col_2 ORDER BY col_1, col_2
---- hash rowsort
15 tuples hashing to 5c44e220765931661a93eef7d781f382

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 AS col_1
---- hash rowsort
30 tuples hashing to fbca95e5a969d3d61cef1ebdfb618461

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 AS col_1 ORDER BY col_1
---- hash rowsort
30 tuples hashing to fbca95e5a969d3d61cef1ebdfb618461

-STATEMENT MATCH (t1:t1) RETURN t1.e AS col_1, t1.b - t1.c AS col_2, t1.a - t1.b AS col_3
---- hash rowsort
30 tuples hashing to 54548edc6b7e3210f1a87b87028507eb

-STATEMENT MATCH (t1:t1) RETURN t1.e AS col_1, t1.b - t1.c AS col_2, t1.a - t1.b AS col_3 ORDER BY col_3, col_2
---- hash rowsort
30 tuples hashing to 54548edc6b7e3210f1a87b87028507eb

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR t1.d > t1.e OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.c - t1.d AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.c AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4
---- hash rowsort
26 tuples hashing to 0fe9466f8bc2d8db37e18a838d56e649

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR t1.d > t1.e OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.c - t1.d AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.c AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4 ORDER BY col_3, col_4, col_1, col_2
---- hash rowsort
26 tuples hashing to 0fe9466f8bc2d8db37e18a838d56e649

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR t1.d > t1.e RETURN t1.c - t1.d AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.c AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4
---- hash rowsort
26 tuples hashing to 0fe9466f8bc2d8db37e18a838d56e649

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR t1.d > t1.e RETURN t1.c - t1.d AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.c AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4 ORDER BY col_4, col_3, col_2, col_1
---- hash rowsort
26 tuples hashing to 0fe9466f8bc2d8db37e18a838d56e649

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.e > t1.a AND t1.e < t1.b) RETURN t1.c - t1.d AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.c AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4
---- hash rowsort
26 tuples hashing to 0fe9466f8bc2d8db37e18a838d56e649

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.e > t1.a AND t1.e < t1.b) RETURN t1.c - t1.d AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.c AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4 ORDER BY col_2, col_3, col_1
---- hash rowsort
26 tuples hashing to 0fe9466f8bc2d8db37e18a838d56e649

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.a > t1.b AND t1.c > t1.d RETURN abs(t1.a) AS col_1, t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.c AS col_5
---- hash rowsort
5 tuples hashing to a2167941ad5156924d8b2030b57290cc

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.a > t1.b AND t1.c > t1.d RETURN abs(t1.a) AS col_1, t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.c AS col_5 ORDER BY col_3, col_2, col_1, col_4, col_5
---- hash rowsort
5 tuples hashing to a2167941ad5156924d8b2030b57290cc

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.c > t1.d AND t1.a > t1.b RETURN abs(t1.a) AS col_1, t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.c AS col_5
---- hash rowsort
5 tuples hashing to a2167941ad5156924d8b2030b57290cc

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.c > t1.d AND t1.a > t1.b RETURN abs(t1.a) AS col_1, t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.c AS col_5 ORDER BY col_3, col_5, col_1, col_2, col_4
---- hash rowsort
5 tuples hashing to a2167941ad5156924d8b2030b57290cc

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND t1.a > t1.b AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN abs(t1.a) AS col_1, t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.c AS col_5
---- hash rowsort
5 tuples hashing to a2167941ad5156924d8b2030b57290cc

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND t1.a > t1.b AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN abs(t1.a) AS col_1, t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.c AS col_5 ORDER BY col_5, col_1, col_2, col_4, col_3
---- hash rowsort
5 tuples hashing to a2167941ad5156924d8b2030b57290cc

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3
---- hash rowsort
3 tuples hashing to 0e75b49ae26f7f4b1a44ae9d353a0e7e

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3 ORDER BY col_3, col_1
---- hash rowsort
3 tuples hashing to 0e75b49ae26f7f4b1a44ae9d353a0e7e

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a AS col_2, t1.e AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, t1.d AS col_5, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_6
---- hash rowsort
13 tuples hashing to abb56a92bf0cb2eeb79cb083d30f4461

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a AS col_2, t1.e AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, t1.d AS col_5, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_6 ORDER BY col_4, col_3, col_6
---- hash rowsort
13 tuples hashing to abb56a92bf0cb2eeb79cb083d30f4461

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2
---- hash rowsort
27 tuples hashing to 375bd17b041072c483e342b932f987d7

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2 ORDER BY col_2, col_1
---- hash rowsort
27 tuples hashing to 375bd17b041072c483e342b932f987d7

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) RETURN t1.d AS col_1, abs(t1.b - t1.c) AS col_2, t1.a + t1.b * 2 AS col_3
---- hash rowsort
21 tuples hashing to a77c78bd17779239f80e4add9247f9a3

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) RETURN t1.d AS col_1, abs(t1.b - t1.c) AS col_2, t1.a + t1.b * 2 AS col_3 ORDER BY col_3, col_1
---- hash rowsort
21 tuples hashing to a77c78bd17779239f80e4add9247f9a3

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1
---- 8
0
0
0
0
0
0
0
0

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1 ORDER BY col_1
---- 8
0
0
0
0
0
0
0
0

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1
---- 8
0
0
0
0
0
0
0
0

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1 ORDER BY col_1
---- 8
0
0
0
0
0
0
0
0

-STATEMENT MATCH (t1:t1) RETURN t1.d AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.a AS col_3
---- hash rowsort
30 tuples hashing to 3c15699b628fcb0315fbe0c6eeda70e0

-STATEMENT MATCH (t1:t1) RETURN t1.d AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.a AS col_3 ORDER BY col_1, col_3
---- hash rowsort
30 tuples hashing to 3c15699b628fcb0315fbe0c6eeda70e0

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.b AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.e AS col_4
---- hash rowsort
21 tuples hashing to 4b1f41b8ffbace27ffd3a54792a622f5

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.b AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.e AS col_4 ORDER BY col_1, col_4, col_3
---- hash rowsort
21 tuples hashing to 4b1f41b8ffbace27ffd3a54792a622f5

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.e > t1.c OR t1.e < t1.d) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.b AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.e AS col_4
---- hash rowsort
21 tuples hashing to 4b1f41b8ffbace27ffd3a54792a622f5

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.e > t1.c OR t1.e < t1.d) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.b AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.e AS col_4 ORDER BY col_1, col_3, col_4
---- hash rowsort
21 tuples hashing to 4b1f41b8ffbace27ffd3a54792a622f5

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b RETURN t1.b - t1.c AS col_1, abs(t1.b - t1.c) AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4
---- hash rowsort
17 tuples hashing to e51724a26aa401a907517e31686c8aa8

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b RETURN t1.b - t1.c AS col_1, abs(t1.b - t1.c) AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4 ORDER BY col_3, col_2, col_1, col_4
---- hash rowsort
17 tuples hashing to e51724a26aa401a907517e31686c8aa8

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND t1.d > t1.e AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2
---- hash rowsort
5 tuples hashing to 46db9015ef52a10b49c8e03ba9ef9196

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND t1.d > t1.e AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2 ORDER BY col_1, col_2
---- hash rowsort
5 tuples hashing to 46db9015ef52a10b49c8e03ba9ef9196

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.e > t1.c OR t1.e < t1.d) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2
---- hash rowsort
5 tuples hashing to 46db9015ef52a10b49c8e03ba9ef9196

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.e > t1.c OR t1.e < t1.d) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2 ORDER BY col_2, col_1
---- hash rowsort
5 tuples hashing to 46db9015ef52a10b49c8e03ba9ef9196

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.d > t1.e AND (t1.e > t1.c OR t1.e < t1.d) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2
---- hash rowsort
5 tuples hashing to 46db9015ef52a10b49c8e03ba9ef9196

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.d > t1.e AND (t1.e > t1.c OR t1.e < t1.d) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2 ORDER BY col_1, col_2
---- hash rowsort
5 tuples hashing to 46db9015ef52a10b49c8e03ba9ef9196

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a - t1.b AS col_1
---- hash rowsort
10 tuples hashing to efa8813bb3fe4fd95c76a8b4cec1fef1

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a - t1.b AS col_1 ORDER BY col_1
---- hash rowsort
10 tuples hashing to efa8813bb3fe4fd95c76a8b4cec1fef1

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.d > t1.e RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.c AS col_2
---- hash rowsort
12 tuples hashing to 5c25c8944f53227053854fc9e1ad5d04

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.d > t1.e RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.c AS col_2 ORDER BY col_1, col_2
---- hash rowsort
12 tuples hashing to 5c25c8944f53227053854fc9e1ad5d04

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.c AS col_2
---- hash rowsort
12 tuples hashing to 5c25c8944f53227053854fc9e1ad5d04

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.c AS col_2 ORDER BY col_1, col_2
---- hash rowsort
12 tuples hashing to 5c25c8944f53227053854fc9e1ad5d04

-STATEMENT MATCH (t1:t1) RETURN abs(t1.a) AS col_1, abs(t1.b - t1.c) AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5
---- hash rowsort
30 tuples hashing to ff1cec10198db2dc82176f49396dc74c

-STATEMENT MATCH (t1:t1) RETURN abs(t1.a) AS col_1, abs(t1.b - t1.c) AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5 ORDER BY col_4, col_2, col_3, col_5, col_1
---- hash rowsort
30 tuples hashing to ff1cec10198db2dc82176f49396dc74c

-STATEMENT MATCH (t1:t1) RETURN t1.c - t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.c AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5
---- hash rowsort
30 tuples hashing to 5d88f05c0ec013c69e7d2468ca196f39

-STATEMENT MATCH (t1:t1) RETURN t1.c - t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.c AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5 ORDER BY col_4, col_2, col_3, col_5
---- hash rowsort
30 tuples hashing to 5d88f05c0ec013c69e7d2468ca196f39

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.e > t1.a AND t1.e < t1.b) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2
---- 2
16|222
26|111

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.e > t1.a AND t1.e < t1.b) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2 ORDER BY col_1, col_2
---- 2
16|222
26|111

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND t1.b > t1.c RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2
---- 2
16|222
26|111

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND t1.b > t1.c RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2 ORDER BY col_2, col_1
---- 2
16|222
26|111

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a AS col_1, t1.c AS col_2, t1.c - t1.d AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.e AS col_5, t1.d AS col_6
---- hash rowsort
10 tuples hashing to 40bddf4ca96e21e4b7d5a9be8dbf5c68

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a AS col_1, t1.c AS col_2, t1.c - t1.d AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.e AS col_5, t1.d AS col_6 ORDER BY col_3, col_6, col_1, col_5, col_2, col_4
---- hash rowsort
10 tuples hashing to 40bddf4ca96e21e4b7d5a9be8dbf5c68

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a - t1.b AS col_2, abs(t1.a) AS col_3, t1.b AS col_4
---- hash rowsort
11 tuples hashing to 7034369d38673d6b059070a0e839c554

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a - t1.b AS col_2, abs(t1.a) AS col_3, t1.b AS col_4 ORDER BY col_3, col_1
---- hash rowsort
11 tuples hashing to 7034369d38673d6b059070a0e839c554

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.d - t1.e AS col_2, t1.b - t1.c AS col_3, t1.d AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_6, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_7
---- hash rowsort
18 tuples hashing to 192f68d8690f0de01a1560966b1800e8

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.d - t1.e AS col_2, t1.b - t1.c AS col_3, t1.d AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_6, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_7 ORDER BY col_3, col_4, col_7, col_6, col_5, col_1, col_2
---- hash rowsort
18 tuples hashing to 192f68d8690f0de01a1560966b1800e8

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.d - t1.e AS col_2, t1.b - t1.c AS col_3, t1.d AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_6, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_7
---- hash rowsort
18 tuples hashing to 192f68d8690f0de01a1560966b1800e8

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.d - t1.e AS col_2, t1.b - t1.c AS col_3, t1.d AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_6, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_7 ORDER BY col_7, col_6, col_4, col_3, col_2, col_5
---- hash rowsort
18 tuples hashing to 192f68d8690f0de01a1560966b1800e8

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.e > t1.c OR t1.e < t1.d) RETURN abs(t1.a) AS col_1, t1.e AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, abs(t1.b - t1.c) AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5
---- hash rowsort
19 tuples hashing to 4a08be935c0a2bbfee088c7b78d8a22b

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.e > t1.c OR t1.e < t1.d) RETURN abs(t1.a) AS col_1, t1.e AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, abs(t1.b - t1.c) AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5 ORDER BY col_2, col_1
---- hash rowsort
19 tuples hashing to 4a08be935c0a2bbfee088c7b78d8a22b

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN abs(t1.a) AS col_1, t1.e AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, abs(t1.b - t1.c) AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5
---- hash rowsort
19 tuples hashing to 4a08be935c0a2bbfee088c7b78d8a22b

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN abs(t1.a) AS col_1, t1.e AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, abs(t1.b - t1.c) AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5 ORDER BY col_4, col_2, col_5
---- hash rowsort
19 tuples hashing to 4a08be935c0a2bbfee088c7b78d8a22b

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c RETURN t1.b - t1.c AS col_1, t1.d - t1.e AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.c - t1.d AS col_5, t1.a + t1.b * 2 AS col_6, t1.d AS col_7
---- hash rowsort
13 tuples hashing to 4d1ba48d653a04c1964aca0a76d2fa66

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c RETURN t1.b - t1.c AS col_1, t1.d - t1.e AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.c - t1.d AS col_5, t1.a + t1.b * 2 AS col_6, t1.d AS col_7 ORDER BY col_4, col_5, col_2
---- hash rowsort
13 tuples hashing to 4d1ba48d653a04c1964aca0a76d2fa66

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e > t1.c OR t1.e < t1.d) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, abs(t1.b - t1.c) AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5
---- hash rowsort
4 tuples hashing to df87df2d7282eb1327156fc49e9cd150

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e > t1.c OR t1.e < t1.d) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, abs(t1.b - t1.c) AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5 ORDER BY col_3, col_2
---- hash rowsort
4 tuples hashing to df87df2d7282eb1327156fc49e9cd150

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, abs(t1.b - t1.c) AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5
---- hash rowsort
4 tuples hashing to df87df2d7282eb1327156fc49e9cd150

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, abs(t1.b - t1.c) AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5 ORDER BY col_1, col_5, col_2
---- hash rowsort
4 tuples hashing to df87df2d7282eb1327156fc49e9cd150

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e > t1.c OR t1.e < t1.d) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, abs(t1.b - t1.c) AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5
---- hash rowsort
4 tuples hashing to df87df2d7282eb1327156fc49e9cd150

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e > t1.c OR t1.e < t1.d) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, abs(t1.b - t1.c) AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5 ORDER BY col_4, col_5
---- hash rowsort
4 tuples hashing to df87df2d7282eb1327156fc49e9cd150

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.a AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.d - t1.e AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, abs(t1.a) AS col_6, t1.b AS col_7
---- hash rowsort
3 tuples hashing to 1c7d5e919afacfb1b1a0e4f7b11608eb

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.a AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.d - t1.e AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, abs(t1.a) AS col_6, t1.b AS col_7 ORDER BY col_7, col_5, col_1
---- hash rowsort
3 tuples hashing to 1c7d5e919afacfb1b1a0e4f7b11608eb

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a + t1.b * 2 AS col_1, t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.e AS col_4
---- hash rowsort
27 tuples hashing to 8d1dfc0a320648d492a00bf65d8e4d6a

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a + t1.b * 2 AS col_1, t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.e AS col_4 ORDER BY col_3, col_2
---- hash rowsort
27 tuples hashing to 8d1dfc0a320648d492a00bf65d8e4d6a

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.b - t1.c AS col_2, t1.e AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, t1.d AS col_5
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.b - t1.c AS col_2, t1.e AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, t1.d AS col_5 ORDER BY col_1, col_4, col_2
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.b - t1.c AS col_2, t1.e AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, t1.d AS col_5
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.b - t1.c AS col_2, t1.e AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, t1.d AS col_5 ORDER BY col_5, col_1, col_2, col_4
---- 0


-STATEMENT MATCH (t1:t1) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.d - t1.e AS col_3, t1.e AS col_4, t1.d AS col_5
---- hash rowsort
30 tuples hashing to 8fc0fc1ae43b818568824e2e5b772c8b

-STATEMENT MATCH (t1:t1) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.d - t1.e AS col_3, t1.e AS col_4, t1.d AS col_5 ORDER BY col_3, col_2, col_4
---- hash rowsort
30 tuples hashing to 8fc0fc1ae43b818568824e2e5b772c8b

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.d AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.d AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5 ORDER BY col_2, col_5, col_3, col_4, col_1
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.e > t1.a AND t1.e < t1.b) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.d AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.e > t1.a AND t1.e < t1.b) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.d AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5 ORDER BY col_5, col_4, col_3, col_1
---- 0


-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.e > t1.a AND t1.e < t1.b) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.d AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5
---- 0


-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.e > t1.a AND t1.e < t1.b) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.d AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5 ORDER BY col_5, col_3, col_4, col_1, col_2
---- 0


-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.c AS col_1, t1.d AS col_2, t1.a AS col_3
---- hash rowsort
8 tuples hashing to acc553f142405b2316a0d6f67b8c087f

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.c AS col_1, t1.d AS col_2, t1.a AS col_3 ORDER BY col_1, col_2, col_3
---- hash rowsort
8 tuples hashing to acc553f142405b2316a0d6f67b8c087f

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND (t1.e > t1.c OR t1.e < t1.d) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.d AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.c AS col_3
---- 2
222|0|224
248|0|247

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND (t1.e > t1.c OR t1.e < t1.d) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.d AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.c AS col_3 ORDER BY col_3, col_1, col_2
---- 2
222|0|224
248|0|247

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND (t1.e > t1.a AND t1.e < t1.b) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.d AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.c AS col_3
---- 2
222|0|224
248|0|247

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND (t1.e > t1.a AND t1.e < t1.b) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.d AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.c AS col_3 ORDER BY col_1, col_3, col_2
---- 2
222|0|224
248|0|247

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.e > t1.c OR t1.e < t1.d) AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.d AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.c AS col_3
---- 2
222|0|224
248|0|247

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.e > t1.c OR t1.e < t1.d) AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.d AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.c AS col_3 ORDER BY col_1, col_2
---- 2
222|0|224
248|0|247

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.b AS col_2, abs(t1.b - t1.c) AS col_3, abs(t1.a) AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5, t1.a + t1.b * 2 AS col_6
---- hash rowsort
13 tuples hashing to 15f8a87acd557eff36b6b45cf6145a89

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.b AS col_2, abs(t1.b - t1.c) AS col_3, abs(t1.a) AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5, t1.a + t1.b * 2 AS col_6 ORDER BY col_4, col_5, col_6, col_3, col_1, col_2
---- hash rowsort
13 tuples hashing to 15f8a87acd557eff36b6b45cf6145a89

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3
---- 1
1067|333|107

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3 ORDER BY col_1, col_2
---- 1
1067|333|107

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3
---- 1
1067|333|107

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3 ORDER BY col_3, col_2
---- 1
1067|333|107

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3
---- 1
1067|333|107

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3 ORDER BY col_3, col_2
---- 1
1067|333|107

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3
---- 1
1067|333|107

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3 ORDER BY col_1, col_2, col_3
---- 1
1067|333|107

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.b AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, abs(t1.a) AS col_6
---- hash rowsort
30 tuples hashing to 1ecd732fc97614a29c190f64cedb21e6

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.b AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, abs(t1.a) AS col_6 ORDER BY col_5, col_4, col_3
---- hash rowsort
30 tuples hashing to 1ecd732fc97614a29c190f64cedb21e6

-STATEMENT MATCH (t1:t1) RETURN t1.c AS col_1
---- hash rowsort
30 tuples hashing to 177ddffdf372dd8b1cd1f4f32c609fc7

-STATEMENT MATCH (t1:t1) RETURN t1.c AS col_1 ORDER BY col_1
---- hash rowsort
30 tuples hashing to 177ddffdf372dd8b1cd1f4f32c609fc7

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1
---- 2
635
760

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1 ORDER BY col_1
---- 2
635
760

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR t1.b > t1.c RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2
---- hash rowsort
20 tuples hashing to a066bcf112057385006c3ee80251128d

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR t1.b > t1.c RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2 ORDER BY col_1, col_2
---- hash rowsort
20 tuples hashing to a066bcf112057385006c3ee80251128d

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR t1.d > t1.e RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2
---- hash rowsort
20 tuples hashing to a066bcf112057385006c3ee80251128d

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR t1.d > t1.e RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2 ORDER BY col_1, col_2
---- hash rowsort
20 tuples hashing to a066bcf112057385006c3ee80251128d

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.a AS col_2, t1.d AS col_3, t1.a + t1.b * 2 AS col_4, abs(t1.a) AS col_5, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_6, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_7
---- hash rowsort
30 tuples hashing to fbc9ec93b76c4fb6716609f161ed1737

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.a AS col_2, t1.d AS col_3, t1.a + t1.b * 2 AS col_4, abs(t1.a) AS col_5, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_6, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_7 ORDER BY col_1, col_5, col_7
---- hash rowsort
30 tuples hashing to fbc9ec93b76c4fb6716609f161ed1737

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, abs(t1.b - t1.c) AS col_3
---- hash rowsort
17 tuples hashing to 2ef29759ecbd012e176e97d752db71f4

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, abs(t1.b - t1.c) AS col_3 ORDER BY col_2, col_3
---- hash rowsort
17 tuples hashing to 2ef29759ecbd012e176e97d752db71f4

-STATEMENT MATCH (t1:t1) RETURN t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.b - t1.c AS col_3, abs(t1.b - t1.c) AS col_4, abs(t1.a) AS col_5, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_6, t1.a + t1.b * 2 AS col_7
---- hash rowsort
30 tuples hashing to 924153fc00e68eaae184bcae05105db5

-STATEMENT MATCH (t1:t1) RETURN t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.b - t1.c AS col_3, abs(t1.b - t1.c) AS col_4, abs(t1.a) AS col_5, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_6, t1.a + t1.b * 2 AS col_7 ORDER BY col_7, col_4, col_6, col_2, col_3, col_1, col_5
---- hash rowsort
30 tuples hashing to 924153fc00e68eaae184bcae05105db5

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR (t1.e > t1.c OR t1.e < t1.d) RETURN abs(t1.b - t1.c) AS col_1
---- hash rowsort
26 tuples hashing to bbf5d06f9b3cf6ed2e0c96d97cb93393

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR (t1.e > t1.c OR t1.e < t1.d) RETURN abs(t1.b - t1.c) AS col_1 ORDER BY col_1
---- hash rowsort
26 tuples hashing to bbf5d06f9b3cf6ed2e0c96d97cb93393

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR t1.c > t1.d RETURN abs(t1.b - t1.c) AS col_1
---- hash rowsort
26 tuples hashing to bbf5d06f9b3cf6ed2e0c96d97cb93393

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR t1.c > t1.d RETURN abs(t1.b - t1.c) AS col_1 ORDER BY col_1
---- hash rowsort
26 tuples hashing to bbf5d06f9b3cf6ed2e0c96d97cb93393

-STATEMENT MATCH (t1:t1) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1
---- hash rowsort
30 tuples hashing to 0075716954dbc259c5e8ac65568a6fa7

-STATEMENT MATCH (t1:t1) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1 ORDER BY col_1
---- hash rowsort
30 tuples hashing to 0075716954dbc259c5e8ac65568a6fa7

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.b - t1.c AS col_4, t1.c AS col_5
---- hash rowsort
10 tuples hashing to c0abef7fc17bf093b41ad295ca250beb

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.b - t1.c AS col_4, t1.c AS col_5 ORDER BY col_5, col_1, col_4, col_3, col_2
---- hash rowsort
10 tuples hashing to c0abef7fc17bf093b41ad295ca250beb

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1
---- hash rowsort
13 tuples hashing to d271a615af2e7875654b988689524a23

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1 ORDER BY col_1
---- hash rowsort
13 tuples hashing to d271a615af2e7875654b988689524a23

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.b AS col_2, t1.b - t1.c AS col_3
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.b AS col_2, t1.b - t1.c AS col_3 ORDER BY col_2, col_1, col_3
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.b AS col_2, t1.b - t1.c AS col_3
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.b AS col_2, t1.b - t1.c AS col_3 ORDER BY col_1, col_3
---- 0


-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.a AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.a - t1.b AS col_5
---- hash rowsort
29 tuples hashing to adcbe2157e977aa5b3104d8336f850b9

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.a AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.a - t1.b AS col_5 ORDER BY col_4, col_5, col_1
---- hash rowsort
29 tuples hashing to adcbe2157e977aa5b3104d8336f850b9

-STATEMENT MATCH (t1:t1) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.d AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5, t1.d - t1.e AS col_6, t1.c - t1.d AS col_7
---- hash rowsort
30 tuples hashing to 12b6753aecb255f2092cbe394ac3e0b1

-STATEMENT MATCH (t1:t1) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.d AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5, t1.d - t1.e AS col_6, t1.c - t1.d AS col_7 ORDER BY col_5, col_7, col_3, col_1
---- hash rowsort
30 tuples hashing to 12b6753aecb255f2092cbe394ac3e0b1

-STATEMENT MATCH (t1:t1) RETURN t1.d - t1.e AS col_1, abs(t1.a) AS col_2
---- hash rowsort
30 tuples hashing to eeff397028894e248156d61f81e4f6f0

-STATEMENT MATCH (t1:t1) RETURN t1.d - t1.e AS col_1, abs(t1.a) AS col_2 ORDER BY col_2, col_1
---- hash rowsort
30 tuples hashing to eeff397028894e248156d61f81e4f6f0

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.a > t1.b RETURN t1.b - t1.c AS col_1, abs(t1.b - t1.c) AS col_2, t1.d - t1.e AS col_3, t1.d AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5
---- hash rowsort
18 tuples hashing to 626ef6252ef34893711614adade69fcc

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.a > t1.b RETURN t1.b - t1.c AS col_1, abs(t1.b - t1.c) AS col_2, t1.d - t1.e AS col_3, t1.d AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5 ORDER BY col_2, col_3, col_4
---- hash rowsort
18 tuples hashing to 626ef6252ef34893711614adade69fcc

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.b - t1.c AS col_1, abs(t1.b - t1.c) AS col_2, t1.d - t1.e AS col_3, t1.d AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5
---- hash rowsort
18 tuples hashing to 626ef6252ef34893711614adade69fcc

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.b - t1.c AS col_1, abs(t1.b - t1.c) AS col_2, t1.d - t1.e AS col_3, t1.d AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5 ORDER BY col_2, col_4
---- hash rowsort
18 tuples hashing to 626ef6252ef34893711614adade69fcc

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND t1.d > t1.e AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.b - t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.a + t1.b * 2 AS col_3, t1.c - t1.d AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5, t1.a - t1.b AS col_6
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND t1.d > t1.e AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.b - t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.a + t1.b * 2 AS col_3, t1.c - t1.d AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5, t1.a - t1.b AS col_6 ORDER BY col_2, col_1, col_5, col_3, col_6
---- 0


-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND t1.d > t1.e RETURN t1.b - t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.a + t1.b * 2 AS col_3, t1.c - t1.d AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5, t1.a - t1.b AS col_6
---- 0


-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND t1.d > t1.e RETURN t1.b - t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.a + t1.b * 2 AS col_3, t1.c - t1.d AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5, t1.a - t1.b AS col_6 ORDER BY col_1, col_4, col_3, col_5, col_6
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.b - t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.a + t1.b * 2 AS col_3, t1.c - t1.d AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5, t1.a - t1.b AS col_6
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.b - t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.a + t1.b * 2 AS col_3, t1.c - t1.d AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5, t1.a - t1.b AS col_6 ORDER BY col_3, col_6, col_5, col_2, col_4
---- 0


-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND t1.d > t1.e AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.b - t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.a + t1.b * 2 AS col_3, t1.c - t1.d AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5, t1.a - t1.b AS col_6
---- 0


-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND t1.d > t1.e AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.b - t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.a + t1.b * 2 AS col_3, t1.c - t1.d AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5, t1.a - t1.b AS col_6 ORDER BY col_6, col_4, col_5, col_2, col_3, col_1
---- 0


-STATEMENT MATCH (t1:t1) RETURN t1.b AS col_1, abs(t1.a) AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3
---- hash rowsort
30 tuples hashing to 1040bcfbc48b8da482563e6bf55c8020

-STATEMENT MATCH (t1:t1) RETURN t1.b AS col_1, abs(t1.a) AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3 ORDER BY col_2, col_3
---- hash rowsort
30 tuples hashing to 1040bcfbc48b8da482563e6bf55c8020

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND t1.b > t1.c RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.e AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.c - t1.d AS col_4, t1.a - t1.b AS col_5
---- hash rowsort
4 tuples hashing to 4aa57bffd9ad259bf18a44fc63809db3

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND t1.b > t1.c RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.e AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.c - t1.d AS col_4, t1.a - t1.b AS col_5 ORDER BY col_1, col_4, col_3, col_2
---- hash rowsort
4 tuples hashing to 4aa57bffd9ad259bf18a44fc63809db3

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND t1.c > t1.d RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.e AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.c - t1.d AS col_4, t1.a - t1.b AS col_5
---- hash rowsort
4 tuples hashing to 4aa57bffd9ad259bf18a44fc63809db3

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND t1.c > t1.d RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.e AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.c - t1.d AS col_4, t1.a - t1.b AS col_5 ORDER BY col_1, col_3
---- hash rowsort
4 tuples hashing to 4aa57bffd9ad259bf18a44fc63809db3

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR t1.b > t1.c OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.b AS col_1, t1.a + t1.b * 2 AS col_2
---- hash rowsort
26 tuples hashing to 6edf7153843e52137e6df1f9451808b2

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR t1.b > t1.c OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.b AS col_1, t1.a + t1.b * 2 AS col_2 ORDER BY col_1, col_2
---- hash rowsort
26 tuples hashing to 6edf7153843e52137e6df1f9451808b2

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR NOT (t1.d >= 110 AND t1.d <= 150) OR t1.b > t1.c RETURN t1.b AS col_1, t1.a + t1.b * 2 AS col_2
---- hash rowsort
26 tuples hashing to 6edf7153843e52137e6df1f9451808b2

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR NOT (t1.d >= 110 AND t1.d <= 150) OR t1.b > t1.c RETURN t1.b AS col_1, t1.a + t1.b * 2 AS col_2 ORDER BY col_1, col_2
---- hash rowsort
26 tuples hashing to 6edf7153843e52137e6df1f9451808b2

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR t1.b > t1.c OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.b AS col_1, t1.a + t1.b * 2 AS col_2
---- hash rowsort
26 tuples hashing to 6edf7153843e52137e6df1f9451808b2

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR t1.b > t1.c OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.b AS col_1, t1.a + t1.b * 2 AS col_2 ORDER BY col_2, col_1
---- hash rowsort
26 tuples hashing to 6edf7153843e52137e6df1f9451808b2

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR t1.b > t1.c RETURN t1.b AS col_1, t1.a + t1.b * 2 AS col_2
---- hash rowsort
26 tuples hashing to 6edf7153843e52137e6df1f9451808b2

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR t1.b > t1.c RETURN t1.b AS col_1, t1.a + t1.b * 2 AS col_2 ORDER BY col_1, col_2
---- hash rowsort
26 tuples hashing to 6edf7153843e52137e6df1f9451808b2

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.c - t1.d AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.d AS col_4
---- hash rowsort
14 tuples hashing to 79e43be9c8bc1b1482e9e3ec5055d625

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.c - t1.d AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.d AS col_4 ORDER BY col_3, col_2, col_4, col_1
---- hash rowsort
14 tuples hashing to 79e43be9c8bc1b1482e9e3ec5055d625

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND t1.a > t1.b AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a - t1.b AS col_1
---- hash rowsort
10 tuples hashing to f18663fb394835caeb11f30bbb756057

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND t1.a > t1.b AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a - t1.b AS col_1 ORDER BY col_1
---- hash rowsort
10 tuples hashing to f18663fb394835caeb11f30bbb756057

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND NOT (t1.d >= 110 AND t1.d <= 150) AND t1.a > t1.b RETURN t1.a - t1.b AS col_1
---- hash rowsort
10 tuples hashing to f18663fb394835caeb11f30bbb756057

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND NOT (t1.d >= 110 AND t1.d <= 150) AND t1.a > t1.b RETURN t1.a - t1.b AS col_1 ORDER BY col_1
---- hash rowsort
10 tuples hashing to f18663fb394835caeb11f30bbb756057

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.e > t1.c OR t1.e < t1.d) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a - t1.b AS col_1
---- hash rowsort
10 tuples hashing to f18663fb394835caeb11f30bbb756057

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.e > t1.c OR t1.e < t1.d) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a - t1.b AS col_1 ORDER BY col_1
---- hash rowsort
10 tuples hashing to f18663fb394835caeb11f30bbb756057

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.c - t1.d AS col_2, t1.c AS col_3, t1.b AS col_4, t1.e AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_6
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.c - t1.d AS col_2, t1.c AS col_3, t1.b AS col_4, t1.e AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_6 ORDER BY col_1, col_4, col_3, col_5, col_2, col_6
---- 0


-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.c > t1.d AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.c - t1.d AS col_2, t1.c AS col_3, t1.b AS col_4, t1.e AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_6
---- 0


-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.c > t1.d AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.c - t1.d AS col_2, t1.c AS col_3, t1.b AS col_4, t1.e AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_6 ORDER BY col_1, col_6
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND t1.c > t1.d AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.c - t1.d AS col_2, t1.c AS col_3, t1.b AS col_4, t1.e AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_6
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND t1.c > t1.d AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.c - t1.d AS col_2, t1.c AS col_3, t1.b AS col_4, t1.e AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_6 ORDER BY col_4, col_2, col_1
---- 0


-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.e > t1.c OR t1.e < t1.d) AND t1.c > t1.d RETURN t1.d - t1.e AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2
---- 4
-4|1430
1|1300
1|1390
3|364

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.e > t1.c OR t1.e < t1.d) AND t1.c > t1.d RETURN t1.d - t1.e AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2 ORDER BY col_2, col_1
---- 4
-4|1430
1|1300
1|1390
3|364

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND t1.c > t1.d AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.d - t1.e AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2
---- 4
-4|1430
1|1300
1|1390
3|364

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND t1.c > t1.d AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.d - t1.e AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2 ORDER BY col_1, col_2
---- 4
-4|1430
1|1300
1|1390
3|364

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3
---- hash rowsort
30 tuples hashing to 3e9e8f67aeb7ef26568b78aaec231885

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3 ORDER BY col_3, col_1
---- hash rowsort
30 tuples hashing to 3e9e8f67aeb7ef26568b78aaec231885

-STATEMENT MATCH (t1:t1) RETURN t1.d - t1.e AS col_1, t1.b AS col_2
---- hash rowsort
30 tuples hashing to 8cf8dd4e30fa1a0ba26c7c32e36c2ccd

-STATEMENT MATCH (t1:t1) RETURN t1.d - t1.e AS col_1, t1.b AS col_2 ORDER BY col_2, col_1
---- hash rowsort
30 tuples hashing to 8cf8dd4e30fa1a0ba26c7c32e36c2ccd

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND t1.c > t1.d AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN abs(t1.b - t1.c) AS col_1, abs(t1.a) AS col_2, t1.d - t1.e AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.a AS col_5
---- hash rowsort
5 tuples hashing to d782d4b19976325c2cb7b97f99c702cb

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND t1.c > t1.d AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN abs(t1.b - t1.c) AS col_1, abs(t1.a) AS col_2, t1.d - t1.e AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.a AS col_5 ORDER BY col_3, col_1, col_5, col_2
---- hash rowsort
5 tuples hashing to d782d4b19976325c2cb7b97f99c702cb

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.c > t1.d RETURN abs(t1.b - t1.c) AS col_1, abs(t1.a) AS col_2, t1.d - t1.e AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.a AS col_5
---- hash rowsort
5 tuples hashing to d782d4b19976325c2cb7b97f99c702cb

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.c > t1.d RETURN abs(t1.b - t1.c) AS col_1, abs(t1.a) AS col_2, t1.d - t1.e AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.a AS col_5 ORDER BY col_3, col_1, col_5, col_2
---- hash rowsort
5 tuples hashing to d782d4b19976325c2cb7b97f99c702cb

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.a > t1.b AND t1.c > t1.d RETURN abs(t1.b - t1.c) AS col_1, abs(t1.a) AS col_2, t1.d - t1.e AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.a AS col_5
---- hash rowsort
5 tuples hashing to d782d4b19976325c2cb7b97f99c702cb

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.a > t1.b AND t1.c > t1.d RETURN abs(t1.b - t1.c) AS col_1, abs(t1.a) AS col_2, t1.d - t1.e AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.a AS col_5 ORDER BY col_5, col_1, col_4
---- hash rowsort
5 tuples hashing to d782d4b19976325c2cb7b97f99c702cb

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.a > t1.b RETURN abs(t1.b - t1.c) AS col_1, abs(t1.a) AS col_2, t1.d - t1.e AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.a AS col_5
---- hash rowsort
5 tuples hashing to d782d4b19976325c2cb7b97f99c702cb

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.a > t1.b RETURN abs(t1.b - t1.c) AS col_1, abs(t1.a) AS col_2, t1.d - t1.e AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.a AS col_5 ORDER BY col_4, col_1, col_3
---- hash rowsort
5 tuples hashing to d782d4b19976325c2cb7b97f99c702cb

-STATEMENT MATCH (t1:t1) RETURN t1.d - t1.e AS col_1
---- hash rowsort
30 tuples hashing to 9e2d6381b04ea314cd79c5fc9325b30e

-STATEMENT MATCH (t1:t1) RETURN t1.d - t1.e AS col_1 ORDER BY col_1
---- hash rowsort
30 tuples hashing to 9e2d6381b04ea314cd79c5fc9325b30e

-STATEMENT MATCH (t1:t1) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.b - t1.c AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.a AS col_4, abs(t1.b - t1.c) AS col_5
---- hash rowsort
30 tuples hashing to d816f0f14e2bff044cd70aff15ac2d4b

-STATEMENT MATCH (t1:t1) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.b - t1.c AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.a AS col_4, abs(t1.b - t1.c) AS col_5 ORDER BY col_2, col_4, col_1
---- hash rowsort
30 tuples hashing to d816f0f14e2bff044cd70aff15ac2d4b

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.e > t1.a AND t1.e < t1.b) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.c AS col_1
---- 0


-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.e > t1.a AND t1.e < t1.b) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.c AS col_1 ORDER BY col_1
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.c AS col_1
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.c AS col_1 ORDER BY col_1
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR t1.a > t1.b RETURN t1.e AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2
---- hash rowsort
20 tuples hashing to 9102a4c60187cf2a5da79119275168f3

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR t1.a > t1.b RETURN t1.e AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2 ORDER BY col_2, col_1
---- hash rowsort
20 tuples hashing to 9102a4c60187cf2a5da79119275168f3

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR (t1.e > t1.a AND t1.e < t1.b) RETURN t1.e AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2
---- hash rowsort
20 tuples hashing to 9102a4c60187cf2a5da79119275168f3

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR (t1.e > t1.a AND t1.e < t1.b) RETURN t1.e AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2 ORDER BY col_1, col_2
---- hash rowsort
20 tuples hashing to 9102a4c60187cf2a5da79119275168f3

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR NOT (t1.d >= 110 AND t1.d <= 150) OR t1.c > t1.d RETURN abs(t1.a) AS col_1, t1.d - t1.e AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, abs(t1.b - t1.c) AS col_4, t1.b AS col_5
---- hash rowsort
24 tuples hashing to 7f568c528311be6ed6eec5ebe0e3ef6a

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR NOT (t1.d >= 110 AND t1.d <= 150) OR t1.c > t1.d RETURN abs(t1.a) AS col_1, t1.d - t1.e AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, abs(t1.b - t1.c) AS col_4, t1.b AS col_5 ORDER BY col_4, col_1, col_5
---- hash rowsort
24 tuples hashing to 7f568c528311be6ed6eec5ebe0e3ef6a

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR t1.c > t1.d OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN abs(t1.a) AS col_1, t1.d - t1.e AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, abs(t1.b - t1.c) AS col_4, t1.b AS col_5
---- hash rowsort
24 tuples hashing to 7f568c528311be6ed6eec5ebe0e3ef6a

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR t1.c > t1.d OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN abs(t1.a) AS col_1, t1.d - t1.e AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, abs(t1.b - t1.c) AS col_4, t1.b AS col_5 ORDER BY col_1, col_2, col_4
---- hash rowsort
24 tuples hashing to 7f568c528311be6ed6eec5ebe0e3ef6a

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR NOT (t1.d >= 110 AND t1.d <= 150) OR t1.d > t1.e RETURN abs(t1.a) AS col_1, t1.d - t1.e AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, abs(t1.b - t1.c) AS col_4, t1.b AS col_5
---- hash rowsort
24 tuples hashing to 7f568c528311be6ed6eec5ebe0e3ef6a

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR NOT (t1.d >= 110 AND t1.d <= 150) OR t1.d > t1.e RETURN abs(t1.a) AS col_1, t1.d - t1.e AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, abs(t1.b - t1.c) AS col_4, t1.b AS col_5 ORDER BY col_1, col_3
---- hash rowsort
24 tuples hashing to 7f568c528311be6ed6eec5ebe0e3ef6a

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.c AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.a AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_6, abs(t1.a) AS col_7
---- hash rowsort
10 tuples hashing to d354893ad347c5d343981e64288646e8

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.c AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.a AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_6, abs(t1.a) AS col_7 ORDER BY col_4, col_1, col_5, col_2, col_6, col_3
---- hash rowsort
10 tuples hashing to d354893ad347c5d343981e64288646e8

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, abs(t1.b - t1.c) AS col_5, t1.d AS col_6
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, abs(t1.b - t1.c) AS col_5, t1.d AS col_6 ORDER BY col_3, col_2
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, abs(t1.b - t1.c) AS col_5, t1.d AS col_6
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, abs(t1.b - t1.c) AS col_5, t1.d AS col_6 ORDER BY col_5, col_6, col_2, col_3, col_1, col_4
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, abs(t1.b - t1.c) AS col_5, t1.d AS col_6
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, abs(t1.b - t1.c) AS col_5, t1.d AS col_6 ORDER BY col_4, col_6, col_5, col_1, col_3, col_2
---- 0


-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.d AS col_1, t1.c - t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.c AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_6
---- hash rowsort
30 tuples hashing to 36e748eb3b5f1beac4d5c62c3fb4b854

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.d AS col_1, t1.c - t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.c AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_6 ORDER BY col_2, col_5, col_6, col_3, col_1
---- hash rowsort
30 tuples hashing to 36e748eb3b5f1beac4d5c62c3fb4b854

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.a AS col_4, t1.b AS col_5, t1.c AS col_6, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_7
---- hash rowsort
28 tuples hashing to 5403ef2d6951bd8fa174d4149c728d2c

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.a AS col_4, t1.b AS col_5, t1.c AS col_6, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_7 ORDER BY col_3, col_6
---- hash rowsort
28 tuples hashing to 5403ef2d6951bd8fa174d4149c728d2c

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR t1.c > t1.d RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.a AS col_4, t1.b AS col_5, t1.c AS col_6, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_7
---- hash rowsort
28 tuples hashing to 5403ef2d6951bd8fa174d4149c728d2c

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR t1.c > t1.d RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.a AS col_4, t1.b AS col_5, t1.c AS col_6, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_7 ORDER BY col_7, col_4, col_3, col_5, col_2, col_6, col_1
---- hash rowsort
28 tuples hashing to 5403ef2d6951bd8fa174d4149c728d2c

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.b - t1.c AS col_2, abs(t1.a) AS col_3, t1.d AS col_4, abs(t1.b - t1.c) AS col_5, t1.c AS col_6, t1.d - t1.e AS col_7
---- hash rowsort
30 tuples hashing to b047d56f74f0ab55f66fea22b4c3b64d

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.b - t1.c AS col_2, abs(t1.a) AS col_3, t1.d AS col_4, abs(t1.b - t1.c) AS col_5, t1.c AS col_6, t1.d - t1.e AS col_7 ORDER BY col_4, col_3, col_5, col_2, col_6, col_7
---- hash rowsort
30 tuples hashing to b047d56f74f0ab55f66fea22b4c3b64d

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a + t1.b * 2 AS col_1, t1.a AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.e AS col_4, t1.c - t1.d AS col_5
---- hash rowsort
24 tuples hashing to 15eab5346226dca12c84b3717d672faf

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a + t1.b * 2 AS col_1, t1.a AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.e AS col_4, t1.c - t1.d AS col_5 ORDER BY col_4, col_5
---- hash rowsort
24 tuples hashing to 15eab5346226dca12c84b3717d672faf

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a + t1.b * 2 AS col_1, t1.a AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.e AS col_4, t1.c - t1.d AS col_5
---- hash rowsort
24 tuples hashing to 15eab5346226dca12c84b3717d672faf

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a + t1.b * 2 AS col_1, t1.a AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.e AS col_4, t1.c - t1.d AS col_5 ORDER BY col_5, col_2
---- hash rowsort
24 tuples hashing to 15eab5346226dca12c84b3717d672faf

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a + t1.b * 2 AS col_1, t1.a AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.e AS col_4, t1.c - t1.d AS col_5
---- hash rowsort
24 tuples hashing to 15eab5346226dca12c84b3717d672faf

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a + t1.b * 2 AS col_1, t1.a AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.e AS col_4, t1.c - t1.d AS col_5 ORDER BY col_1, col_3, col_5, col_4
---- hash rowsort
24 tuples hashing to 15eab5346226dca12c84b3717d672faf

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.a AS col_4, t1.c - t1.d AS col_5, t1.a - t1.b AS col_6
---- hash rowsort
8 tuples hashing to daf2cdb908e35fa07f04d94c58909428

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.a AS col_4, t1.c - t1.d AS col_5, t1.a - t1.b AS col_6 ORDER BY col_1, col_5, col_2, col_3, col_4
---- hash rowsort
8 tuples hashing to daf2cdb908e35fa07f04d94c58909428

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.d > t1.e OR t1.b > t1.c OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4
---- hash rowsort
24 tuples hashing to 44da1927a8f7dc680350aa237e4bf11f

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.d > t1.e OR t1.b > t1.c OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4 ORDER BY col_3, col_2, col_4
---- hash rowsort
24 tuples hashing to 44da1927a8f7dc680350aa237e4bf11f

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR t1.b > t1.c OR t1.d > t1.e RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4
---- hash rowsort
24 tuples hashing to 44da1927a8f7dc680350aa237e4bf11f

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR t1.b > t1.c OR t1.d > t1.e RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4 ORDER BY col_1, col_4, col_2
---- hash rowsort
24 tuples hashing to 44da1927a8f7dc680350aa237e4bf11f

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR t1.d > t1.e OR t1.b > t1.c RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4
---- hash rowsort
24 tuples hashing to 44da1927a8f7dc680350aa237e4bf11f

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR t1.d > t1.e OR t1.b > t1.c RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4 ORDER BY col_3, col_2
---- hash rowsort
24 tuples hashing to 44da1927a8f7dc680350aa237e4bf11f

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.d - t1.e AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5, t1.a + t1.b * 2 AS col_6, t1.a - t1.b AS col_7
---- hash rowsort
15 tuples hashing to 54c654e1e6431af9fd26b5eb45fdfe9b

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.d - t1.e AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5, t1.a + t1.b * 2 AS col_6, t1.a - t1.b AS col_7 ORDER BY col_5, col_6, col_1, col_3, col_7
---- hash rowsort
15 tuples hashing to 54c654e1e6431af9fd26b5eb45fdfe9b

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.c AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4
---- hash rowsort
21 tuples hashing to 87b28524c600c839717c27b7fb63bd50

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.c AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4 ORDER BY col_2, col_4
---- hash rowsort
21 tuples hashing to 87b28524c600c839717c27b7fb63bd50

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN abs(t1.a) AS col_1, t1.a + t1.b * 2 AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.c AS col_5, t1.d AS col_6, t1.c - t1.d AS col_7
---- hash rowsort
15 tuples hashing to 077ef28ce7fb5bae0691476a025491fc

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN abs(t1.a) AS col_1, t1.a + t1.b * 2 AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.c AS col_5, t1.d AS col_6, t1.c - t1.d AS col_7 ORDER BY col_1, col_3, col_2, col_6, col_5, col_7, col_4
---- hash rowsort
15 tuples hashing to 077ef28ce7fb5bae0691476a025491fc

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a AS col_1
---- 3
191
220
245

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a AS col_1 ORDER BY col_1
---- 3
191
220
245

-STATEMENT MATCH (t1:t1) RETURN t1.c - t1.d AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.b - t1.c AS col_4
---- hash rowsort
30 tuples hashing to 819c892fbc5c854738f5016649048d8f

-STATEMENT MATCH (t1:t1) RETURN t1.c - t1.d AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.b - t1.c AS col_4 ORDER BY col_3, col_1, col_4, col_2
---- hash rowsort
30 tuples hashing to 819c892fbc5c854738f5016649048d8f

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.b > t1.c AND t1.a > t1.b RETURN abs(t1.a) AS col_1, t1.a + t1.b * 2 AS col_2
---- 4
159|475
168|502
199|595
229|685

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.b > t1.c AND t1.a > t1.b RETURN abs(t1.a) AS col_1, t1.a + t1.b * 2 AS col_2 ORDER BY col_1, col_2
---- 4
159|475
168|502
199|595
229|685

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND t1.b > t1.c AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN abs(t1.a) AS col_1, t1.a + t1.b * 2 AS col_2
---- 4
159|475
168|502
199|595
229|685

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND t1.b > t1.c AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN abs(t1.a) AS col_1, t1.a + t1.b * 2 AS col_2 ORDER BY col_1, col_2
---- 4
159|475
168|502
199|595
229|685

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND t1.a > t1.b AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN abs(t1.a) AS col_1, t1.a + t1.b * 2 AS col_2
---- 4
159|475
168|502
199|595
229|685

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND t1.a > t1.b AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN abs(t1.a) AS col_1, t1.a + t1.b * 2 AS col_2 ORDER BY col_2, col_1
---- 4
159|475
168|502
199|595
229|685

-STATEMENT MATCH (t1:t1) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.a AS col_2
---- hash rowsort
30 tuples hashing to a159b23fd53b433a22233bac12bfcbfd

-STATEMENT MATCH (t1:t1) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.a AS col_2 ORDER BY col_2, col_1
---- hash rowsort
30 tuples hashing to a159b23fd53b433a22233bac12bfcbfd

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.d > t1.e RETURN abs(t1.b - t1.c) AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.b AS col_3, t1.d - t1.e AS col_4
---- hash rowsort
16 tuples hashing to 3566124dacd2c12176bfda780e1a9b96

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.d > t1.e RETURN abs(t1.b - t1.c) AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.b AS col_3, t1.d - t1.e AS col_4 ORDER BY col_4, col_2
---- hash rowsort
16 tuples hashing to 3566124dacd2c12176bfda780e1a9b96

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN abs(t1.b - t1.c) AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.b AS col_3, t1.d - t1.e AS col_4
---- hash rowsort
16 tuples hashing to 3566124dacd2c12176bfda780e1a9b96

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN abs(t1.b - t1.c) AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.b AS col_3, t1.d - t1.e AS col_4 ORDER BY col_4, col_1, col_3
---- hash rowsort
16 tuples hashing to 3566124dacd2c12176bfda780e1a9b96

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5
---- hash rowsort
30 tuples hashing to 22246749bbaaa527ef55579a649f1f59

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5 ORDER BY col_3, col_5, col_1
---- hash rowsort
30 tuples hashing to 22246749bbaaa527ef55579a649f1f59

-STATEMENT MATCH (t1:t1) RETURN t1.e AS col_1, t1.d - t1.e AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.b AS col_4, t1.a AS col_5
---- hash rowsort
30 tuples hashing to bbb491379c2c046a624e37471571dca3

-STATEMENT MATCH (t1:t1) RETURN t1.e AS col_1, t1.d - t1.e AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.b AS col_4, t1.a AS col_5 ORDER BY col_4, col_2, col_3, col_5
---- hash rowsort
30 tuples hashing to bbb491379c2c046a624e37471571dca3

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3
---- hash rowsort
19 tuples hashing to 881ebccd5da31eb464ebc33480b921bd

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3 ORDER BY col_1, col_3, col_2
---- hash rowsort
19 tuples hashing to 881ebccd5da31eb464ebc33480b921bd

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.a > t1.b RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3
---- hash rowsort
19 tuples hashing to 881ebccd5da31eb464ebc33480b921bd

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.a > t1.b RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3 ORDER BY col_1, col_2
---- hash rowsort
19 tuples hashing to 881ebccd5da31eb464ebc33480b921bd

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.b AS col_3, t1.d - t1.e AS col_4, abs(t1.b - t1.c) AS col_5, t1.d AS col_6
---- hash rowsort
22 tuples hashing to 2fad9b201c26f61f51170e12cdacb20d

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.b AS col_3, t1.d - t1.e AS col_4, abs(t1.b - t1.c) AS col_5, t1.d AS col_6 ORDER BY col_3, col_4, col_6
---- hash rowsort
22 tuples hashing to 2fad9b201c26f61f51170e12cdacb20d

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.b AS col_3, t1.d - t1.e AS col_4, abs(t1.b - t1.c) AS col_5, t1.d AS col_6
---- hash rowsort
22 tuples hashing to 2fad9b201c26f61f51170e12cdacb20d

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.b AS col_3, t1.d - t1.e AS col_4, abs(t1.b - t1.c) AS col_5, t1.d AS col_6 ORDER BY col_6, col_4
---- hash rowsort
22 tuples hashing to 2fad9b201c26f61f51170e12cdacb20d

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.d - t1.e AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.a - t1.b AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_6, abs(t1.a) AS col_7
---- hash rowsort
30 tuples hashing to bad1bff3c68810098c882b1301d57d5b

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.d - t1.e AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.a - t1.b AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_6, abs(t1.a) AS col_7 ORDER BY col_7, col_6, col_2, col_1, col_3, col_4
---- hash rowsort
30 tuples hashing to bad1bff3c68810098c882b1301d57d5b

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.c - t1.d AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, abs(t1.a) AS col_4, t1.d AS col_5
---- hash rowsort
30 tuples hashing to a2c1f470369263777dccdd62b6cc58a3

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.c - t1.d AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, abs(t1.a) AS col_4, t1.d AS col_5 ORDER BY col_1, col_2
---- hash rowsort
30 tuples hashing to a2c1f470369263777dccdd62b6cc58a3

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2
---- 2
1050|0
1290|3

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2 ORDER BY col_1, col_2
---- 2
1050|0
1290|3

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.b > t1.c OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a AS col_1, t1.d - t1.e AS col_2, t1.c AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4
---- hash rowsort
24 tuples hashing to ec09cfec9014af043b24a1141a68712f

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.b > t1.c OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a AS col_1, t1.d - t1.e AS col_2, t1.c AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4 ORDER BY col_1, col_2
---- hash rowsort
24 tuples hashing to ec09cfec9014af043b24a1141a68712f

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR t1.b > t1.c OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a AS col_1, t1.d - t1.e AS col_2, t1.c AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4
---- hash rowsort
24 tuples hashing to ec09cfec9014af043b24a1141a68712f

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR t1.b > t1.c OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a AS col_1, t1.d - t1.e AS col_2, t1.c AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4 ORDER BY col_2, col_4
---- hash rowsort
24 tuples hashing to ec09cfec9014af043b24a1141a68712f

-STATEMENT MATCH (t1:t1) RETURN t1.e AS col_1, t1.a + t1.b * 2 AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.a - t1.b AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, abs(t1.b - t1.c) AS col_6
---- hash rowsort
30 tuples hashing to 2f7e45662cd1d11b127086683f18509a

-STATEMENT MATCH (t1:t1) RETURN t1.e AS col_1, t1.a + t1.b * 2 AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.a - t1.b AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, abs(t1.b - t1.c) AS col_6 ORDER BY col_1, col_3, col_5, col_6, col_4, col_2
---- hash rowsort
30 tuples hashing to 2f7e45662cd1d11b127086683f18509a

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1
---- hash rowsort
9 tuples hashing to 0f7c2e78d7bf193feb4afa3397bfc48b

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1 ORDER BY col_1
---- hash rowsort
9 tuples hashing to 0f7c2e78d7bf193feb4afa3397bfc48b

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1
---- hash rowsort
9 tuples hashing to 0f7c2e78d7bf193feb4afa3397bfc48b

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1 ORDER BY col_1
---- hash rowsort
9 tuples hashing to 0f7c2e78d7bf193feb4afa3397bfc48b

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.e > t1.c OR t1.e < t1.d) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1
---- hash rowsort
9 tuples hashing to 0f7c2e78d7bf193feb4afa3397bfc48b

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.e > t1.c OR t1.e < t1.d) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1 ORDER BY col_1
---- hash rowsort
9 tuples hashing to 0f7c2e78d7bf193feb4afa3397bfc48b

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.a + t1.b * 2 AS col_2, t1.b - t1.c AS col_3
---- hash rowsort
8 tuples hashing to 44d9cfffe4b77b006619cdc7b5f56f76

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.a + t1.b * 2 AS col_2, t1.b - t1.c AS col_3 ORDER BY col_2, col_1, col_3
---- hash rowsort
8 tuples hashing to 44d9cfffe4b77b006619cdc7b5f56f76

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b RETURN t1.d - t1.e AS col_1, t1.d AS col_2, t1.a + t1.b * 2 AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5, t1.b AS col_6, t1.e AS col_7
---- hash rowsort
17 tuples hashing to b5a3a414af9dfc13a52235ebb2e2a5cd

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b RETURN t1.d - t1.e AS col_1, t1.d AS col_2, t1.a + t1.b * 2 AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5, t1.b AS col_6, t1.e AS col_7 ORDER BY col_1, col_5, col_7, col_6, col_4, col_3
---- hash rowsort
17 tuples hashing to b5a3a414af9dfc13a52235ebb2e2a5cd

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a AS col_1, t1.d - t1.e AS col_2, t1.e AS col_3
---- hash rowsort
17 tuples hashing to da371f3bfca30ba9e03f2c8a0a03051d

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a AS col_1, t1.d - t1.e AS col_2, t1.e AS col_3 ORDER BY col_2, col_1, col_3
---- hash rowsort
17 tuples hashing to da371f3bfca30ba9e03f2c8a0a03051d

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.b > t1.c RETURN t1.e AS col_1
---- hash rowsort
15 tuples hashing to 7b91d490207e5d46d4cdedd249b0649a

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.b > t1.c RETURN t1.e AS col_1 ORDER BY col_1
---- hash rowsort
15 tuples hashing to 7b91d490207e5d46d4cdedd249b0649a

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.e AS col_1
---- hash rowsort
15 tuples hashing to 7b91d490207e5d46d4cdedd249b0649a

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.e AS col_1 ORDER BY col_1
---- hash rowsort
15 tuples hashing to 7b91d490207e5d46d4cdedd249b0649a

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, t1.a - t1.b AS col_5
---- 1
1290|3|1272|1902|-2

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, t1.a - t1.b AS col_5 ORDER BY col_2, col_4
---- 1
1290|3|1272|1902|-2

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.e > t1.a AND t1.e < t1.b) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.d AS col_1, t1.a + t1.b * 2 AS col_2, abs(t1.a) AS col_3, abs(t1.b - t1.c) AS col_4, t1.a - t1.b AS col_5, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_6
---- hash rowsort
13 tuples hashing to 42734ac27e5bd09a22c811113ba2cd6e

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.e > t1.a AND t1.e < t1.b) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.d AS col_1, t1.a + t1.b * 2 AS col_2, abs(t1.a) AS col_3, abs(t1.b - t1.c) AS col_4, t1.a - t1.b AS col_5, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_6 ORDER BY col_2, col_5, col_3, col_1, col_4, col_6
---- hash rowsort
13 tuples hashing to 42734ac27e5bd09a22c811113ba2cd6e

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.d > t1.e RETURN t1.d AS col_1, t1.a + t1.b * 2 AS col_2, abs(t1.a) AS col_3, abs(t1.b - t1.c) AS col_4, t1.a - t1.b AS col_5, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_6
---- hash rowsort
13 tuples hashing to 42734ac27e5bd09a22c811113ba2cd6e

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.d > t1.e RETURN t1.d AS col_1, t1.a + t1.b * 2 AS col_2, abs(t1.a) AS col_3, abs(t1.b - t1.c) AS col_4, t1.a - t1.b AS col_5, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_6 ORDER BY col_5, col_1, col_6, col_2
---- hash rowsort
13 tuples hashing to 42734ac27e5bd09a22c811113ba2cd6e

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.d > t1.e OR (t1.e > t1.a AND t1.e < t1.b) RETURN t1.d AS col_1, t1.a + t1.b * 2 AS col_2, abs(t1.a) AS col_3, abs(t1.b - t1.c) AS col_4, t1.a - t1.b AS col_5, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_6
---- hash rowsort
13 tuples hashing to 42734ac27e5bd09a22c811113ba2cd6e

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.d > t1.e OR (t1.e > t1.a AND t1.e < t1.b) RETURN t1.d AS col_1, t1.a + t1.b * 2 AS col_2, abs(t1.a) AS col_3, abs(t1.b - t1.c) AS col_4, t1.a - t1.b AS col_5, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_6 ORDER BY col_2, col_3, col_4, col_1, col_5
---- hash rowsort
13 tuples hashing to 42734ac27e5bd09a22c811113ba2cd6e

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.e > t1.a AND t1.e < t1.b) RETURN t1.d AS col_1, t1.a + t1.b * 2 AS col_2, abs(t1.a) AS col_3, abs(t1.b - t1.c) AS col_4, t1.a - t1.b AS col_5, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_6
---- hash rowsort
13 tuples hashing to 42734ac27e5bd09a22c811113ba2cd6e

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.e > t1.a AND t1.e < t1.b) RETURN t1.d AS col_1, t1.a + t1.b * 2 AS col_2, abs(t1.a) AS col_3, abs(t1.b - t1.c) AS col_4, t1.a - t1.b AS col_5, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_6 ORDER BY col_3, col_4, col_1, col_5
---- hash rowsort
13 tuples hashing to 42734ac27e5bd09a22c811113ba2cd6e

-STATEMENT MATCH (t1:t1) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, abs(t1.b - t1.c) AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_6
---- hash rowsort
30 tuples hashing to 8bb12c7cd5b4f87c7f4c64ddde4f7633

-STATEMENT MATCH (t1:t1) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, abs(t1.b - t1.c) AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_6 ORDER BY col_6, col_4, col_2, col_5
---- hash rowsort
30 tuples hashing to 8bb12c7cd5b4f87c7f4c64ddde4f7633

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.a > t1.b OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, abs(t1.b - t1.c) AS col_5, t1.d AS col_6, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_7
---- hash rowsort
22 tuples hashing to 9ad59033307ede2ebfba5c59c8379741

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.a > t1.b OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, abs(t1.b - t1.c) AS col_5, t1.d AS col_6, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_7 ORDER BY col_4, col_6, col_5, col_3
---- hash rowsort
22 tuples hashing to 9ad59033307ede2ebfba5c59c8379741

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.b - t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.d - t1.e AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.a + t1.b * 2 AS col_5, t1.e AS col_6
---- hash rowsort
3 tuples hashing to 67d527ba69854a5db8f6f51bd5f14f91

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.b - t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.d - t1.e AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.a + t1.b * 2 AS col_5, t1.e AS col_6 ORDER BY col_1, col_5, col_4, col_6
---- hash rowsort
3 tuples hashing to 67d527ba69854a5db8f6f51bd5f14f91

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.b - t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.d - t1.e AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.a + t1.b * 2 AS col_5, t1.e AS col_6
---- hash rowsort
3 tuples hashing to 67d527ba69854a5db8f6f51bd5f14f91

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.b - t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.d - t1.e AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.a + t1.b * 2 AS col_5, t1.e AS col_6 ORDER BY col_6, col_1, col_2
---- hash rowsort
3 tuples hashing to 67d527ba69854a5db8f6f51bd5f14f91

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.b - t1.c AS col_1, t1.e AS col_2, t1.d AS col_3, abs(t1.a) AS col_4, abs(t1.b - t1.c) AS col_5, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_6, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_7
---- hash rowsort
30 tuples hashing to 177a4f862e7e470622e4e575024da470

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.b - t1.c AS col_1, t1.e AS col_2, t1.d AS col_3, abs(t1.a) AS col_4, abs(t1.b - t1.c) AS col_5, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_6, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_7 ORDER BY col_1, col_6, col_5, col_2, col_3, col_7
---- hash rowsort
30 tuples hashing to 177a4f862e7e470622e4e575024da470

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, abs(t1.b - t1.c) AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5
---- hash rowsort
26 tuples hashing to 526f5f5d9210eea0fcec55deb9e8f8e0

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, abs(t1.b - t1.c) AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5 ORDER BY col_2, col_5, col_1, col_4, col_3
---- hash rowsort
26 tuples hashing to 526f5f5d9210eea0fcec55deb9e8f8e0

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c RETURN t1.b - t1.c AS col_1, t1.b AS col_2, t1.a - t1.b AS col_3, t1.c - t1.d AS col_4, t1.d - t1.e AS col_5, t1.e AS col_6
---- hash rowsort
13 tuples hashing to edbe7006d53a6726fff6226000ae6c1c

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c RETURN t1.b - t1.c AS col_1, t1.b AS col_2, t1.a - t1.b AS col_3, t1.c - t1.d AS col_4, t1.d - t1.e AS col_5, t1.e AS col_6 ORDER BY col_3, col_1, col_4, col_2, col_6, col_5
---- hash rowsort
13 tuples hashing to edbe7006d53a6726fff6226000ae6c1c

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.b > t1.c RETURN abs(t1.a) AS col_1, t1.d - t1.e AS col_2
---- hash rowsort
6 tuples hashing to 66f5b8188cd6c0e53ad39ec35e860eb6

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.b > t1.c RETURN abs(t1.a) AS col_1, t1.d - t1.e AS col_2 ORDER BY col_1, col_2
---- hash rowsort
6 tuples hashing to 66f5b8188cd6c0e53ad39ec35e860eb6

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN abs(t1.a) AS col_1, t1.d - t1.e AS col_2
---- hash rowsort
6 tuples hashing to 66f5b8188cd6c0e53ad39ec35e860eb6

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN abs(t1.a) AS col_1, t1.d - t1.e AS col_2 ORDER BY col_1, col_2
---- hash rowsort
6 tuples hashing to 66f5b8188cd6c0e53ad39ec35e860eb6

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a AS col_1, t1.b - t1.c AS col_2
---- 3
191|1
220|-1
245|2

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a AS col_1, t1.b - t1.c AS col_2 ORDER BY col_2, col_1
---- 3
191|1
220|-1
245|2

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, abs(t1.a) AS col_2, abs(t1.b - t1.c) AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.d AS col_5, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_6, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_7
---- hash rowsort
30 tuples hashing to 192cee60e1f03daaf68361cb90ded9ad

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, abs(t1.a) AS col_2, abs(t1.b - t1.c) AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.d AS col_5, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_6, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_7 ORDER BY col_2, col_1, col_6
---- hash rowsort
30 tuples hashing to 192cee60e1f03daaf68361cb90ded9ad

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.b - t1.c AS col_2
---- hash rowsort
30 tuples hashing to a8239bce4eec88df9ceb22456031d216

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.b - t1.c AS col_2 ORDER BY col_2, col_1
---- hash rowsort
30 tuples hashing to a8239bce4eec88df9ceb22456031d216

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3
---- hash rowsort
16 tuples hashing to 20e788da0b60b5e1993a4e655c3315e0

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3 ORDER BY col_2, col_1
---- hash rowsort
16 tuples hashing to 20e788da0b60b5e1993a4e655c3315e0

-STATEMENT MATCH (t1:t1) RETURN t1.a AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.d - t1.e AS col_3, t1.b - t1.c AS col_4, abs(t1.a) AS col_5, t1.a + t1.b * 2 AS col_6, t1.b AS col_7
---- hash rowsort
30 tuples hashing to 3ad2c65f63be30349866521e8a7baaa8

-STATEMENT MATCH (t1:t1) RETURN t1.a AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.d - t1.e AS col_3, t1.b - t1.c AS col_4, abs(t1.a) AS col_5, t1.a + t1.b * 2 AS col_6, t1.b AS col_7 ORDER BY col_4, col_2, col_3, col_6, col_1, col_5, col_7
---- hash rowsort
30 tuples hashing to 3ad2c65f63be30349866521e8a7baaa8

-STATEMENT MATCH (t1:t1) RETURN t1.a - t1.b AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5
---- hash rowsort
30 tuples hashing to f2a5512e772b96231a3fc7bedb283acf

-STATEMENT MATCH (t1:t1) RETURN t1.a - t1.b AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5 ORDER BY col_2, col_1, col_3
---- hash rowsort
30 tuples hashing to f2a5512e772b96231a3fc7bedb283acf

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a - t1.b AS col_1, t1.e AS col_2, t1.c AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4
---- hash rowsort
19 tuples hashing to 74b9ca76cf42eeb436c8f3d99d5026a5

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a - t1.b AS col_1, t1.e AS col_2, t1.c AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4 ORDER BY col_2, col_3
---- hash rowsort
19 tuples hashing to 74b9ca76cf42eeb436c8f3d99d5026a5

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a - t1.b AS col_1, t1.e AS col_2, t1.c AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4
---- hash rowsort
19 tuples hashing to 74b9ca76cf42eeb436c8f3d99d5026a5

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a - t1.b AS col_1, t1.e AS col_2, t1.c AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4 ORDER BY col_4, col_1
---- hash rowsort
19 tuples hashing to 74b9ca76cf42eeb436c8f3d99d5026a5

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a - t1.b AS col_1, t1.e AS col_2, t1.c AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4
---- hash rowsort
19 tuples hashing to 74b9ca76cf42eeb436c8f3d99d5026a5

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a - t1.b AS col_1, t1.e AS col_2, t1.c AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4 ORDER BY col_4, col_3, col_1, col_2
---- hash rowsort
19 tuples hashing to 74b9ca76cf42eeb436c8f3d99d5026a5

-STATEMENT MATCH (t1:t1) RETURN t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.e AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.d - t1.e AS col_5, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_6
---- hash rowsort
30 tuples hashing to 77659f5a8cded981ffc465c38deec76f

-STATEMENT MATCH (t1:t1) RETURN t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.e AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.d - t1.e AS col_5, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_6 ORDER BY col_4, col_6, col_5, col_1, col_2, col_3
---- hash rowsort
30 tuples hashing to 77659f5a8cded981ffc465c38deec76f

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c RETURN abs(t1.b - t1.c) AS col_1, abs(t1.a) AS col_2, t1.d - t1.e AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.a AS col_5
---- hash rowsort
13 tuples hashing to 700b1ea08f8a70f8aca21e66948e013f

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c RETURN abs(t1.b - t1.c) AS col_1, abs(t1.a) AS col_2, t1.d - t1.e AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.a AS col_5 ORDER BY col_4, col_1
---- hash rowsort
13 tuples hashing to 700b1ea08f8a70f8aca21e66948e013f

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, abs(t1.a) AS col_4, t1.a - t1.b AS col_5, t1.d AS col_6, t1.a + t1.b * 2 + t1.c * 3 AS col_7
---- hash rowsort
30 tuples hashing to abe084b1d76cf674445ef239229bbc0a

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, abs(t1.a) AS col_4, t1.a - t1.b AS col_5, t1.d AS col_6, t1.a + t1.b * 2 + t1.c * 3 AS col_7 ORDER BY col_4, col_3, col_5, col_6, col_2, col_7, col_1
---- hash rowsort
30 tuples hashing to abe084b1d76cf674445ef239229bbc0a

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.b - t1.c AS col_1, t1.d - t1.e AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.c - t1.d AS col_5
---- hash rowsort
30 tuples hashing to 5a6c64d4512cfeaa7e90ffd06d9955d0

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.b - t1.c AS col_1, t1.d - t1.e AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.c - t1.d AS col_5 ORDER BY col_2, col_3, col_1, col_5
---- hash rowsort
30 tuples hashing to 5a6c64d4512cfeaa7e90ffd06d9955d0

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1
---- 1
1272

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1 ORDER BY col_1
---- 1
1272

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1
---- 1
1272

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1 ORDER BY col_1
---- 1
1272

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.b - t1.c AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_6
---- hash rowsort
3 tuples hashing to a1099ee03d2f261e66a0c7dfa6457b0d

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.b - t1.c AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_6 ORDER BY col_6, col_2
---- hash rowsort
3 tuples hashing to a1099ee03d2f261e66a0c7dfa6457b0d

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.d > t1.e RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.c AS col_5, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_6
---- hash rowsort
16 tuples hashing to 9e505d055e1630da12139a6616c91e0f

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.d > t1.e RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.c AS col_5, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_6 ORDER BY col_2, col_3
---- hash rowsort
16 tuples hashing to 9e505d055e1630da12139a6616c91e0f

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR t1.d > t1.e OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.c AS col_5, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_6
---- hash rowsort
16 tuples hashing to 9e505d055e1630da12139a6616c91e0f

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR t1.d > t1.e OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.c AS col_5, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_6 ORDER BY col_3, col_4
---- hash rowsort
16 tuples hashing to 9e505d055e1630da12139a6616c91e0f

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.e > t1.a AND t1.e < t1.b) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.c AS col_5, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_6
---- hash rowsort
16 tuples hashing to 9e505d055e1630da12139a6616c91e0f

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.e > t1.a AND t1.e < t1.b) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.c AS col_5, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_6 ORDER BY col_3, col_4, col_1
---- hash rowsort
16 tuples hashing to 9e505d055e1630da12139a6616c91e0f

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.d > t1.e OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.b AS col_1, t1.d AS col_2, t1.b - t1.c AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5
---- hash rowsort
21 tuples hashing to 898b1396ba944fbd4d391be2eb9eceb9

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.d > t1.e OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.b AS col_1, t1.d AS col_2, t1.b - t1.c AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5 ORDER BY col_4, col_1, col_3, col_2, col_5
---- hash rowsort
21 tuples hashing to 898b1396ba944fbd4d391be2eb9eceb9

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.d > t1.e RETURN t1.b AS col_1, t1.d AS col_2, t1.b - t1.c AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5
---- hash rowsort
21 tuples hashing to 898b1396ba944fbd4d391be2eb9eceb9

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.d > t1.e RETURN t1.b AS col_1, t1.d AS col_2, t1.b - t1.c AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5 ORDER BY col_4, col_3
---- hash rowsort
21 tuples hashing to 898b1396ba944fbd4d391be2eb9eceb9

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.b AS col_1, t1.d AS col_2, t1.b - t1.c AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5
---- hash rowsort
21 tuples hashing to 898b1396ba944fbd4d391be2eb9eceb9

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.b AS col_1, t1.d AS col_2, t1.b - t1.c AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5 ORDER BY col_4, col_3, col_1
---- hash rowsort
21 tuples hashing to 898b1396ba944fbd4d391be2eb9eceb9

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR t1.d > t1.e OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.b AS col_1, t1.d AS col_2, t1.b - t1.c AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5
---- hash rowsort
21 tuples hashing to 898b1396ba944fbd4d391be2eb9eceb9

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR t1.d > t1.e OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.b AS col_1, t1.d AS col_2, t1.b - t1.c AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5 ORDER BY col_3, col_4, col_5, col_1
---- hash rowsort
21 tuples hashing to 898b1396ba944fbd4d391be2eb9eceb9

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d RETURN abs(t1.a) AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5
---- hash rowsort
13 tuples hashing to 55e12f994d85d5bb430f97aeb458f0ad

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d RETURN abs(t1.a) AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5 ORDER BY col_3, col_2
---- hash rowsort
13 tuples hashing to 55e12f994d85d5bb430f97aeb458f0ad

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.d > t1.e RETURN t1.d AS col_1, t1.b - t1.c AS col_2, t1.e AS col_3, abs(t1.a) AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5
---- hash rowsort
5 tuples hashing to efe072d229c48fafc64d6801a2353477

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.d > t1.e RETURN t1.d AS col_1, t1.b - t1.c AS col_2, t1.e AS col_3, abs(t1.a) AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5 ORDER BY col_1, col_5
---- hash rowsort
5 tuples hashing to efe072d229c48fafc64d6801a2353477

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.c > t1.d RETURN t1.d AS col_1, t1.b - t1.c AS col_2, t1.e AS col_3, abs(t1.a) AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5
---- hash rowsort
5 tuples hashing to efe072d229c48fafc64d6801a2353477

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.c > t1.d RETURN t1.d AS col_1, t1.b - t1.c AS col_2, t1.e AS col_3, abs(t1.a) AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5 ORDER BY col_4, col_3, col_2, col_5
---- hash rowsort
5 tuples hashing to efe072d229c48fafc64d6801a2353477

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.c > t1.d AND t1.d > t1.e RETURN t1.d AS col_1, t1.b - t1.c AS col_2, t1.e AS col_3, abs(t1.a) AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5
---- hash rowsort
5 tuples hashing to efe072d229c48fafc64d6801a2353477

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.c > t1.d AND t1.d > t1.e RETURN t1.d AS col_1, t1.b - t1.c AS col_2, t1.e AS col_3, abs(t1.a) AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5 ORDER BY col_5, col_3, col_4, col_1
---- hash rowsort
5 tuples hashing to efe072d229c48fafc64d6801a2353477

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR NOT (t1.d >= 110 AND t1.d <= 150) OR t1.d > t1.e RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2
---- hash rowsort
23 tuples hashing to 3cc7fbe290b9c568f60dabcc1daa4652

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR NOT (t1.d >= 110 AND t1.d <= 150) OR t1.d > t1.e RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2 ORDER BY col_2, col_1
---- hash rowsort
23 tuples hashing to 3cc7fbe290b9c568f60dabcc1daa4652

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.d > t1.e OR NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2
---- hash rowsort
23 tuples hashing to 3cc7fbe290b9c568f60dabcc1daa4652

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.d > t1.e OR NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2 ORDER BY col_2, col_1
---- hash rowsort
23 tuples hashing to 3cc7fbe290b9c568f60dabcc1daa4652

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR t1.d > t1.e OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2
---- hash rowsort
23 tuples hashing to 3cc7fbe290b9c568f60dabcc1daa4652

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR t1.d > t1.e OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2 ORDER BY col_1, col_2
---- hash rowsort
23 tuples hashing to 3cc7fbe290b9c568f60dabcc1daa4652

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.d - t1.e AS col_2, t1.a AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.c - t1.d AS col_5, t1.a + t1.b * 2 AS col_6, t1.a + t1.b * 2 + t1.c * 3 AS col_7
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.d - t1.e AS col_2, t1.a AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.c - t1.d AS col_5, t1.a + t1.b * 2 AS col_6, t1.a + t1.b * 2 + t1.c * 3 AS col_7 ORDER BY col_1, col_4, col_3, col_5, col_2, col_7
---- 0


-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.d - t1.e AS col_2, t1.a AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.c - t1.d AS col_5, t1.a + t1.b * 2 AS col_6, t1.a + t1.b * 2 + t1.c * 3 AS col_7
---- 0


-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.d - t1.e AS col_2, t1.a AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.c - t1.d AS col_5, t1.a + t1.b * 2 AS col_6, t1.a + t1.b * 2 + t1.c * 3 AS col_7 ORDER BY col_2, col_1
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.d - t1.e AS col_2, t1.a AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.c - t1.d AS col_5, t1.a + t1.b * 2 AS col_6, t1.a + t1.b * 2 + t1.c * 3 AS col_7
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.d - t1.e AS col_2, t1.a AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.c - t1.d AS col_5, t1.a + t1.b * 2 AS col_6, t1.a + t1.b * 2 + t1.c * 3 AS col_7 ORDER BY col_6, col_3, col_4
---- 0


-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2
---- hash rowsort
17 tuples hashing to 96ff786483c1e8f5196446a2b1d422d9

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2 ORDER BY col_2, col_1
---- hash rowsort
17 tuples hashing to 96ff786483c1e8f5196446a2b1d422d9

-STATEMENT MATCH (t1:t1) RETURN abs(t1.b - t1.c) AS col_1, t1.b - t1.c AS col_2, t1.d AS col_3, t1.d - t1.e AS col_4
---- hash rowsort
30 tuples hashing to 51c6d5875559232e01ec8492a13bf290

-STATEMENT MATCH (t1:t1) RETURN abs(t1.b - t1.c) AS col_1, t1.b - t1.c AS col_2, t1.d AS col_3, t1.d - t1.e AS col_4 ORDER BY col_2, col_1
---- hash rowsort
30 tuples hashing to 51c6d5875559232e01ec8492a13bf290

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.b > t1.c AND t1.d > t1.e AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2
---- 4
127|1290
137|1390
232|468
247|490

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.b > t1.c AND t1.d > t1.e AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2 ORDER BY col_1, col_2
---- 4
127|1290
137|1390
232|468
247|490

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.b > t1.c AND t1.d > t1.e RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2
---- 4
127|1290
137|1390
232|468
247|490

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.b > t1.c AND t1.d > t1.e RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2 ORDER BY col_1, col_2
---- 4
127|1290
137|1390
232|468
247|490

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.d > t1.e AND t1.b > t1.c AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2
---- 4
127|1290
137|1390
232|468
247|490

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.d > t1.e AND t1.b > t1.c AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2 ORDER BY col_1, col_2
---- 4
127|1290
137|1390
232|468
247|490

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.d > t1.e AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.b > t1.c RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2
---- 4
127|1290
137|1390
232|468
247|490

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.d > t1.e AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.b > t1.c RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2 ORDER BY col_2, col_1
---- 4
127|1290
137|1390
232|468
247|490

-STATEMENT MATCH (t1:t1) RETURN t1.a - t1.b AS col_1
---- hash rowsort
30 tuples hashing to a8508bcdf86e494dd5feccb5ca8d9768

-STATEMENT MATCH (t1:t1) RETURN t1.a - t1.b AS col_1 ORDER BY col_1
---- hash rowsort
30 tuples hashing to a8508bcdf86e494dd5feccb5ca8d9768

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.c > t1.d OR t1.d > t1.e RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.e AS col_2
---- hash rowsort
19 tuples hashing to 2a2598769a3b3b10efdd6fbbbcdb5d91

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.c > t1.d OR t1.d > t1.e RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.e AS col_2 ORDER BY col_1, col_2
---- hash rowsort
19 tuples hashing to 2a2598769a3b3b10efdd6fbbbcdb5d91

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.d > t1.e OR t1.c > t1.d RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.e AS col_2
---- hash rowsort
19 tuples hashing to 2a2598769a3b3b10efdd6fbbbcdb5d91

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.d > t1.e OR t1.c > t1.d RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.e AS col_2 ORDER BY col_2, col_1
---- hash rowsort
19 tuples hashing to 2a2598769a3b3b10efdd6fbbbcdb5d91

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.e > t1.c OR t1.e < t1.d) OR (t1.e > t1.a AND t1.e < t1.b) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2
---- hash rowsort
23 tuples hashing to 9d04deef1dfca681b44e162ce4541cae

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.e > t1.c OR t1.e < t1.d) OR (t1.e > t1.a AND t1.e < t1.b) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2 ORDER BY col_1, col_2
---- hash rowsort
23 tuples hashing to 9d04deef1dfca681b44e162ce4541cae

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR (t1.e > t1.c OR t1.e < t1.d) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2
---- hash rowsort
23 tuples hashing to 9d04deef1dfca681b44e162ce4541cae

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR (t1.e > t1.c OR t1.e < t1.d) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2 ORDER BY col_1, col_2
---- hash rowsort
23 tuples hashing to 9d04deef1dfca681b44e162ce4541cae

-STATEMENT MATCH (t1:t1) RETURN abs(t1.a) AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2
---- hash rowsort
30 tuples hashing to 062c0e56752ce88d0167d9e0fd0770d7

-STATEMENT MATCH (t1:t1) RETURN abs(t1.a) AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2 ORDER BY col_2, col_1
---- hash rowsort
30 tuples hashing to 062c0e56752ce88d0167d9e0fd0770d7

-STATEMENT MATCH (t1:t1) RETURN t1.a - t1.b AS col_1
---- hash rowsort
30 tuples hashing to a8508bcdf86e494dd5feccb5ca8d9768

-STATEMENT MATCH (t1:t1) RETURN t1.a - t1.b AS col_1 ORDER BY col_1
---- hash rowsort
30 tuples hashing to a8508bcdf86e494dd5feccb5ca8d9768

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.b AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.a - t1.b AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, t1.c - t1.d AS col_6, abs(t1.b - t1.c) AS col_7
---- hash rowsort
13 tuples hashing to 4cede8da66ea2861ef9c48cc1208662f

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.b AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.a - t1.b AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, t1.c - t1.d AS col_6, abs(t1.b - t1.c) AS col_7 ORDER BY col_7, col_1, col_5
---- hash rowsort
13 tuples hashing to 4cede8da66ea2861ef9c48cc1208662f

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e > t1.c OR t1.e < t1.d) RETURN t1.b AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.a - t1.b AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, t1.c - t1.d AS col_6, abs(t1.b - t1.c) AS col_7
---- hash rowsort
13 tuples hashing to 4cede8da66ea2861ef9c48cc1208662f

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e > t1.c OR t1.e < t1.d) RETURN t1.b AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.a - t1.b AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, t1.c - t1.d AS col_6, abs(t1.b - t1.c) AS col_7 ORDER BY col_3, col_4, col_2, col_7, col_1, col_6
---- hash rowsort
13 tuples hashing to 4cede8da66ea2861ef9c48cc1208662f

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c RETURN t1.d - t1.e AS col_1
---- hash rowsort
13 tuples hashing to 37b4d73e441261c2486e2c599c1c89f1

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c RETURN t1.d - t1.e AS col_1 ORDER BY col_1
---- hash rowsort
13 tuples hashing to 37b4d73e441261c2486e2c599c1c89f1

-STATEMENT MATCH (t1:t1) RETURN abs(t1.a) AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.d - t1.e AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, t1.a - t1.b AS col_5
---- hash rowsort
30 tuples hashing to 578a866d06ec2584773e3a7cd8378039

-STATEMENT MATCH (t1:t1) RETURN abs(t1.a) AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.d - t1.e AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, t1.a - t1.b AS col_5 ORDER BY col_1, col_3, col_2, col_4
---- hash rowsort
30 tuples hashing to 578a866d06ec2584773e3a7cd8378039

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.c - t1.d AS col_1, t1.d AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, abs(t1.a) AS col_4, t1.d - t1.e AS col_5, t1.b AS col_6, t1.e AS col_7
---- hash rowsort
3 tuples hashing to 3534198846c175bfee0fb8ea8a34b086

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.c - t1.d AS col_1, t1.d AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, abs(t1.a) AS col_4, t1.d - t1.e AS col_5, t1.b AS col_6, t1.e AS col_7 ORDER BY col_1, col_6, col_3
---- hash rowsort
3 tuples hashing to 3534198846c175bfee0fb8ea8a34b086

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.e > t1.c OR t1.e < t1.d) RETURN t1.c - t1.d AS col_1, t1.d AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, abs(t1.a) AS col_4, t1.d - t1.e AS col_5, t1.b AS col_6, t1.e AS col_7
---- hash rowsort
3 tuples hashing to 3534198846c175bfee0fb8ea8a34b086

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.e > t1.c OR t1.e < t1.d) RETURN t1.c - t1.d AS col_1, t1.d AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, abs(t1.a) AS col_4, t1.d - t1.e AS col_5, t1.b AS col_6, t1.e AS col_7 ORDER BY col_2, col_6, col_3, col_1
---- hash rowsort
3 tuples hashing to 3534198846c175bfee0fb8ea8a34b086

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.c - t1.d AS col_1, t1.d AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, abs(t1.a) AS col_4, t1.d - t1.e AS col_5, t1.b AS col_6, t1.e AS col_7
---- hash rowsort
3 tuples hashing to 3534198846c175bfee0fb8ea8a34b086

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.c - t1.d AS col_1, t1.d AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, abs(t1.a) AS col_4, t1.d - t1.e AS col_5, t1.b AS col_6, t1.e AS col_7 ORDER BY col_7, col_6, col_4, col_1
---- hash rowsort
3 tuples hashing to 3534198846c175bfee0fb8ea8a34b086

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR t1.d > t1.e RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.c - t1.d AS col_2
---- hash rowsort
19 tuples hashing to 38f3dc6640f3c6f990539ded2f42dd40

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR t1.d > t1.e RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.c - t1.d AS col_2 ORDER BY col_2, col_1
---- hash rowsort
19 tuples hashing to 38f3dc6640f3c6f990539ded2f42dd40

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR t1.c > t1.d RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.c - t1.d AS col_2
---- hash rowsort
19 tuples hashing to 38f3dc6640f3c6f990539ded2f42dd40

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR t1.c > t1.d RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.c - t1.d AS col_2 ORDER BY col_1, col_2
---- hash rowsort
19 tuples hashing to 38f3dc6640f3c6f990539ded2f42dd40

-STATEMENT MATCH (t1:t1) RETURN t1.b - t1.c AS col_1, abs(t1.b - t1.c) AS col_2, t1.a + t1.b * 2 AS col_3
---- hash rowsort
30 tuples hashing to daca262d1b7c5c84e7776454aeae28b6

-STATEMENT MATCH (t1:t1) RETURN t1.b - t1.c AS col_1, abs(t1.b - t1.c) AS col_2, t1.a + t1.b * 2 AS col_3 ORDER BY col_3, col_1
---- hash rowsort
30 tuples hashing to daca262d1b7c5c84e7776454aeae28b6

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.c - t1.d AS col_2
---- 3
0|-1
0|2
0|3

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.c - t1.d AS col_2 ORDER BY col_1, col_2
---- 3
0|-1
0|2
0|3

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.e > t1.a AND t1.e < t1.b) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.c - t1.d AS col_2
---- 3
0|-1
0|2
0|3

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.e > t1.a AND t1.e < t1.b) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.c - t1.d AS col_2 ORDER BY col_1, col_2
---- 3
0|-1
0|2
0|3

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.c AS col_2, t1.b AS col_3
---- hash rowsort
26 tuples hashing to f5793db3d840c263516ce377d0018549

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.c AS col_2, t1.b AS col_3 ORDER BY col_2, col_1, col_3
---- hash rowsort
26 tuples hashing to f5793db3d840c263516ce377d0018549

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR t1.d > t1.e RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.c AS col_2, t1.b AS col_3
---- hash rowsort
26 tuples hashing to f5793db3d840c263516ce377d0018549

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR t1.d > t1.e RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.c AS col_2, t1.b AS col_3 ORDER BY col_2, col_1
---- hash rowsort
26 tuples hashing to f5793db3d840c263516ce377d0018549

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR t1.c > t1.d RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1
---- hash rowsort
14 tuples hashing to f97f357089334d125cef4f36f7735b7d

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR t1.c > t1.d RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1 ORDER BY col_1
---- hash rowsort
14 tuples hashing to f97f357089334d125cef4f36f7735b7d

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR (t1.e > t1.a AND t1.e < t1.b) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1
---- hash rowsort
14 tuples hashing to f97f357089334d125cef4f36f7735b7d

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR (t1.e > t1.a AND t1.e < t1.b) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1 ORDER BY col_1
---- hash rowsort
14 tuples hashing to f97f357089334d125cef4f36f7735b7d

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.d AS col_3, abs(t1.b - t1.c) AS col_4, t1.c - t1.d AS col_5, t1.a + t1.b * 2 AS col_6
---- hash rowsort
28 tuples hashing to 0e9151ef1fc0b9657f5d3f3cc3f6617d

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.d AS col_3, abs(t1.b - t1.c) AS col_4, t1.c - t1.d AS col_5, t1.a + t1.b * 2 AS col_6 ORDER BY col_3, col_4, col_2, col_6, col_5
---- hash rowsort
28 tuples hashing to 0e9151ef1fc0b9657f5d3f3cc3f6617d

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.c > t1.d AND (t1.e > t1.a AND t1.e < t1.b) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.c - t1.d AS col_2, t1.a + t1.b * 2 AS col_3, t1.d AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5, t1.c AS col_6, t1.a - t1.b AS col_7
---- hash rowsort
2 tuples hashing to 8b5e382e90ee04d96e67c5207bff60a3

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.c > t1.d AND (t1.e > t1.a AND t1.e < t1.b) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.c - t1.d AS col_2, t1.a + t1.b * 2 AS col_3, t1.d AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5, t1.c AS col_6, t1.a - t1.b AS col_7 ORDER BY col_2, col_3, col_7, col_5, col_6, col_4
---- hash rowsort
2 tuples hashing to 8b5e382e90ee04d96e67c5207bff60a3

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.e > t1.a AND t1.e < t1.b) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.c - t1.d AS col_2, t1.a + t1.b * 2 AS col_3, t1.d AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5, t1.c AS col_6, t1.a - t1.b AS col_7
---- hash rowsort
2 tuples hashing to 8b5e382e90ee04d96e67c5207bff60a3

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.e > t1.a AND t1.e < t1.b) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.c - t1.d AS col_2, t1.a + t1.b * 2 AS col_3, t1.d AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5, t1.c AS col_6, t1.a - t1.b AS col_7 ORDER BY col_5, col_2
---- hash rowsort
2 tuples hashing to 8b5e382e90ee04d96e67c5207bff60a3

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.e > t1.a AND t1.e < t1.b) AND t1.c > t1.d RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.c - t1.d AS col_2, t1.a + t1.b * 2 AS col_3, t1.d AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5, t1.c AS col_6, t1.a - t1.b AS col_7
---- hash rowsort
2 tuples hashing to 8b5e382e90ee04d96e67c5207bff60a3

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.e > t1.a AND t1.e < t1.b) AND t1.c > t1.d RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.c - t1.d AS col_2, t1.a + t1.b * 2 AS col_3, t1.d AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5, t1.c AS col_6, t1.a - t1.b AS col_7 ORDER BY col_4, col_5, col_1
---- hash rowsort
2 tuples hashing to 8b5e382e90ee04d96e67c5207bff60a3

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.c AS col_3, t1.d - t1.e AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, t1.b AS col_6, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_7
---- hash rowsort
30 tuples hashing to 50639da083e0dfcdd5c8e83a956b4426

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.c AS col_3, t1.d - t1.e AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, t1.b AS col_6, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_7 ORDER BY col_4, col_5
---- hash rowsort
30 tuples hashing to 50639da083e0dfcdd5c8e83a956b4426

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND t1.d > t1.e RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, t1.c - t1.d AS col_5
---- hash rowsort
7 tuples hashing to f68c064171813788a6cf94f0b90aff35

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND t1.d > t1.e RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, t1.c - t1.d AS col_5 ORDER BY col_4, col_5, col_3, col_2
---- hash rowsort
7 tuples hashing to f68c064171813788a6cf94f0b90aff35

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.d > t1.e AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, t1.c - t1.d AS col_5
---- hash rowsort
7 tuples hashing to f68c064171813788a6cf94f0b90aff35

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.d > t1.e AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, t1.c - t1.d AS col_5 ORDER BY col_5, col_2, col_4, col_1
---- hash rowsort
7 tuples hashing to f68c064171813788a6cf94f0b90aff35

-STATEMENT MATCH (t1:t1) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2
---- hash rowsort
30 tuples hashing to 786e944a9c358a8be09160a4fcdb486f

-STATEMENT MATCH (t1:t1) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2 ORDER BY col_1, col_2
---- hash rowsort
30 tuples hashing to 786e944a9c358a8be09160a4fcdb486f

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN abs(t1.a) AS col_1, t1.c AS col_2
---- hash rowsort
10 tuples hashing to 98d73ad45f8f620db8c8c9b4aeb68ec6

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN abs(t1.a) AS col_1, t1.c AS col_2 ORDER BY col_1, col_2
---- hash rowsort
10 tuples hashing to 98d73ad45f8f620db8c8c9b4aeb68ec6

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN abs(t1.a) AS col_1, t1.c AS col_2
---- hash rowsort
10 tuples hashing to 98d73ad45f8f620db8c8c9b4aeb68ec6

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN abs(t1.a) AS col_1, t1.c AS col_2 ORDER BY col_1, col_2
---- hash rowsort
10 tuples hashing to 98d73ad45f8f620db8c8c9b4aeb68ec6

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.e AS col_1, t1.a AS col_2, t1.a - t1.b AS col_3
---- 2
109|107|2
126|127|-2

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.e AS col_1, t1.a AS col_2, t1.a - t1.b AS col_3 ORDER BY col_3, col_2, col_1
---- 2
109|107|2
126|127|-2

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a - t1.b AS col_1, t1.a + t1.b * 2 AS col_2
---- 2
-3|666
-4|743

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a - t1.b AS col_1, t1.a + t1.b * 2 AS col_2 ORDER BY col_2, col_1
---- 2
-3|666
-4|743

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a - t1.b AS col_1, t1.a + t1.b * 2 AS col_2
---- 2
-3|666
-4|743

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a - t1.b AS col_1, t1.a + t1.b * 2 AS col_2 ORDER BY col_2, col_1
---- 2
-3|666
-4|743

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1
---- hash rowsort
30 tuples hashing to efdbaa4d180e7867bec1c4d897bd25b9

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1 ORDER BY col_1
---- hash rowsort
30 tuples hashing to efdbaa4d180e7867bec1c4d897bd25b9

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a + t1.b * 2 AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_6
---- hash rowsort
30 tuples hashing to 42336e6173780b5bf485e01d7ad7e2d6

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a + t1.b * 2 AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_6 ORDER BY col_2, col_1, col_4
---- hash rowsort
30 tuples hashing to 42336e6173780b5bf485e01d7ad7e2d6

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.e AS col_1
---- hash rowsort
26 tuples hashing to cfc94af2318f3af5d1c269b640dee05c

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.e AS col_1 ORDER BY col_1
---- hash rowsort
26 tuples hashing to cfc94af2318f3af5d1c269b640dee05c

-STATEMENT MATCH (t1:t1) RETURN t1.d - t1.e AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.a AS col_4
---- hash rowsort
30 tuples hashing to fe89e0694e565ddde146aae161a10d93

-STATEMENT MATCH (t1:t1) RETURN t1.d - t1.e AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.a AS col_4 ORDER BY col_2, col_1, col_3
---- hash rowsort
30 tuples hashing to fe89e0694e565ddde146aae161a10d93

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.c AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4
---- hash rowsort
13 tuples hashing to 6779ef1c86798a0a3109a0c1b0c8180a

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.c AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4 ORDER BY col_1, col_4, col_2, col_3
---- hash rowsort
13 tuples hashing to 6779ef1c86798a0a3109a0c1b0c8180a

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.e > t1.a AND t1.e < t1.b) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.c AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4
---- hash rowsort
13 tuples hashing to 6779ef1c86798a0a3109a0c1b0c8180a

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.e > t1.a AND t1.e < t1.b) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.c AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4 ORDER BY col_3, col_4
---- hash rowsort
13 tuples hashing to 6779ef1c86798a0a3109a0c1b0c8180a

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.e > t1.a AND t1.e < t1.b) RETURN t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.c AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4
---- hash rowsort
13 tuples hashing to 6779ef1c86798a0a3109a0c1b0c8180a

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.e > t1.a AND t1.e < t1.b) RETURN t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.c AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4 ORDER BY col_4, col_2, col_3
---- hash rowsort
13 tuples hashing to 6779ef1c86798a0a3109a0c1b0c8180a

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.c AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4
---- hash rowsort
13 tuples hashing to 6779ef1c86798a0a3109a0c1b0c8180a

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.c AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4 ORDER BY col_1, col_4, col_2, col_3
---- hash rowsort
13 tuples hashing to 6779ef1c86798a0a3109a0c1b0c8180a

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.e > t1.c OR t1.e < t1.d) OR t1.c > t1.d RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.c - t1.d AS col_2, t1.d AS col_3
---- hash rowsort
27 tuples hashing to c79f665e7971df459923fc66824c7e23

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.e > t1.c OR t1.e < t1.d) OR t1.c > t1.d RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.c - t1.d AS col_2, t1.d AS col_3 ORDER BY col_1, col_2
---- hash rowsort
27 tuples hashing to c79f665e7971df459923fc66824c7e23

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.c > t1.d OR (t1.e > t1.c OR t1.e < t1.d) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.c - t1.d AS col_2, t1.d AS col_3
---- hash rowsort
27 tuples hashing to c79f665e7971df459923fc66824c7e23

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.c > t1.d OR (t1.e > t1.c OR t1.e < t1.d) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.c - t1.d AS col_2, t1.d AS col_3 ORDER BY col_1, col_2
---- hash rowsort
27 tuples hashing to c79f665e7971df459923fc66824c7e23

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR (t1.e > t1.c OR t1.e < t1.d) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.c - t1.d AS col_2, t1.d AS col_3
---- hash rowsort
27 tuples hashing to c79f665e7971df459923fc66824c7e23

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR (t1.e > t1.c OR t1.e < t1.d) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.c - t1.d AS col_2, t1.d AS col_3 ORDER BY col_3, col_2, col_1
---- hash rowsort
27 tuples hashing to c79f665e7971df459923fc66824c7e23

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR t1.c > t1.d OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.c - t1.d AS col_2, t1.d AS col_3
---- hash rowsort
27 tuples hashing to c79f665e7971df459923fc66824c7e23

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR t1.c > t1.d OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.c - t1.d AS col_2, t1.d AS col_3 ORDER BY col_2, col_1
---- hash rowsort
27 tuples hashing to c79f665e7971df459923fc66824c7e23

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.d - t1.e AS col_3
---- hash rowsort
11 tuples hashing to 842ca7ca664eef175a333bdc30730d09

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.d - t1.e AS col_3 ORDER BY col_2, col_1
---- hash rowsort
11 tuples hashing to 842ca7ca664eef175a333bdc30730d09

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a AS col_1, abs(t1.b - t1.c) AS col_2, t1.c AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5
---- hash rowsort
7 tuples hashing to 94dcb6f7f5a353dfa833f9d433031a2b

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a AS col_1, abs(t1.b - t1.c) AS col_2, t1.c AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5 ORDER BY col_4, col_3
---- hash rowsort
7 tuples hashing to 94dcb6f7f5a353dfa833f9d433031a2b

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a AS col_1, abs(t1.b - t1.c) AS col_2, t1.c AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5
---- hash rowsort
7 tuples hashing to 94dcb6f7f5a353dfa833f9d433031a2b

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a AS col_1, abs(t1.b - t1.c) AS col_2, t1.c AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5 ORDER BY col_1, col_4, col_5
---- hash rowsort
7 tuples hashing to 94dcb6f7f5a353dfa833f9d433031a2b

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.b AS col_3, t1.a AS col_4, t1.a + t1.b * 2 AS col_5
---- hash rowsort
2 tuples hashing to 5e8123b381f22a7420674f7b7ec697f9

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.b AS col_3, t1.a AS col_4, t1.a + t1.b * 2 AS col_5 ORDER BY col_1, col_3, col_4, col_5, col_2
---- hash rowsort
2 tuples hashing to 5e8123b381f22a7420674f7b7ec697f9

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2
---- hash rowsort
13 tuples hashing to 7fd49e95ee3c9c5ebd63030470d8b287

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2 ORDER BY col_1, col_2
---- hash rowsort
13 tuples hashing to 7fd49e95ee3c9c5ebd63030470d8b287

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a - t1.b AS col_1, t1.b - t1.c AS col_2, t1.d AS col_3, abs(t1.b - t1.c) AS col_4, t1.e AS col_5
---- hash rowsort
3 tuples hashing to e39b01b20ef9540b9be9916e3b31112a

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a - t1.b AS col_1, t1.b - t1.c AS col_2, t1.d AS col_3, abs(t1.b - t1.c) AS col_4, t1.e AS col_5 ORDER BY col_5, col_1
---- hash rowsort
3 tuples hashing to e39b01b20ef9540b9be9916e3b31112a

-STATEMENT MATCH (t1:t1) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.a - t1.b AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3
---- hash rowsort
30 tuples hashing to 79a58ab06f4154a5fd7bd890a842407d

-STATEMENT MATCH (t1:t1) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.a - t1.b AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3 ORDER BY col_1, col_3, col_2
---- hash rowsort
30 tuples hashing to 79a58ab06f4154a5fd7bd890a842407d

-STATEMENT MATCH (t1:t1) RETURN t1.d AS col_1, t1.b - t1.c AS col_2, abs(t1.a) AS col_3, t1.c - t1.d AS col_4, t1.e AS col_5, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_6, t1.c AS col_7
---- hash rowsort
30 tuples hashing to 62f70022f80e2aa8043d7b5a66b9ef24

-STATEMENT MATCH (t1:t1) RETURN t1.d AS col_1, t1.b - t1.c AS col_2, abs(t1.a) AS col_3, t1.c - t1.d AS col_4, t1.e AS col_5, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_6, t1.c AS col_7 ORDER BY col_2, col_7, col_5, col_1, col_4
---- hash rowsort
30 tuples hashing to 62f70022f80e2aa8043d7b5a66b9ef24

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e RETURN t1.b - t1.c AS col_1, t1.c - t1.d AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, abs(t1.b - t1.c) AS col_5, t1.b AS col_6, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_7
---- hash rowsort
11 tuples hashing to 43cba760bf35fce24ea8939d5b17b80e

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e RETURN t1.b - t1.c AS col_1, t1.c - t1.d AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, abs(t1.b - t1.c) AS col_5, t1.b AS col_6, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_7 ORDER BY col_2, col_7, col_4, col_3, col_6
---- hash rowsort
11 tuples hashing to 43cba760bf35fce24ea8939d5b17b80e

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.c > t1.d RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1
---- 4
222
222
333
333

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.c > t1.d RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1 ORDER BY col_1
---- 4
222
222
333
333

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.c > t1.d RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1
---- 4
222
222
333
333

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.c > t1.d RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1 ORDER BY col_1
---- 4
222
222
333
333

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.c > t1.d AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1
---- 4
222
222
333
333

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.c > t1.d AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1 ORDER BY col_1
---- 4
222
222
333
333

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1
---- 4
222
222
333
333

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1 ORDER BY col_1
---- 4
222
222
333
333

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN abs(t1.b - t1.c) AS col_1, t1.c AS col_2, t1.e AS col_3, t1.c - t1.d AS col_4
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN abs(t1.b - t1.c) AS col_1, t1.c AS col_2, t1.e AS col_3, t1.c - t1.d AS col_4 ORDER BY col_3, col_4, col_1, col_2
---- 0


-STATEMENT MATCH (t1:t1) RETURN t1.b - t1.c AS col_1, t1.a - t1.b AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, abs(t1.b - t1.c) AS col_4
---- hash rowsort
30 tuples hashing to 24ab9384165a923dfb2a68fff58af0ad

-STATEMENT MATCH (t1:t1) RETURN t1.b - t1.c AS col_1, t1.a - t1.b AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, abs(t1.b - t1.c) AS col_4 ORDER BY col_2, col_4, col_1, col_3
---- hash rowsort
30 tuples hashing to 24ab9384165a923dfb2a68fff58af0ad

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN abs(t1.b - t1.c) AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.a - t1.b AS col_4
---- 2
2|111|827|-1
2|111|851|-1

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN abs(t1.b - t1.c) AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.a - t1.b AS col_4 ORDER BY col_3, col_2
---- 2
2|111|827|-1
2|111|851|-1

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.b > t1.c RETURN abs(t1.b - t1.c) AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.a - t1.b AS col_4
---- 2
2|111|827|-1
2|111|851|-1

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.b > t1.c RETURN abs(t1.b - t1.c) AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.a - t1.b AS col_4 ORDER BY col_1, col_3
---- 2
2|111|827|-1
2|111|851|-1

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.b > t1.c RETURN abs(t1.b - t1.c) AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.a - t1.b AS col_4
---- 2
2|111|827|-1
2|111|851|-1

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.b > t1.c RETURN abs(t1.b - t1.c) AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.a - t1.b AS col_4 ORDER BY col_2, col_4, col_1, col_3
---- 2
2|111|827|-1
2|111|851|-1

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.d - t1.e AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, abs(t1.a) AS col_5
---- hash rowsort
15 tuples hashing to 264015368b7e2d3ef40b19554f289c91

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.d - t1.e AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, abs(t1.a) AS col_5 ORDER BY col_4, col_3, col_5, col_1, col_2
---- hash rowsort
15 tuples hashing to 264015368b7e2d3ef40b19554f289c91

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.d - t1.e AS col_1
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.d - t1.e AS col_1 ORDER BY col_1
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.d - t1.e AS col_1
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.d - t1.e AS col_1 ORDER BY col_1
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a AS col_1, abs(t1.b - t1.c) AS col_2, t1.c AS col_3
---- 2
107|1|106
127|4|125

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a AS col_1, abs(t1.b - t1.c) AS col_2, t1.c AS col_3 ORDER BY col_2, col_3, col_1
---- 2
107|1|106
127|4|125

-STATEMENT MATCH (t1:t1) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1
---- hash rowsort
30 tuples hashing to 9589cc1f14474dd0aa42c579d2bfedb1

-STATEMENT MATCH (t1:t1) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1 ORDER BY col_1
---- hash rowsort
30 tuples hashing to 9589cc1f14474dd0aa42c579d2bfedb1

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR (t1.e > t1.a AND t1.e < t1.b) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.d - t1.e AS col_2
---- hash rowsort
22 tuples hashing to 1cd54d7fbd0a6f17f2992fab04d0df36

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR (t1.e > t1.a AND t1.e < t1.b) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.d - t1.e AS col_2 ORDER BY col_2, col_1
---- hash rowsort
22 tuples hashing to 1cd54d7fbd0a6f17f2992fab04d0df36

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2
---- hash rowsort
15 tuples hashing to 5951da2724242112ec0cd6e310f71fda

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2 ORDER BY col_1, col_2
---- hash rowsort
15 tuples hashing to 5951da2724242112ec0cd6e310f71fda

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1
---- hash rowsort
30 tuples hashing to fd6d6825820cf653aceb2d72af4a5983

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1 ORDER BY col_1
---- hash rowsort
30 tuples hashing to fd6d6825820cf653aceb2d72af4a5983

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR NOT (t1.d >= 110 AND t1.d <= 150) OR t1.a > t1.b RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.d AS col_2, t1.d - t1.e AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5
---- hash rowsort
28 tuples hashing to 4e028439887eb00b53e88ff660e4f6df

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR NOT (t1.d >= 110 AND t1.d <= 150) OR t1.a > t1.b RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.d AS col_2, t1.d - t1.e AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5 ORDER BY col_3, col_5, col_2
---- hash rowsort
28 tuples hashing to 4e028439887eb00b53e88ff660e4f6df

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR NOT (t1.d >= 110 AND t1.d <= 150) OR t1.c > t1.d RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.d AS col_2, t1.d - t1.e AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5
---- hash rowsort
28 tuples hashing to 4e028439887eb00b53e88ff660e4f6df

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR NOT (t1.d >= 110 AND t1.d <= 150) OR t1.c > t1.d RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.d AS col_2, t1.d - t1.e AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5 ORDER BY col_4, col_3, col_2, col_5, col_1
---- hash rowsort
28 tuples hashing to 4e028439887eb00b53e88ff660e4f6df

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR t1.c > t1.d OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.d AS col_2, t1.d - t1.e AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5
---- hash rowsort
28 tuples hashing to 4e028439887eb00b53e88ff660e4f6df

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR t1.c > t1.d OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.d AS col_2, t1.d - t1.e AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5 ORDER BY col_5, col_1
---- hash rowsort
28 tuples hashing to 4e028439887eb00b53e88ff660e4f6df

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR t1.a > t1.b OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.d AS col_2, t1.d - t1.e AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5
---- hash rowsort
28 tuples hashing to 4e028439887eb00b53e88ff660e4f6df

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR t1.a > t1.b OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.d AS col_2, t1.d - t1.e AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5 ORDER BY col_3, col_1, col_2, col_5
---- hash rowsort
28 tuples hashing to 4e028439887eb00b53e88ff660e4f6df

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d RETURN t1.b AS col_1, t1.b - t1.c AS col_2, t1.a - t1.b AS col_3, t1.e AS col_4, t1.c - t1.d AS col_5, t1.a + t1.b * 2 AS col_6, abs(t1.b - t1.c) AS col_7
---- hash rowsort
13 tuples hashing to 61af2b3e6246e6c0b52d25fa685fba31

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d RETURN t1.b AS col_1, t1.b - t1.c AS col_2, t1.a - t1.b AS col_3, t1.e AS col_4, t1.c - t1.d AS col_5, t1.a + t1.b * 2 AS col_6, abs(t1.b - t1.c) AS col_7 ORDER BY col_3, col_1, col_2, col_7, col_5, col_6
---- hash rowsort
13 tuples hashing to 61af2b3e6246e6c0b52d25fa685fba31

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.b - t1.c AS col_1, t1.b AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.b - t1.c AS col_1, t1.b AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3 ORDER BY col_2, col_3
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND t1.a > t1.b AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.b - t1.c AS col_1, t1.b AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND t1.a > t1.b AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.b - t1.c AS col_1, t1.b AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3 ORDER BY col_3, col_1
---- 0


-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.e > t1.a AND t1.e < t1.b) AND t1.a > t1.b RETURN t1.b - t1.c AS col_1, t1.b AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3
---- 0


-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.e > t1.a AND t1.e < t1.b) AND t1.a > t1.b RETURN t1.b - t1.c AS col_1, t1.b AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3 ORDER BY col_1, col_3, col_2
---- 0


-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND t1.a > t1.b AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.b - t1.c AS col_1, t1.b AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3
---- 0


-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND t1.a > t1.b AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.b - t1.c AS col_1, t1.b AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3 ORDER BY col_2, col_3
---- 0


-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a - t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a + t1.b * 2 AS col_3, t1.b AS col_4, t1.a AS col_5
---- hash rowsort
26 tuples hashing to 2588c8de78321484611a50f063942e51

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a - t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a + t1.b * 2 AS col_3, t1.b AS col_4, t1.a AS col_5 ORDER BY col_1, col_4, col_2, col_3
---- hash rowsort
26 tuples hashing to 2588c8de78321484611a50f063942e51

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) RETURN t1.c AS col_1, abs(t1.b - t1.c) AS col_2, t1.b AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.b - t1.c AS col_5
---- hash rowsort
21 tuples hashing to 12d7571bf63f56fd60fc953c549c4576

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) RETURN t1.c AS col_1, abs(t1.b - t1.c) AS col_2, t1.b AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.b - t1.c AS col_5 ORDER BY col_1, col_5
---- hash rowsort
21 tuples hashing to 12d7571bf63f56fd60fc953c549c4576

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.e > t1.a AND t1.e < t1.b) AND t1.c > t1.d RETURN t1.a + t1.b * 2 AS col_1, abs(t1.b - t1.c) AS col_2
---- 2
579|1
666|1

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.e > t1.a AND t1.e < t1.b) AND t1.c > t1.d RETURN t1.a + t1.b * 2 AS col_1, abs(t1.b - t1.c) AS col_2 ORDER BY col_2, col_1
---- 2
579|1
666|1

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.e > t1.a AND t1.e < t1.b) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 AS col_1, abs(t1.b - t1.c) AS col_2
---- 2
579|1
666|1

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.e > t1.a AND t1.e < t1.b) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 AS col_1, abs(t1.b - t1.c) AS col_2 ORDER BY col_2, col_1
---- 2
579|1
666|1

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a + t1.b * 2 AS col_1, abs(t1.b - t1.c) AS col_2
---- 2
579|1
666|1

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a + t1.b * 2 AS col_1, abs(t1.b - t1.c) AS col_2 ORDER BY col_2, col_1
---- 2
579|1
666|1

-STATEMENT MATCH (t1:t1) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1
---- hash rowsort
30 tuples hashing to 74b4b1d1e049d57b3610b70a67a1c32f

-STATEMENT MATCH (t1:t1) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1 ORDER BY col_1
---- hash rowsort
30 tuples hashing to 74b4b1d1e049d57b3610b70a67a1c32f

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a - t1.b AS col_2, t1.a AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, t1.c - t1.d AS col_6, t1.b - t1.c AS col_7
---- hash rowsort
6 tuples hashing to 9fc3445db9f74014fa1b0ad2c6bef7a0

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a - t1.b AS col_2, t1.a AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, t1.c - t1.d AS col_6, t1.b - t1.c AS col_7 ORDER BY col_6, col_7, col_1, col_3
---- hash rowsort
6 tuples hashing to 9fc3445db9f74014fa1b0ad2c6bef7a0

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1
---- hash rowsort
30 tuples hashing to 445b0172de37f3ca0ed777000309cef8

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1 ORDER BY col_1
---- hash rowsort
30 tuples hashing to 445b0172de37f3ca0ed777000309cef8

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.c > t1.d OR t1.d > t1.e RETURN t1.a + t1.b * 2 AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2
---- hash rowsort
20 tuples hashing to a4eb0104d41af22e42996fc476790ecb

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.c > t1.d OR t1.d > t1.e RETURN t1.a + t1.b * 2 AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2 ORDER BY col_1, col_2
---- hash rowsort
20 tuples hashing to a4eb0104d41af22e42996fc476790ecb

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.c > t1.d RETURN t1.a + t1.b * 2 AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2
---- hash rowsort
20 tuples hashing to a4eb0104d41af22e42996fc476790ecb

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.c > t1.d RETURN t1.a + t1.b * 2 AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2 ORDER BY col_2, col_1
---- hash rowsort
20 tuples hashing to a4eb0104d41af22e42996fc476790ecb

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR t1.d > t1.e OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2
---- hash rowsort
20 tuples hashing to a4eb0104d41af22e42996fc476790ecb

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR t1.d > t1.e OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2 ORDER BY col_1, col_2
---- hash rowsort
20 tuples hashing to a4eb0104d41af22e42996fc476790ecb

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.a AS col_2, t1.d - t1.e AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4
---- 2
222|127|2|1902
333|107|-1|1612

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.a AS col_2, t1.d - t1.e AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4 ORDER BY col_1, col_3
---- 2
222|127|2|1902
333|107|-1|1612

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.c - t1.d AS col_3
---- hash rowsort
4 tuples hashing to 1035deb2c40a4b7e0f266141df5c98a3

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.c - t1.d AS col_3 ORDER BY col_3, col_1, col_2
---- hash rowsort
4 tuples hashing to 1035deb2c40a4b7e0f266141df5c98a3

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.c > t1.d RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.c - t1.d AS col_3
---- hash rowsort
4 tuples hashing to 1035deb2c40a4b7e0f266141df5c98a3

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.c > t1.d RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.c - t1.d AS col_3 ORDER BY col_3, col_1
---- hash rowsort
4 tuples hashing to 1035deb2c40a4b7e0f266141df5c98a3

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.a > t1.b AND t1.c > t1.d AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4
---- 2
186|2806|0|376
211|3175|0|426

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.a > t1.b AND t1.c > t1.d AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4 ORDER BY col_3, col_4, col_2
---- 2
186|2806|0|376
211|3175|0|426

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.c > t1.d RETURN t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4
---- 2
186|2806|0|376
211|3175|0|426

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.c > t1.d RETURN t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4 ORDER BY col_2, col_4, col_3
---- 2
186|2806|0|376
211|3175|0|426

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.a > t1.b AND t1.c > t1.d RETURN t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4
---- 2
186|2806|0|376
211|3175|0|426

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.a > t1.b AND t1.c > t1.d RETURN t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4 ORDER BY col_4, col_2, col_1, col_3
---- 2
186|2806|0|376
211|3175|0|426

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.c > t1.d AND t1.a > t1.b AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4
---- 2
186|2806|0|376
211|3175|0|426

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.c > t1.d AND t1.a > t1.b AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4 ORDER BY col_1, col_4, col_3, col_2
---- 2
186|2806|0|376
211|3175|0|426

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a - t1.b AS col_1, t1.c AS col_2, t1.a + t1.b * 2 AS col_3
---- hash rowsort
9 tuples hashing to 70241e09ff2d5961d8dcfc8d2b3bfe57

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a - t1.b AS col_1, t1.c AS col_2, t1.a + t1.b * 2 AS col_3 ORDER BY col_1, col_3, col_2
---- hash rowsort
9 tuples hashing to 70241e09ff2d5961d8dcfc8d2b3bfe57

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.b > t1.c RETURN t1.a - t1.b AS col_1, t1.c AS col_2, t1.a + t1.b * 2 AS col_3
---- hash rowsort
9 tuples hashing to 70241e09ff2d5961d8dcfc8d2b3bfe57

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.b > t1.c RETURN t1.a - t1.b AS col_1, t1.c AS col_2, t1.a + t1.b * 2 AS col_3 ORDER BY col_3, col_2
---- hash rowsort
9 tuples hashing to 70241e09ff2d5961d8dcfc8d2b3bfe57

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.c - t1.d AS col_5, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_6
---- hash rowsort
15 tuples hashing to 711c5520c1c6aed361fe5801ea593a6b

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.c - t1.d AS col_5, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_6 ORDER BY col_5, col_3
---- hash rowsort
15 tuples hashing to 711c5520c1c6aed361fe5801ea593a6b

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, abs(t1.b - t1.c) AS col_3, abs(t1.a) AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5
---- hash rowsort
30 tuples hashing to ccd08e2cecb428df2a757b68bf4a0866

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, abs(t1.b - t1.c) AS col_3, abs(t1.a) AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5 ORDER BY col_2, col_5, col_1, col_3, col_4
---- hash rowsort
30 tuples hashing to ccd08e2cecb428df2a757b68bf4a0866

-STATEMENT MATCH (t1:t1) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.e AS col_2, t1.c AS col_3
---- hash rowsort
30 tuples hashing to 9efd3afc3390d993ad116337cbd5ab05

-STATEMENT MATCH (t1:t1) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.e AS col_2, t1.c AS col_3 ORDER BY col_2, col_3
---- hash rowsort
30 tuples hashing to 9efd3afc3390d993ad116337cbd5ab05

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.d AS col_1, abs(t1.b - t1.c) AS col_2, t1.b AS col_3, t1.b - t1.c AS col_4
---- hash rowsort
17 tuples hashing to 8050cded0b9f193897a5e53499364ff9

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.d AS col_1, abs(t1.b - t1.c) AS col_2, t1.b AS col_3, t1.b - t1.c AS col_4 ORDER BY col_2, col_4
---- hash rowsort
17 tuples hashing to 8050cded0b9f193897a5e53499364ff9

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.d > t1.e RETURN t1.b AS col_1, t1.a + t1.b * 2 AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.e AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_6
---- hash rowsort
9 tuples hashing to 5708005ac18e323809f647804000a6c1

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.d > t1.e RETURN t1.b AS col_1, t1.a + t1.b * 2 AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.e AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_6 ORDER BY col_5, col_6, col_3, col_1, col_2
---- hash rowsort
9 tuples hashing to 5708005ac18e323809f647804000a6c1

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.b AS col_1, t1.a + t1.b * 2 AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.e AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_6
---- hash rowsort
9 tuples hashing to 5708005ac18e323809f647804000a6c1

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.b AS col_1, t1.a + t1.b * 2 AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.e AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_6 ORDER BY col_3, col_6, col_1, col_2, col_4, col_5
---- hash rowsort
9 tuples hashing to 5708005ac18e323809f647804000a6c1

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.d - t1.e AS col_3, t1.d AS col_4, abs(t1.b - t1.c) AS col_5, t1.a + t1.b * 2 + t1.c * 3 AS col_6, t1.a - t1.b AS col_7
---- 0


-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.d - t1.e AS col_3, t1.d AS col_4, abs(t1.b - t1.c) AS col_5, t1.a + t1.b * 2 + t1.c * 3 AS col_6, t1.a - t1.b AS col_7 ORDER BY col_4, col_2, col_5, col_3, col_7, col_1, col_6
---- 0


-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.d - t1.e AS col_3, t1.d AS col_4, abs(t1.b - t1.c) AS col_5, t1.a + t1.b * 2 + t1.c * 3 AS col_6, t1.a - t1.b AS col_7
---- 0


-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.d - t1.e AS col_3, t1.d AS col_4, abs(t1.b - t1.c) AS col_5, t1.a + t1.b * 2 + t1.c * 3 AS col_6, t1.a - t1.b AS col_7 ORDER BY col_1, col_2, col_7, col_6
---- 0


-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.a > t1.b RETURN abs(t1.a) AS col_1, t1.a + t1.b * 2 AS col_2, t1.a - t1.b AS col_3
---- hash rowsort
6 tuples hashing to 60b7c84682b5d4d47d5bebed31838dbe

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.a > t1.b RETURN abs(t1.a) AS col_1, t1.a + t1.b * 2 AS col_2, t1.a - t1.b AS col_3 ORDER BY col_2, col_1
---- hash rowsort
6 tuples hashing to 60b7c84682b5d4d47d5bebed31838dbe

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.a > t1.b RETURN abs(t1.a) AS col_1, t1.a + t1.b * 2 AS col_2, t1.a - t1.b AS col_3
---- hash rowsort
6 tuples hashing to 60b7c84682b5d4d47d5bebed31838dbe

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.a > t1.b RETURN abs(t1.a) AS col_1, t1.a + t1.b * 2 AS col_2, t1.a - t1.b AS col_3 ORDER BY col_2, col_1
---- hash rowsort
6 tuples hashing to 60b7c84682b5d4d47d5bebed31838dbe

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.a > t1.b AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN abs(t1.a) AS col_1, t1.a + t1.b * 2 AS col_2, t1.a - t1.b AS col_3
---- hash rowsort
6 tuples hashing to 60b7c84682b5d4d47d5bebed31838dbe

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.a > t1.b AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN abs(t1.a) AS col_1, t1.a + t1.b * 2 AS col_2, t1.a - t1.b AS col_3 ORDER BY col_1, col_2
---- hash rowsort
6 tuples hashing to 60b7c84682b5d4d47d5bebed31838dbe

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.d AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.e AS col_3, t1.a + t1.b * 2 AS col_4
---- hash rowsort
18 tuples hashing to 1d3de673e0723bd762f36310f29d99af

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.d AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.e AS col_3, t1.a + t1.b * 2 AS col_4 ORDER BY col_4, col_1
---- hash rowsort
18 tuples hashing to 1d3de673e0723bd762f36310f29d99af

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR t1.c > t1.d RETURN t1.d AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.e AS col_3, t1.a + t1.b * 2 AS col_4
---- hash rowsort
18 tuples hashing to 1d3de673e0723bd762f36310f29d99af

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR t1.c > t1.d RETURN t1.d AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.e AS col_3, t1.a + t1.b * 2 AS col_4 ORDER BY col_4, col_2, col_3
---- hash rowsort
18 tuples hashing to 1d3de673e0723bd762f36310f29d99af

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.c AS col_4, t1.a AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_6
---- hash rowsort
3 tuples hashing to 94fe2288f1f9c586bb533ea232753edd

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.c AS col_4, t1.a AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_6 ORDER BY col_6, col_4, col_3
---- hash rowsort
3 tuples hashing to 94fe2288f1f9c586bb533ea232753edd

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.e > t1.a AND t1.e < t1.b) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.c AS col_4, t1.a AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_6
---- hash rowsort
3 tuples hashing to 94fe2288f1f9c586bb533ea232753edd

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.e > t1.a AND t1.e < t1.b) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.c AS col_4, t1.a AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_6 ORDER BY col_3, col_2
---- hash rowsort
3 tuples hashing to 94fe2288f1f9c586bb533ea232753edd

-STATEMENT MATCH (t1:t1) RETURN t1.b AS col_1, t1.d - t1.e AS col_2
---- hash rowsort
30 tuples hashing to 9f924d68846b18f44c1dd24867e65aa2

-STATEMENT MATCH (t1:t1) RETURN t1.b AS col_1, t1.d - t1.e AS col_2 ORDER BY col_2, col_1
---- hash rowsort
30 tuples hashing to 9f924d68846b18f44c1dd24867e65aa2

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.c AS col_2, t1.d - t1.e AS col_3
---- hash rowsort
3 tuples hashing to 105a1fed23ff72661f4b6348cd2ce5a8

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.c AS col_2, t1.d - t1.e AS col_3 ORDER BY col_3, col_2, col_1
---- hash rowsort
3 tuples hashing to 105a1fed23ff72661f4b6348cd2ce5a8

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.e > t1.c OR t1.e < t1.d) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.e AS col_2, abs(t1.a) AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, t1.a + t1.b * 2 + t1.c * 3 AS col_6, t1.b - t1.c AS col_7
---- hash rowsort
3 tuples hashing to a8129edd377d312f8163e2f45600237e

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.e > t1.c OR t1.e < t1.d) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.e AS col_2, abs(t1.a) AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, t1.a + t1.b * 2 + t1.c * 3 AS col_6, t1.b - t1.c AS col_7 ORDER BY col_6, col_1, col_2
---- hash rowsort
3 tuples hashing to a8129edd377d312f8163e2f45600237e

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.c > t1.d AND (t1.e > t1.c OR t1.e < t1.d) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.e AS col_2, abs(t1.a) AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, t1.a + t1.b * 2 + t1.c * 3 AS col_6, t1.b - t1.c AS col_7
---- hash rowsort
3 tuples hashing to a8129edd377d312f8163e2f45600237e

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.c > t1.d AND (t1.e > t1.c OR t1.e < t1.d) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.e AS col_2, abs(t1.a) AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, t1.a + t1.b * 2 + t1.c * 3 AS col_6, t1.b - t1.c AS col_7 ORDER BY col_6, col_4, col_3, col_5, col_7
---- hash rowsort
3 tuples hashing to a8129edd377d312f8163e2f45600237e

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.e > t1.c OR t1.e < t1.d) AND t1.c > t1.d RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.e AS col_2, abs(t1.a) AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, t1.a + t1.b * 2 + t1.c * 3 AS col_6, t1.b - t1.c AS col_7
---- hash rowsort
3 tuples hashing to a8129edd377d312f8163e2f45600237e

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.e > t1.c OR t1.e < t1.d) AND t1.c > t1.d RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.e AS col_2, abs(t1.a) AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, t1.a + t1.b * 2 + t1.c * 3 AS col_6, t1.b - t1.c AS col_7 ORDER BY col_4, col_5, col_3, col_1
---- hash rowsort
3 tuples hashing to a8129edd377d312f8163e2f45600237e

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.b - t1.c AS col_1, t1.d - t1.e AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_6
---- hash rowsort
10 tuples hashing to 5ef0b993601e70b2f826cc8584a5d9fd

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.b - t1.c AS col_1, t1.d - t1.e AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_6 ORDER BY col_3, col_5, col_6, col_4, col_2
---- hash rowsort
10 tuples hashing to 5ef0b993601e70b2f826cc8584a5d9fd

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND t1.a > t1.b RETURN t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2
---- hash rowsort
5 tuples hashing to 4696c13474a735611a80cd1ca030dd8c

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND t1.a > t1.b RETURN t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2 ORDER BY col_2, col_1
---- hash rowsort
5 tuples hashing to 4696c13474a735611a80cd1ca030dd8c

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND t1.c > t1.d RETURN t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2
---- hash rowsort
5 tuples hashing to 4696c13474a735611a80cd1ca030dd8c

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND t1.c > t1.d RETURN t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2 ORDER BY col_1, col_2
---- hash rowsort
5 tuples hashing to 4696c13474a735611a80cd1ca030dd8c

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.c AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4
---- hash rowsort
5 tuples hashing to c5d849859f6eca128c22635ba6c3cb04

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.c AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4 ORDER BY col_4, col_2, col_1
---- hash rowsort
5 tuples hashing to c5d849859f6eca128c22635ba6c3cb04

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.b > t1.c RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.c AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4
---- hash rowsort
5 tuples hashing to c5d849859f6eca128c22635ba6c3cb04

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.b > t1.c RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.c AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4 ORDER BY col_4, col_3, col_1, col_2
---- hash rowsort
5 tuples hashing to c5d849859f6eca128c22635ba6c3cb04

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b RETURN t1.b - t1.c AS col_1
---- hash rowsort
17 tuples hashing to acc51927d4c550f3c05c306b7914158e

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b RETURN t1.b - t1.c AS col_1 ORDER BY col_1
---- hash rowsort
17 tuples hashing to acc51927d4c550f3c05c306b7914158e

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN abs(t1.a) AS col_1, t1.b AS col_2, t1.c AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, t1.a - t1.b AS col_5, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_6, t1.a AS col_7
---- hash rowsort
7 tuples hashing to 77efab7a5ab568021241d73b49ff1a6b

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN abs(t1.a) AS col_1, t1.b AS col_2, t1.c AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, t1.a - t1.b AS col_5, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_6, t1.a AS col_7 ORDER BY col_3, col_6, col_4, col_5, col_2, col_7
---- hash rowsort
7 tuples hashing to 77efab7a5ab568021241d73b49ff1a6b

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND t1.b > t1.c RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.a AS col_3, t1.a + t1.b * 2 AS col_4, t1.c - t1.d AS col_5
---- hash rowsort
4 tuples hashing to 1939e130cceab074419ddaf68a054d49

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND t1.b > t1.c RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.a AS col_3, t1.a + t1.b * 2 AS col_4, t1.c - t1.d AS col_5 ORDER BY col_1, col_4, col_5, col_3
---- hash rowsort
4 tuples hashing to 1939e130cceab074419ddaf68a054d49

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND t1.c > t1.d RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.a AS col_3, t1.a + t1.b * 2 AS col_4, t1.c - t1.d AS col_5
---- hash rowsort
4 tuples hashing to 1939e130cceab074419ddaf68a054d49

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND t1.c > t1.d RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.a AS col_3, t1.a + t1.b * 2 AS col_4, t1.c - t1.d AS col_5 ORDER BY col_1, col_2
---- hash rowsort
4 tuples hashing to 1939e130cceab074419ddaf68a054d49

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND t1.c > t1.d RETURN t1.a AS col_1
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND t1.c > t1.d RETURN t1.a AS col_1 ORDER BY col_1
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.c > t1.d AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a AS col_1
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.c > t1.d AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a AS col_1 ORDER BY col_1
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.c > t1.d RETURN t1.a AS col_1
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.c > t1.d RETURN t1.a AS col_1 ORDER BY col_1
---- 0


-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a AS col_2
---- hash rowsort
30 tuples hashing to 1eff7d96438eb491cb4de14a09c1cccf

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a AS col_2 ORDER BY col_1, col_2
---- hash rowsort
30 tuples hashing to 1eff7d96438eb491cb4de14a09c1cccf

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.e > t1.c OR t1.e < t1.d) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4
---- hash rowsort
3 tuples hashing to 454c51d20bd07dcb7b5c6f56fb27e95e

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.e > t1.c OR t1.e < t1.d) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4 ORDER BY col_1, col_2
---- hash rowsort
3 tuples hashing to 454c51d20bd07dcb7b5c6f56fb27e95e

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.b > t1.c AND (t1.e > t1.c OR t1.e < t1.d) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4
---- hash rowsort
3 tuples hashing to 454c51d20bd07dcb7b5c6f56fb27e95e

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.b > t1.c AND (t1.e > t1.c OR t1.e < t1.d) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4 ORDER BY col_3, col_4
---- hash rowsort
3 tuples hashing to 454c51d20bd07dcb7b5c6f56fb27e95e

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.e > t1.c OR t1.e < t1.d) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4
---- hash rowsort
3 tuples hashing to 454c51d20bd07dcb7b5c6f56fb27e95e

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.e > t1.c OR t1.e < t1.d) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4 ORDER BY col_2, col_3
---- hash rowsort
3 tuples hashing to 454c51d20bd07dcb7b5c6f56fb27e95e

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.b > t1.c RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4
---- hash rowsort
3 tuples hashing to 454c51d20bd07dcb7b5c6f56fb27e95e

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.b > t1.c RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4 ORDER BY col_4, col_3, col_1
---- hash rowsort
3 tuples hashing to 454c51d20bd07dcb7b5c6f56fb27e95e

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.d AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.a + t1.b * 2 AS col_5
---- hash rowsort
13 tuples hashing to d9a717bcbc137be38ba100402163ea40

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.d AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.a + t1.b * 2 AS col_5 ORDER BY col_3, col_2, col_4, col_5, col_1
---- hash rowsort
13 tuples hashing to d9a717bcbc137be38ba100402163ea40

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.a > t1.b RETURN abs(t1.a) AS col_1, t1.a + t1.b * 2 AS col_2, t1.b AS col_3, t1.d AS col_4, t1.a - t1.b AS col_5, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_6, t1.a + t1.b * 2 + t1.c * 3 AS col_7
---- hash rowsort
19 tuples hashing to d3c64f57fd93d0c41302271d82a32244

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.a > t1.b RETURN abs(t1.a) AS col_1, t1.a + t1.b * 2 AS col_2, t1.b AS col_3, t1.d AS col_4, t1.a - t1.b AS col_5, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_6, t1.a + t1.b * 2 + t1.c * 3 AS col_7 ORDER BY col_1, col_4, col_7
---- hash rowsort
19 tuples hashing to d3c64f57fd93d0c41302271d82a32244

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND t1.c > t1.d AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a - t1.b AS col_2, t1.e AS col_3, abs(t1.a) AS col_4, t1.c AS col_5
---- hash rowsort
4 tuples hashing to 52f547bc6b572a943b06156e2dc9c3a3

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND t1.c > t1.d AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a - t1.b AS col_2, t1.e AS col_3, abs(t1.a) AS col_4, t1.c AS col_5 ORDER BY col_2, col_3
---- hash rowsort
4 tuples hashing to 52f547bc6b572a943b06156e2dc9c3a3

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND NOT (t1.d >= 110 AND t1.d <= 150) AND t1.c > t1.d RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a - t1.b AS col_2, t1.e AS col_3, abs(t1.a) AS col_4, t1.c AS col_5
---- hash rowsort
4 tuples hashing to 52f547bc6b572a943b06156e2dc9c3a3

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND NOT (t1.d >= 110 AND t1.d <= 150) AND t1.c > t1.d RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a - t1.b AS col_2, t1.e AS col_3, abs(t1.a) AS col_4, t1.c AS col_5 ORDER BY col_2, col_4, col_3
---- hash rowsort
4 tuples hashing to 52f547bc6b572a943b06156e2dc9c3a3

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND NOT (t1.d >= 110 AND t1.d <= 150) AND t1.a > t1.b RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a - t1.b AS col_2, t1.e AS col_3, abs(t1.a) AS col_4, t1.c AS col_5
---- hash rowsort
4 tuples hashing to 52f547bc6b572a943b06156e2dc9c3a3

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND NOT (t1.d >= 110 AND t1.d <= 150) AND t1.a > t1.b RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a - t1.b AS col_2, t1.e AS col_3, abs(t1.a) AS col_4, t1.c AS col_5 ORDER BY col_4, col_3
---- hash rowsort
4 tuples hashing to 52f547bc6b572a943b06156e2dc9c3a3

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.d AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.b - t1.c AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5
---- hash rowsort
2 tuples hashing to f38e7043ef57f1185447d10b1686710d

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.d AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.b - t1.c AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5 ORDER BY col_1, col_4
---- hash rowsort
2 tuples hashing to f38e7043ef57f1185447d10b1686710d

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR t1.a > t1.b RETURN t1.d AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.a AS col_3, t1.a - t1.b AS col_4
---- hash rowsort
24 tuples hashing to 7ac23eaaab8b15588342ee58c7bd324d

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR t1.a > t1.b RETURN t1.d AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.a AS col_3, t1.a - t1.b AS col_4 ORDER BY col_1, col_3, col_2
---- hash rowsort
24 tuples hashing to 7ac23eaaab8b15588342ee58c7bd324d

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.a + t1.b * 2 AS col_2, t1.b - t1.c AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.a AS col_5, t1.a - t1.b AS col_6
---- hash rowsort
30 tuples hashing to cf199af6d194ce491525b6982e5b855b

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.a + t1.b * 2 AS col_2, t1.b - t1.c AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.a AS col_5, t1.a - t1.b AS col_6 ORDER BY col_4, col_1, col_2, col_5, col_6
---- hash rowsort
30 tuples hashing to cf199af6d194ce491525b6982e5b855b

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR t1.b > t1.c RETURN t1.a AS col_1, t1.d AS col_2
---- hash rowsort
20 tuples hashing to 225faa916990f35159a64c72d7e3d503

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR t1.b > t1.c RETURN t1.a AS col_1, t1.d AS col_2 ORDER BY col_2, col_1
---- hash rowsort
20 tuples hashing to 225faa916990f35159a64c72d7e3d503

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR t1.d > t1.e RETURN t1.a AS col_1, t1.d AS col_2
---- hash rowsort
20 tuples hashing to 225faa916990f35159a64c72d7e3d503

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR t1.d > t1.e RETURN t1.a AS col_1, t1.d AS col_2 ORDER BY col_2, col_1
---- hash rowsort
20 tuples hashing to 225faa916990f35159a64c72d7e3d503

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1
---- hash rowsort
13 tuples hashing to 29a95fdf6a51f4043cf4a3d5d20f5b95

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1 ORDER BY col_1
---- hash rowsort
13 tuples hashing to 29a95fdf6a51f4043cf4a3d5d20f5b95

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.c > t1.d RETURN t1.b AS col_1, t1.a + t1.b * 2 AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3
---- hash rowsort
3 tuples hashing to bb157abd6674aba4aa42b6355a973ede

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.c > t1.d RETURN t1.b AS col_1, t1.a + t1.b * 2 AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3 ORDER BY col_3, col_1
---- hash rowsort
3 tuples hashing to bb157abd6674aba4aa42b6355a973ede

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND t1.b > t1.c AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.b AS col_1, t1.a + t1.b * 2 AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3
---- hash rowsort
3 tuples hashing to bb157abd6674aba4aa42b6355a973ede

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND t1.b > t1.c AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.b AS col_1, t1.a + t1.b * 2 AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3 ORDER BY col_1, col_3
---- hash rowsort
3 tuples hashing to bb157abd6674aba4aa42b6355a973ede

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR t1.c > t1.d RETURN t1.a - t1.b AS col_1, t1.a AS col_2, t1.b - t1.c AS col_3, t1.b AS col_4, t1.e AS col_5
---- hash rowsort
22 tuples hashing to 2f823f29deac7f8f8152cc3004e55137

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR t1.c > t1.d RETURN t1.a - t1.b AS col_1, t1.a AS col_2, t1.b - t1.c AS col_3, t1.b AS col_4, t1.e AS col_5 ORDER BY col_2, col_1, col_5, col_4
---- hash rowsort
22 tuples hashing to 2f823f29deac7f8f8152cc3004e55137

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a - t1.b AS col_1, t1.a AS col_2, t1.b - t1.c AS col_3, t1.b AS col_4, t1.e AS col_5
---- hash rowsort
22 tuples hashing to 2f823f29deac7f8f8152cc3004e55137

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a - t1.b AS col_1, t1.a AS col_2, t1.b - t1.c AS col_3, t1.b AS col_4, t1.e AS col_5 ORDER BY col_1, col_2
---- hash rowsort
22 tuples hashing to 2f823f29deac7f8f8152cc3004e55137

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1
---- hash rowsort
21 tuples hashing to 928f7d1962563aaad6047043e90ef523

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1 ORDER BY col_1
---- hash rowsort
21 tuples hashing to 928f7d1962563aaad6047043e90ef523

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.e > t1.c OR t1.e < t1.d) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1
---- hash rowsort
21 tuples hashing to 928f7d1962563aaad6047043e90ef523

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.e > t1.c OR t1.e < t1.d) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1 ORDER BY col_1
---- hash rowsort
21 tuples hashing to 928f7d1962563aaad6047043e90ef523

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.e > t1.a AND t1.e < t1.b) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.e AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, abs(t1.a) AS col_5, t1.a - t1.b AS col_6, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_7
---- hash rowsort
11 tuples hashing to aade56ce4d6e49c7d138c7d6d23f39f4

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.e > t1.a AND t1.e < t1.b) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.e AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, abs(t1.a) AS col_5, t1.a - t1.b AS col_6, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_7 ORDER BY col_1, col_7, col_5, col_4, col_2, col_3
---- hash rowsort
11 tuples hashing to aade56ce4d6e49c7d138c7d6d23f39f4

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.e AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, abs(t1.a) AS col_5, t1.a - t1.b AS col_6, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_7
---- hash rowsort
11 tuples hashing to aade56ce4d6e49c7d138c7d6d23f39f4

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.e AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, abs(t1.a) AS col_5, t1.a - t1.b AS col_6, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_7 ORDER BY col_2, col_3, col_7, col_4, col_1, col_5
---- hash rowsort
11 tuples hashing to aade56ce4d6e49c7d138c7d6d23f39f4

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.e AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, abs(t1.a) AS col_5, t1.a - t1.b AS col_6, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_7
---- hash rowsort
11 tuples hashing to aade56ce4d6e49c7d138c7d6d23f39f4

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.e AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, abs(t1.a) AS col_5, t1.a - t1.b AS col_6, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_7 ORDER BY col_5, col_7, col_6
---- hash rowsort
11 tuples hashing to aade56ce4d6e49c7d138c7d6d23f39f4

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.a AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5
---- hash rowsort
29 tuples hashing to 2cb501fcb4f9f78b2d5beb65da09c0c3

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.a AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5 ORDER BY col_2, col_5, col_3, col_4
---- hash rowsort
29 tuples hashing to 2cb501fcb4f9f78b2d5beb65da09c0c3

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.a AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5
---- hash rowsort
29 tuples hashing to 2cb501fcb4f9f78b2d5beb65da09c0c3

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.a AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5 ORDER BY col_3, col_4
---- hash rowsort
29 tuples hashing to 2cb501fcb4f9f78b2d5beb65da09c0c3

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.a AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5
---- hash rowsort
29 tuples hashing to 2cb501fcb4f9f78b2d5beb65da09c0c3

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.a AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5 ORDER BY col_5, col_2, col_4
---- hash rowsort
29 tuples hashing to 2cb501fcb4f9f78b2d5beb65da09c0c3

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.e > t1.a AND t1.e < t1.b) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.d - t1.e AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5
---- 0


-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.e > t1.a AND t1.e < t1.b) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.d - t1.e AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5 ORDER BY col_1, col_4, col_3, col_5
---- 0


-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.a > t1.b AND (t1.e > t1.a AND t1.e < t1.b) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.d - t1.e AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5
---- 0


-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.a > t1.b AND (t1.e > t1.a AND t1.e < t1.b) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.d - t1.e AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5 ORDER BY col_5, col_4
---- 0


-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.e > t1.a AND t1.e < t1.b) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.d - t1.e AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5
---- 0


-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.e > t1.a AND t1.e < t1.b) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.d - t1.e AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5 ORDER BY col_3, col_2
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND t1.c > t1.d RETURN abs(t1.a) AS col_1, t1.a - t1.b AS col_2, t1.d - t1.e AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_6
---- hash rowsort
2 tuples hashing to 4cd2ddb5a674658bafabf7975e8d0c27

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND t1.c > t1.d RETURN abs(t1.a) AS col_1, t1.a - t1.b AS col_2, t1.d - t1.e AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_6 ORDER BY col_4, col_1, col_5
---- hash rowsort
2 tuples hashing to 4cd2ddb5a674658bafabf7975e8d0c27

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.e > t1.a AND t1.e < t1.b) RETURN abs(t1.a) AS col_1, t1.a - t1.b AS col_2, t1.d - t1.e AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_6
---- hash rowsort
2 tuples hashing to 4cd2ddb5a674658bafabf7975e8d0c27

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.e > t1.a AND t1.e < t1.b) RETURN abs(t1.a) AS col_1, t1.a - t1.b AS col_2, t1.d - t1.e AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_6 ORDER BY col_2, col_3, col_6, col_1, col_5, col_4
---- hash rowsort
2 tuples hashing to 4cd2ddb5a674658bafabf7975e8d0c27

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.d > t1.e RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.b AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, abs(t1.b - t1.c) AS col_4, t1.a - t1.b AS col_5, t1.b - t1.c AS col_6
---- 0


-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.d > t1.e RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.b AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, abs(t1.b - t1.c) AS col_4, t1.a - t1.b AS col_5, t1.b - t1.c AS col_6 ORDER BY col_2, col_1, col_3, col_4, col_5
---- 0


-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.d > t1.e RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.b AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, abs(t1.b - t1.c) AS col_4, t1.a - t1.b AS col_5, t1.b - t1.c AS col_6
---- 0


-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.d > t1.e RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.b AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, abs(t1.b - t1.c) AS col_4, t1.a - t1.b AS col_5, t1.b - t1.c AS col_6 ORDER BY col_5, col_6
---- 0


-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.b AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, abs(t1.b - t1.c) AS col_4, t1.a - t1.b AS col_5, t1.b - t1.c AS col_6
---- 0


-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.b AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, abs(t1.b - t1.c) AS col_4, t1.a - t1.b AS col_5, t1.b - t1.c AS col_6 ORDER BY col_2, col_1, col_3, col_5
---- 0


-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.b AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, abs(t1.b - t1.c) AS col_4, t1.a - t1.b AS col_5, t1.b - t1.c AS col_6
---- 0


-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.b AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, abs(t1.b - t1.c) AS col_4, t1.a - t1.b AS col_5, t1.b - t1.c AS col_6 ORDER BY col_4, col_5, col_2
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND t1.a > t1.b AND t1.c > t1.d RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.e AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, abs(t1.b - t1.c) AS col_4
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND t1.a > t1.b AND t1.c > t1.d RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.e AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, abs(t1.b - t1.c) AS col_4 ORDER BY col_2, col_1, col_4
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND t1.c > t1.d RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.e AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, abs(t1.b - t1.c) AS col_4
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND t1.c > t1.d RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.e AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, abs(t1.b - t1.c) AS col_4 ORDER BY col_1, col_4, col_3, col_2
---- 0


-STATEMENT MATCH (t1:t1) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a - t1.b AS col_2, t1.d AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, abs(t1.a) AS col_5, t1.c AS col_6, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_7
---- hash rowsort
30 tuples hashing to 03234f0abbf892c9f6239a86bb6afa6e

-STATEMENT MATCH (t1:t1) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a - t1.b AS col_2, t1.d AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, abs(t1.a) AS col_5, t1.c AS col_6, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_7 ORDER BY col_5, col_1, col_2
---- hash rowsort
30 tuples hashing to 03234f0abbf892c9f6239a86bb6afa6e

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.b AS col_3, abs(t1.a) AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5
---- hash rowsort
11 tuples hashing to fb7114013bb5208c809ef98576781919

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.b AS col_3, abs(t1.a) AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5 ORDER BY col_4, col_2, col_3
---- hash rowsort
11 tuples hashing to fb7114013bb5208c809ef98576781919

-STATEMENT MATCH (t1:t1) RETURN t1.b AS col_1, abs(t1.b - t1.c) AS col_2
---- hash rowsort
30 tuples hashing to 27981adf06e0e81d4fc66380389b2c0c

-STATEMENT MATCH (t1:t1) RETURN t1.b AS col_1, abs(t1.b - t1.c) AS col_2 ORDER BY col_2, col_1
---- hash rowsort
30 tuples hashing to 27981adf06e0e81d4fc66380389b2c0c

-STATEMENT MATCH (t1:t1) RETURN t1.e AS col_1, abs(t1.a) AS col_2
---- hash rowsort
30 tuples hashing to 0577a532186fd58ab51cdab496db421e

-STATEMENT MATCH (t1:t1) RETURN t1.e AS col_1, abs(t1.a) AS col_2 ORDER BY col_2, col_1
---- hash rowsort
30 tuples hashing to 0577a532186fd58ab51cdab496db421e

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.e > t1.a AND t1.e < t1.b) RETURN t1.c - t1.d AS col_1, t1.e AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.a - t1.b AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5, t1.d AS col_6, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_7
---- hash rowsort
16 tuples hashing to 3d5e535875e48959c28273401c1e4098

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.e > t1.a AND t1.e < t1.b) RETURN t1.c - t1.d AS col_1, t1.e AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.a - t1.b AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5, t1.d AS col_6, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_7 ORDER BY col_5, col_1, col_7, col_4, col_6, col_2, col_3
---- hash rowsort
16 tuples hashing to 3d5e535875e48959c28273401c1e4098

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.e > t1.a AND t1.e < t1.b) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.c - t1.d AS col_1, t1.e AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.a - t1.b AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5, t1.d AS col_6, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_7
---- hash rowsort
16 tuples hashing to 3d5e535875e48959c28273401c1e4098

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.e > t1.a AND t1.e < t1.b) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.c - t1.d AS col_1, t1.e AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.a - t1.b AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5, t1.d AS col_6, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_7 ORDER BY col_6, col_5
---- hash rowsort
16 tuples hashing to 3d5e535875e48959c28273401c1e4098

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.e > t1.a AND t1.e < t1.b) OR t1.b > t1.c RETURN t1.c - t1.d AS col_1, t1.e AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.a - t1.b AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5, t1.d AS col_6, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_7
---- hash rowsort
16 tuples hashing to 3d5e535875e48959c28273401c1e4098

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.e > t1.a AND t1.e < t1.b) OR t1.b > t1.c RETURN t1.c - t1.d AS col_1, t1.e AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.a - t1.b AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5, t1.d AS col_6, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_7 ORDER BY col_5, col_3, col_7, col_2, col_4
---- hash rowsort
16 tuples hashing to 3d5e535875e48959c28273401c1e4098

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.d AS col_1, t1.c - t1.d AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, t1.e AS col_5, t1.b AS col_6, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_7
---- hash rowsort
15 tuples hashing to e1afc82b2cf737dce31cee8d0f8c3fb8

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.d AS col_1, t1.c - t1.d AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, t1.e AS col_5, t1.b AS col_6, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_7 ORDER BY col_7, col_1
---- hash rowsort
15 tuples hashing to e1afc82b2cf737dce31cee8d0f8c3fb8

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.d - t1.e AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.b AS col_3, t1.a AS col_4, t1.c AS col_5, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_6, abs(t1.a) AS col_7
---- hash rowsort
30 tuples hashing to 4851f91b878369586df547aa071fc35a

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.d - t1.e AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.b AS col_3, t1.a AS col_4, t1.c AS col_5, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_6, abs(t1.a) AS col_7 ORDER BY col_2, col_7
---- hash rowsort
30 tuples hashing to 4851f91b878369586df547aa071fc35a

-STATEMENT MATCH (t1:t1) RETURN abs(t1.a) AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.b AS col_4
---- hash rowsort
30 tuples hashing to c151f79df713fca35883394246865fae

-STATEMENT MATCH (t1:t1) RETURN abs(t1.a) AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.b AS col_4 ORDER BY col_4, col_1, col_2, col_3
---- hash rowsort
30 tuples hashing to c151f79df713fca35883394246865fae

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN abs(t1.b - t1.c) AS col_1, t1.c AS col_2, t1.b - t1.c AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4
---- hash rowsort
18 tuples hashing to b8e0646cd0cd3c94d646b5476a3351c5

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN abs(t1.b - t1.c) AS col_1, t1.c AS col_2, t1.b - t1.c AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4 ORDER BY col_4, col_1, col_2
---- hash rowsort
18 tuples hashing to b8e0646cd0cd3c94d646b5476a3351c5

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.b - t1.c AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4
---- hash rowsort
30 tuples hashing to 13a90992dc0556ac7ca52fed5f7ee3f1

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.b - t1.c AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4 ORDER BY col_4, col_1
---- hash rowsort
30 tuples hashing to 13a90992dc0556ac7ca52fed5f7ee3f1

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.c AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5
---- hash rowsort
2 tuples hashing to 378bbf11f9628097312692a8b811f92e

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.c AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5 ORDER BY col_3, col_1, col_5
---- hash rowsort
2 tuples hashing to 378bbf11f9628097312692a8b811f92e

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.c > t1.d OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN abs(t1.b - t1.c) AS col_1
---- hash rowsort
20 tuples hashing to 0b90f8526d043c66fd0f06b10364119a

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.c > t1.d OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN abs(t1.b - t1.c) AS col_1 ORDER BY col_1
---- hash rowsort
20 tuples hashing to 0b90f8526d043c66fd0f06b10364119a

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.c > t1.d RETURN abs(t1.b - t1.c) AS col_1
---- hash rowsort
20 tuples hashing to 0b90f8526d043c66fd0f06b10364119a

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.c > t1.d RETURN abs(t1.b - t1.c) AS col_1 ORDER BY col_1
---- hash rowsort
20 tuples hashing to 0b90f8526d043c66fd0f06b10364119a

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR t1.c > t1.d RETURN abs(t1.b - t1.c) AS col_1
---- hash rowsort
20 tuples hashing to 0b90f8526d043c66fd0f06b10364119a

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR t1.c > t1.d RETURN abs(t1.b - t1.c) AS col_1 ORDER BY col_1
---- hash rowsort
20 tuples hashing to 0b90f8526d043c66fd0f06b10364119a

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN abs(t1.b - t1.c) AS col_1
---- hash rowsort
20 tuples hashing to 0b90f8526d043c66fd0f06b10364119a

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN abs(t1.b - t1.c) AS col_1 ORDER BY col_1
---- hash rowsort
20 tuples hashing to 0b90f8526d043c66fd0f06b10364119a

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.c - t1.d AS col_1, t1.d AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.b - t1.c AS col_5, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_6
---- hash rowsort
29 tuples hashing to b8a669259035dcc1606844dc8925b72e

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.c - t1.d AS col_1, t1.d AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.b - t1.c AS col_5, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_6 ORDER BY col_2, col_5, col_4
---- hash rowsort
29 tuples hashing to b8a669259035dcc1606844dc8925b72e

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.c - t1.d AS col_1, t1.d AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.b - t1.c AS col_5, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_6
---- hash rowsort
29 tuples hashing to b8a669259035dcc1606844dc8925b72e

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.c - t1.d AS col_1, t1.d AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.b - t1.c AS col_5, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_6 ORDER BY col_6, col_2, col_5, col_4
---- hash rowsort
29 tuples hashing to b8a669259035dcc1606844dc8925b72e

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b RETURN t1.a AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.c AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, t1.c - t1.d AS col_5, t1.a - t1.b AS col_6
---- hash rowsort
17 tuples hashing to 462f4b654d6798393ae1a0895fa3fb2a

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b RETURN t1.a AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.c AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, t1.c - t1.d AS col_5, t1.a - t1.b AS col_6 ORDER BY col_5, col_1, col_6, col_4, col_3
---- hash rowsort
17 tuples hashing to 462f4b654d6798393ae1a0895fa3fb2a

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) RETURN abs(t1.a) AS col_1, t1.b - t1.c AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.a + t1.b * 2 AS col_4
---- hash rowsort
3 tuples hashing to 186dbec8f36825c23c7409f9e544ce7a

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) RETURN abs(t1.a) AS col_1, t1.b - t1.c AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.a + t1.b * 2 AS col_4 ORDER BY col_2, col_3
---- hash rowsort
3 tuples hashing to 186dbec8f36825c23c7409f9e544ce7a

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.c > t1.d OR t1.d > t1.e OR (t1.e > t1.a AND t1.e < t1.b) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.b - t1.c AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.c AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5
---- hash rowsort
19 tuples hashing to 1987d45b0b116ae6c825c03dd1326dc4

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.c > t1.d OR t1.d > t1.e OR (t1.e > t1.a AND t1.e < t1.b) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.b - t1.c AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.c AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5 ORDER BY col_5, col_3, col_4, col_1, col_2
---- hash rowsort
19 tuples hashing to 1987d45b0b116ae6c825c03dd1326dc4

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR t1.c > t1.d OR t1.d > t1.e RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.b - t1.c AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.c AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5
---- hash rowsort
19 tuples hashing to 1987d45b0b116ae6c825c03dd1326dc4

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR t1.c > t1.d OR t1.d > t1.e RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.b - t1.c AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.c AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5 ORDER BY col_1, col_5, col_3
---- hash rowsort
19 tuples hashing to 1987d45b0b116ae6c825c03dd1326dc4

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a AS col_2
---- hash rowsort
10 tuples hashing to f47b92b2f2855847b16fd69cccd8b5e9

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a AS col_2 ORDER BY col_1, col_2
---- hash rowsort
10 tuples hashing to f47b92b2f2855847b16fd69cccd8b5e9

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN abs(t1.b - t1.c) AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.a - t1.b AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5
---- hash rowsort
30 tuples hashing to 4925274e122cd1d139a3b33f0edc8844

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN abs(t1.b - t1.c) AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.a - t1.b AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5 ORDER BY col_3, col_2, col_1, col_5
---- hash rowsort
30 tuples hashing to 4925274e122cd1d139a3b33f0edc8844

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a - t1.b AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.d - t1.e AS col_3
---- hash rowsort
8 tuples hashing to edc2725dcb44c9a570c873c2b3858c8a

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a - t1.b AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.d - t1.e AS col_3 ORDER BY col_1, col_2
---- hash rowsort
8 tuples hashing to edc2725dcb44c9a570c873c2b3858c8a

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.a - t1.b AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2
---- hash rowsort
30 tuples hashing to 2a0252ba1bd9c0a82b344822dc3ec2da

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.a - t1.b AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2 ORDER BY col_1, col_2
---- hash rowsort
30 tuples hashing to 2a0252ba1bd9c0a82b344822dc3ec2da

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c RETURN abs(t1.a) AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, abs(t1.b - t1.c) AS col_5, t1.a - t1.b AS col_6
---- hash rowsort
13 tuples hashing to 79d0c593dc32db6c341e6fdcf333042d

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c RETURN abs(t1.a) AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, abs(t1.b - t1.c) AS col_5, t1.a - t1.b AS col_6 ORDER BY col_5, col_2, col_1, col_4, col_3
---- hash rowsort
13 tuples hashing to 79d0c593dc32db6c341e6fdcf333042d

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR t1.c > t1.d OR (t1.e > t1.c OR t1.e < t1.d) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, abs(t1.b - t1.c) AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.d AS col_4, t1.b - t1.c AS col_5, t1.a - t1.b AS col_6, t1.b AS col_7
---- hash rowsort
28 tuples hashing to dafeb817b27e64f0141bebd221c69fa5

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR t1.c > t1.d OR (t1.e > t1.c OR t1.e < t1.d) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, abs(t1.b - t1.c) AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.d AS col_4, t1.b - t1.c AS col_5, t1.a - t1.b AS col_6, t1.b AS col_7 ORDER BY col_2, col_1, col_5, col_6, col_3, col_4, col_7
---- hash rowsort
28 tuples hashing to dafeb817b27e64f0141bebd221c69fa5

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR t1.b > t1.c OR (t1.e > t1.c OR t1.e < t1.d) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, abs(t1.b - t1.c) AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.d AS col_4, t1.b - t1.c AS col_5, t1.a - t1.b AS col_6, t1.b AS col_7
---- hash rowsort
28 tuples hashing to dafeb817b27e64f0141bebd221c69fa5

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR t1.b > t1.c OR (t1.e > t1.c OR t1.e < t1.d) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, abs(t1.b - t1.c) AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.d AS col_4, t1.b - t1.c AS col_5, t1.a - t1.b AS col_6, t1.b AS col_7 ORDER BY col_7, col_1, col_4, col_5, col_3, col_6
---- hash rowsort
28 tuples hashing to dafeb817b27e64f0141bebd221c69fa5

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.a AS col_4, t1.e AS col_5
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.a AS col_4, t1.e AS col_5 ORDER BY col_2, col_3, col_5
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.e > t1.a AND t1.e < t1.b) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.a AS col_4, t1.e AS col_5
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.e > t1.a AND t1.e < t1.b) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.a AS col_4, t1.e AS col_5 ORDER BY col_5, col_3, col_2
---- 0


-STATEMENT MATCH (t1:t1) RETURN t1.a - t1.b AS col_1, t1.b - t1.c AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.d - t1.e AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5, abs(t1.b - t1.c) AS col_6, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_7
---- hash rowsort
30 tuples hashing to 9128b6a4fd5c85d08765b0a26d39cc70

-STATEMENT MATCH (t1:t1) RETURN t1.a - t1.b AS col_1, t1.b - t1.c AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.d - t1.e AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5, abs(t1.b - t1.c) AS col_6, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_7 ORDER BY col_3, col_4, col_5, col_1, col_2
---- hash rowsort
30 tuples hashing to 9128b6a4fd5c85d08765b0a26d39cc70

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.c - t1.d AS col_1, t1.c AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3
---- hash rowsort
10 tuples hashing to 2c4df05a4ee2d9e4f97fb34b36dd6bea

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.c - t1.d AS col_1, t1.c AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3 ORDER BY col_2, col_1
---- hash rowsort
10 tuples hashing to 2c4df05a4ee2d9e4f97fb34b36dd6bea

-STATEMENT MATCH (t1:t1) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.c AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.b AS col_5
---- hash rowsort
30 tuples hashing to 5b5db6179b811b7ba9834927de2d7368

-STATEMENT MATCH (t1:t1) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.c AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.b AS col_5 ORDER BY col_2, col_4, col_5, col_3, col_1
---- hash rowsort
30 tuples hashing to 5b5db6179b811b7ba9834927de2d7368

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.c - t1.d AS col_2, t1.b AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4
---- hash rowsort
10 tuples hashing to 4d66a0e29fc571de9d9cb365746d2462

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.c - t1.d AS col_2, t1.b AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4 ORDER BY col_2, col_4, col_1, col_3
---- hash rowsort
10 tuples hashing to 4d66a0e29fc571de9d9cb365746d2462

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.c - t1.d AS col_2, t1.b AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4
---- hash rowsort
10 tuples hashing to 4d66a0e29fc571de9d9cb365746d2462

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.c - t1.d AS col_2, t1.b AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4 ORDER BY col_4, col_2, col_1, col_3
---- hash rowsort
10 tuples hashing to 4d66a0e29fc571de9d9cb365746d2462

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.b AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.c AS col_4
---- hash rowsort
30 tuples hashing to 6f78ddc0a5b5ad8ef4b1d08972887887

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.b AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.c AS col_4 ORDER BY col_4, col_3, col_2, col_1
---- hash rowsort
30 tuples hashing to 6f78ddc0a5b5ad8ef4b1d08972887887

-STATEMENT MATCH (t1:t1) RETURN t1.c AS col_1, t1.a + t1.b * 2 AS col_2, t1.b - t1.c AS col_3
---- hash rowsort
30 tuples hashing to 02e18efb5e8ae490e7b5137b79765bb9

-STATEMENT MATCH (t1:t1) RETURN t1.c AS col_1, t1.a + t1.b * 2 AS col_2, t1.b - t1.c AS col_3 ORDER BY col_3, col_1
---- hash rowsort
30 tuples hashing to 02e18efb5e8ae490e7b5137b79765bb9

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a AS col_2
---- hash rowsort
15 tuples hashing to a512bc577af89b7ed951794c489cba1a

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a AS col_2 ORDER BY col_2, col_1
---- hash rowsort
15 tuples hashing to a512bc577af89b7ed951794c489cba1a

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.c > t1.d AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.c - t1.d AS col_1, t1.b - t1.c AS col_2, t1.a AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4
---- 0


-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.c > t1.d AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.c - t1.d AS col_1, t1.b - t1.c AS col_2, t1.a AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4 ORDER BY col_4, col_2
---- 0


-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND t1.c > t1.d RETURN t1.c - t1.d AS col_1, t1.b - t1.c AS col_2, t1.a AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4
---- 0


-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND t1.c > t1.d RETURN t1.c - t1.d AS col_1, t1.b - t1.c AS col_2, t1.a AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4 ORDER BY col_4, col_3, col_1, col_2
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.c - t1.d AS col_1, t1.b - t1.c AS col_2, t1.a AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.c - t1.d AS col_1, t1.b - t1.c AS col_2, t1.a AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4 ORDER BY col_3, col_4
---- 0


-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.c > t1.d OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1
---- hash rowsort
18 tuples hashing to 9db1749e744db8ddaa29f825f2bbae00

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.c > t1.d OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1 ORDER BY col_1
---- hash rowsort
18 tuples hashing to 9db1749e744db8ddaa29f825f2bbae00

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.c > t1.d RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1
---- hash rowsort
18 tuples hashing to 9db1749e744db8ddaa29f825f2bbae00

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.c > t1.d RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1 ORDER BY col_1
---- hash rowsort
18 tuples hashing to 9db1749e744db8ddaa29f825f2bbae00

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.e > t1.c OR t1.e < t1.d) OR t1.a > t1.b RETURN abs(t1.a) AS col_1, abs(t1.b - t1.c) AS col_2, t1.d - t1.e AS col_3, t1.e AS col_4
---- hash rowsort
27 tuples hashing to a072f79e2ee5caa924199a92f589ad4a

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.e > t1.c OR t1.e < t1.d) OR t1.a > t1.b RETURN abs(t1.a) AS col_1, abs(t1.b - t1.c) AS col_2, t1.d - t1.e AS col_3, t1.e AS col_4 ORDER BY col_2, col_4
---- hash rowsort
27 tuples hashing to a072f79e2ee5caa924199a92f589ad4a

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR (t1.e > t1.c OR t1.e < t1.d) OR t1.b > t1.c RETURN abs(t1.a) AS col_1, abs(t1.b - t1.c) AS col_2, t1.d - t1.e AS col_3, t1.e AS col_4
---- hash rowsort
27 tuples hashing to a072f79e2ee5caa924199a92f589ad4a

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR (t1.e > t1.c OR t1.e < t1.d) OR t1.b > t1.c RETURN abs(t1.a) AS col_1, abs(t1.b - t1.c) AS col_2, t1.d - t1.e AS col_3, t1.e AS col_4 ORDER BY col_2, col_3
---- hash rowsort
27 tuples hashing to a072f79e2ee5caa924199a92f589ad4a

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR t1.b > t1.c OR t1.a > t1.b RETURN abs(t1.a) AS col_1, abs(t1.b - t1.c) AS col_2, t1.d - t1.e AS col_3, t1.e AS col_4
---- hash rowsort
27 tuples hashing to a072f79e2ee5caa924199a92f589ad4a

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR t1.b > t1.c OR t1.a > t1.b RETURN abs(t1.a) AS col_1, abs(t1.b - t1.c) AS col_2, t1.d - t1.e AS col_3, t1.e AS col_4 ORDER BY col_2, col_3, col_1, col_4
---- hash rowsort
27 tuples hashing to a072f79e2ee5caa924199a92f589ad4a

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR t1.b > t1.c OR (t1.e > t1.c OR t1.e < t1.d) RETURN abs(t1.a) AS col_1, abs(t1.b - t1.c) AS col_2, t1.d - t1.e AS col_3, t1.e AS col_4
---- hash rowsort
27 tuples hashing to a072f79e2ee5caa924199a92f589ad4a

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR t1.b > t1.c OR (t1.e > t1.c OR t1.e < t1.d) RETURN abs(t1.a) AS col_1, abs(t1.b - t1.c) AS col_2, t1.d - t1.e AS col_3, t1.e AS col_4 ORDER BY col_2, col_1, col_4, col_3
---- hash rowsort
27 tuples hashing to a072f79e2ee5caa924199a92f589ad4a

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2
---- hash rowsort
26 tuples hashing to befd4856a3c68ee6fecb6d1ee36161c0

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2 ORDER BY col_2, col_1
---- hash rowsort
26 tuples hashing to befd4856a3c68ee6fecb6d1ee36161c0

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d RETURN t1.c - t1.d AS col_1, t1.a - t1.b AS col_2, t1.b AS col_3, t1.d - t1.e AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_6, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_7
---- hash rowsort
13 tuples hashing to 056173676fceb0bfa309c7b316c21b41

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d RETURN t1.c - t1.d AS col_1, t1.a - t1.b AS col_2, t1.b AS col_3, t1.d - t1.e AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_6, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_7 ORDER BY col_2, col_7, col_6
---- hash rowsort
13 tuples hashing to 056173676fceb0bfa309c7b316c21b41

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.b AS col_1, abs(t1.b - t1.c) AS col_2, t1.d AS col_3
---- hash rowsort
3 tuples hashing to 75b3df4bbfa7a41597197240b91d7583

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.b AS col_1, abs(t1.b - t1.c) AS col_2, t1.d AS col_3 ORDER BY col_1, col_2, col_3
---- hash rowsort
3 tuples hashing to 75b3df4bbfa7a41597197240b91d7583

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.b AS col_1, abs(t1.b - t1.c) AS col_2, t1.d AS col_3
---- hash rowsort
3 tuples hashing to 75b3df4bbfa7a41597197240b91d7583

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.b AS col_1, abs(t1.b - t1.c) AS col_2, t1.d AS col_3 ORDER BY col_2, col_3, col_1
---- hash rowsort
3 tuples hashing to 75b3df4bbfa7a41597197240b91d7583

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.c > t1.d AND t1.b > t1.c RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.d AS col_2, t1.e AS col_3
---- hash rowsort
3 tuples hashing to 967a584b4e8e0422a6fc749b26d83269

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.c > t1.d AND t1.b > t1.c RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.d AS col_2, t1.e AS col_3 ORDER BY col_2, col_1
---- hash rowsort
3 tuples hashing to 967a584b4e8e0422a6fc749b26d83269

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND t1.c > t1.d AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.d AS col_2, t1.e AS col_3
---- hash rowsort
3 tuples hashing to 967a584b4e8e0422a6fc749b26d83269

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND t1.c > t1.d AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.d AS col_2, t1.e AS col_3 ORDER BY col_3, col_1, col_2
---- hash rowsort
3 tuples hashing to 967a584b4e8e0422a6fc749b26d83269

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.b > t1.c RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.d AS col_2, t1.e AS col_3
---- hash rowsort
3 tuples hashing to 967a584b4e8e0422a6fc749b26d83269

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.b > t1.c RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.d AS col_2, t1.e AS col_3 ORDER BY col_2, col_1, col_3
---- hash rowsort
3 tuples hashing to 967a584b4e8e0422a6fc749b26d83269

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND t1.b > t1.c AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.d AS col_2, t1.e AS col_3
---- hash rowsort
3 tuples hashing to 967a584b4e8e0422a6fc749b26d83269

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND t1.b > t1.c AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.d AS col_2, t1.e AS col_3 ORDER BY col_1, col_2, col_3
---- hash rowsort
3 tuples hashing to 967a584b4e8e0422a6fc749b26d83269

-STATEMENT MATCH (t1:t1) RETURN abs(t1.a) AS col_1, t1.a - t1.b AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, t1.b - t1.c AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_6, t1.c AS col_7
---- hash rowsort
30 tuples hashing to b7e3c0a48e7ba9bc7fa12a5007125dd7

-STATEMENT MATCH (t1:t1) RETURN abs(t1.a) AS col_1, t1.a - t1.b AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, t1.b - t1.c AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_6, t1.c AS col_7 ORDER BY col_5, col_3
---- hash rowsort
30 tuples hashing to b7e3c0a48e7ba9bc7fa12a5007125dd7

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.e > t1.c OR t1.e < t1.d) OR t1.a > t1.b RETURN abs(t1.b - t1.c) AS col_1
---- hash rowsort
28 tuples hashing to b3a80aab6a3a581af6d0494bc775069f

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.e > t1.c OR t1.e < t1.d) OR t1.a > t1.b RETURN abs(t1.b - t1.c) AS col_1 ORDER BY col_1
---- hash rowsort
28 tuples hashing to b3a80aab6a3a581af6d0494bc775069f

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR (t1.e > t1.c OR t1.e < t1.d) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN abs(t1.b - t1.c) AS col_1
---- hash rowsort
28 tuples hashing to b3a80aab6a3a581af6d0494bc775069f

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR (t1.e > t1.c OR t1.e < t1.d) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN abs(t1.b - t1.c) AS col_1 ORDER BY col_1
---- hash rowsort
28 tuples hashing to b3a80aab6a3a581af6d0494bc775069f

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.e > t1.c OR t1.e < t1.d) RETURN abs(t1.b - t1.c) AS col_1
---- hash rowsort
28 tuples hashing to b3a80aab6a3a581af6d0494bc775069f

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.e > t1.c OR t1.e < t1.d) RETURN abs(t1.b - t1.c) AS col_1 ORDER BY col_1
---- hash rowsort
28 tuples hashing to b3a80aab6a3a581af6d0494bc775069f

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.a AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5
---- hash rowsort
2 tuples hashing to 320ede2fb2ea53711789ed5ffee03adc

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.a AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5 ORDER BY col_4, col_1, col_3, col_5, col_2
---- hash rowsort
2 tuples hashing to 320ede2fb2ea53711789ed5ffee03adc

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.e > t1.c OR t1.e < t1.d) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2
---- hash rowsort
13 tuples hashing to 3f88fe320ecc1f2abe76387af0badb07

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.e > t1.c OR t1.e < t1.d) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2 ORDER BY col_2, col_1
---- hash rowsort
13 tuples hashing to 3f88fe320ecc1f2abe76387af0badb07

