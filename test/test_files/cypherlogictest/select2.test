# these tests are generated by converting corresponding 
# SQLLogicTest SQL cases into Cypher cases
# with the eventual goal of creating an equivalent CypherLogicTest
-GROUP CypherLogicTest
-DATASET CSV EMPTY

--

-CASE Select2
-STATEMENT CREATE NODE TABLE t1(ID SERIAL, a INT32, b INT32, c INT32, d INT32, e INT32, PRIMARY KEY(ID))
---- ok
-STATEMENT CREATE (:t1 {e:NULL,c:102,b:NULL,d:101,a:104})
---- ok
-STATEMENT CREATE (:t1 {a:107,c:106,d:108,e:109,b:105})
---- ok
-STATEMENT CREATE (:t1 {e:110,d:114,b:112,a:NULL,c:113})
---- ok
-STATEMENT CREATE (:t1 {d:116,c:119,e:117,a:115,b:NULL})
---- ok
-STATEMENT CREATE (:t1 {c:123,d:122,b:124,e:NULL,a:121})
---- ok
-STATEMENT CREATE (:t1 {a:127,d:128,b:129,e:126,c:125})
---- ok
-STATEMENT CREATE (:t1 {e:132,c:134,a:131,d:133,b:130})
---- ok
-STATEMENT CREATE (:t1 {a:138,d:136,b:139,e:135,c:137})
---- ok
-STATEMENT CREATE (:t1 {e:144,c:141,d:140,a:142,b:143})
---- ok
-STATEMENT CREATE (:t1 {b:145,a:149,e:146,d:NULL,c:147})
---- ok
-STATEMENT CREATE (:t1 {b:151,c:150,a:153,d:NULL,e:NULL})
---- ok
-STATEMENT CREATE (:t1 {c:155,e:157,a:159,d:NULL,b:158})
---- ok
-STATEMENT CREATE (:t1 {c:161,b:160,a:163,d:164,e:162})
---- ok
-STATEMENT CREATE (:t1 {b:167,d:NULL,a:168,e:165,c:166})
---- ok
-STATEMENT CREATE (:t1 {d:171,b:170,c:172,e:173,a:174})
---- ok
-STATEMENT CREATE (:t1 {e:177,c:176,a:179,d:NULL,b:175})
---- ok
-STATEMENT CREATE (:t1 {b:181,e:180,a:182,d:183,c:184})
---- ok
-STATEMENT CREATE (:t1 {c:187,a:188,b:186,e:189,d:185})
---- ok
-STATEMENT CREATE (:t1 {d:190,b:194,c:193,e:192,a:191})
---- ok
-STATEMENT CREATE (:t1 {a:199,e:197,b:198,d:196,c:195})
---- ok
-STATEMENT CREATE (:t1 {b:NULL,c:202,d:203,a:201,e:204})
---- ok
-STATEMENT CREATE (:t1 {c:208,e:NULL,a:NULL,b:206,d:207})
---- ok
-STATEMENT CREATE (:t1 {c:214,e:210,a:213,d:212,b:211})
---- ok
-STATEMENT CREATE (:t1 {b:218,c:215,a:216,d:217,e:219})
---- ok
-STATEMENT CREATE (:t1 {b:223,e:221,d:222,a:220,c:224})
---- ok
-STATEMENT CREATE (:t1 {d:226,e:227,b:228,a:229,c:225})
---- ok
-STATEMENT CREATE (:t1 {a:234,c:231,b:232,e:230,d:233})
---- ok
-STATEMENT CREATE (:t1 {e:237,b:236,a:239,c:NULL,d:238})
---- ok
-STATEMENT CREATE (:t1 {e:NULL,c:244,b:240,a:243,d:NULL})
---- ok
-STATEMENT CREATE (:t1 {e:246,d:248,c:247,b:249,a:245})
---- ok
-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1
---- hash rowsort
30 tuples hashing to efdbaa4d180e7867bec1c4d897bd25b9

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b RETURN t1.e AS col_1, abs(t1.a) AS col_2, t1.b AS col_3, abs(t1.b - t1.c) AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5, t1.a + t1.b * 2 AS col_6, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_7
---- hash rowsort
17 tuples hashing to 46c6841abfae8913a6759ec6f454ab0f

-STATEMENT MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN abs(t1.b - t1.c) AS col_1, t1.b AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3
---- hash rowsort
8 tuples hashing to 0451564addcc49504e7dd88be40b3e69

-STATEMENT MATCH (t1:t1) WHERE t1.a IS Null RETURN t1.a AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.d AS col_4
---- 2
|1||114
|18||207

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.d - t1.e AS col_2
---- hash rowsort
10 tuples hashing to 4107afddb1186b30a9105bf7bf09f540

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR NOT t1.b IS Null RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.b AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_6
---- hash rowsort
29 tuples hashing to 777dcbc0198356b9c12bf01fa545f68c

-STATEMENT MATCH (t1:t1) RETURN abs(t1.b - t1.c) AS col_1
---- hash rowsort
30 tuples hashing to c289bcde2e1a495d6cc09dde069c6c87

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND NOT t1.b IS Null AND t1.a > t1.b RETURN t1.a + t1.b * 2 AS col_1
---- 6
391
475
502
544
595
685

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND coalesce(t1.a) <> 0 AND t1.c > t1.d RETURN t1.c AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.d - t1.e AS col_3, t1.c - t1.d AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_6, abs(t1.a) AS col_7
---- hash rowsort
5 tuples hashing to b523d6b6df543010b45626657adada9d

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.e > t1.c OR t1.e < t1.d) RETURN t1.d AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, abs(t1.b - t1.c) AS col_3, t1.c - t1.d AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, t1.a + t1.b * 2 AS col_6, t1.b - t1.c AS col_7
---- hash rowsort
9 tuples hashing to 80800d1e987b7049fa5d57c55815bf4c

-STATEMENT MATCH (t1:t1) WHERE NOT t1.b IS Null AND coalesce(t1.a) <> 0 RETURN t1.e AS col_1, t1.b AS col_2, t1.a AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, t1.a - t1.b AS col_6, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_7
---- hash rowsort
27 tuples hashing to e421c85cd0132772b0b7762c78066abb

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND t1.c > t1.d AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.a - t1.b AS col_3, t1.d - t1.e AS col_4
---- hash rowsort
6 tuples hashing to 83cde3379decb55b28d3ac450c6f9881

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, abs(t1.a) AS col_2, t1.d AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4
---- 2
1612|107|108|333
1902|127|128|222

-STATEMENT MATCH (t1:t1) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1
---- hash rowsort
30 tuples hashing to ec9f02c46c399db521c47dd9cb6a40dd

-STATEMENT MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 OR t1.b > t1.c OR NOT t1.b IS Null RETURN t1.d - t1.e AS col_1, t1.c - t1.d AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3
---- hash rowsort
30 tuples hashing to 7be06d7255991a0b921d169b65e408c0

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.b AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.d - t1.e AS col_5, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_6, t1.a - t1.b AS col_7
---- hash rowsort
30 tuples hashing to 292b0a5b2821884ba5d11e217b76fbd7

-STATEMENT MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 OR t1.b > t1.c OR t1.a > t1.b RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.e AS col_3
---- hash rowsort
30 tuples hashing to f2ff447495c871e67c605d2c0b5e70ec

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND NOT t1.b IS Null RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.d - t1.e AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3
---- hash rowsort
14 tuples hashing to d2467d2f2cfae3b29ec7f4a5152f36c4

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.c > t1.d RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.e AS col_3, t1.a - t1.b AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5
---- hash rowsort
13 tuples hashing to 5ed50f9b86136acfad54696420ffa1f0

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.e AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.d - t1.e AS col_3, t1.d AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5
---- hash rowsort
30 tuples hashing to a030f689f5a0035d4db42d5da9f4b7a7

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.e AS col_1, t1.a AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3
---- hash rowsort
14 tuples hashing to e0970228aa8a30d2050cfd3c11be9185

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR (t1.e > t1.a AND t1.e < t1.b) OR t1.a IS Null RETURN t1.a + t1.b * 2 AS col_1, abs(t1.b - t1.c) AS col_2, t1.c AS col_3, t1.d - t1.e AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_6
---- hash rowsort
23 tuples hashing to bf08a6d9c0db20af06d88ca646cda804

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.c > t1.d RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3
---- hash rowsort
15 tuples hashing to a15fae7379de155bbaeb251f575a7db0

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.a IS Null OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN abs(t1.b - t1.c) AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.d AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4
---- hash rowsort
18 tuples hashing to 12fdbfddf3f67b7da4a8224b4e2798a6

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR NOT t1.b IS Null OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a AS col_1, t1.c - t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5
---- hash rowsort
27 tuples hashing to cb5eb3ba2131bf64c07defbe3cb6e3af

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND coalesce(t1.a) <> 0 AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a - t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.b AS col_3, abs(t1.a) AS col_4, t1.a AS col_5
---- hash rowsort
2 tuples hashing to 4457dbfe4ab387a5f8f9b308280689f6

-STATEMENT MATCH (t1:t1) RETURN abs(t1.b - t1.c) AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.a - t1.b AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_6
---- hash rowsort
30 tuples hashing to bb777feb11708e8bab6a2441bd11b89e

-STATEMENT MATCH (t1:t1) WHERE NOT t1.b IS Null AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a - t1.b AS col_1, t1.b - t1.c AS col_2, abs(t1.a) AS col_3, abs(t1.b - t1.c) AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, t1.b AS col_6, t1.d - t1.e AS col_7
---- 1
2|-1|107|1|333|105|-1

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2
---- 1
1272|1290

-STATEMENT MATCH (t1:t1) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2
---- hash rowsort
30 tuples hashing to c1e3a4310060dcd710dc9c750c881699

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.a IS Null AND t1.d > t1.e RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, abs(t1.a) AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.a + t1.b * 2 AS col_4, t1.a AS col_5, t1.d - t1.e AS col_6, t1.d AS col_7
---- 1
1120||555|||4|114

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.c - t1.d AS col_2, t1.e AS col_3, t1.a AS col_4
---- hash rowsort
22 tuples hashing to b22693af4f023122fff8a50a5e372bda

-STATEMENT MATCH (t1:t1) WHERE NOT t1.b IS Null RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.d AS col_2
---- hash rowsort
27 tuples hashing to 1b7def90663182338e06a1cf6a69716c

-STATEMENT MATCH (t1:t1) WHERE NOT t1.b IS Null OR coalesce(t1.a) <> 0 OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.c - t1.d AS col_2
---- hash rowsort
30 tuples hashing to 56503929d5f9ae519d6cd57dbc46fd31

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b RETURN t1.e AS col_1, t1.a + t1.b * 2 AS col_2, t1.c AS col_3, t1.b - t1.c AS col_4
---- hash rowsort
17 tuples hashing to 002e43f0dae181922fce672d6b46bce4

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.c AS col_1, t1.b - t1.c AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, t1.a AS col_5, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_6
---- hash rowsort
2 tuples hashing to 4f318c569764111039dcb8c952539766

-STATEMENT MATCH (t1:t1) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.c - t1.d AS col_3, abs(t1.a) AS col_4, t1.d - t1.e AS col_5, t1.b - t1.c AS col_6
---- hash rowsort
30 tuples hashing to 8c1cbf34fc589bfee72b88a68c603df9

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, abs(t1.a) AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.a - t1.b AS col_4, t1.a + t1.b * 2 AS col_5, t1.c AS col_6
---- hash rowsort
30 tuples hashing to 0e9c742378241574ced59b33a5434334

-STATEMENT MATCH (t1:t1) RETURN t1.c - t1.d AS col_1, t1.b - t1.c AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, abs(t1.a) AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5
---- hash rowsort
30 tuples hashing to 7fe27233559679a19eeea3d0344a0a75

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.e > t1.c OR t1.e < t1.d) RETURN t1.d AS col_1
---- 3
185
212
222

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1
---- hash rowsort
13 tuples hashing to 26ce2a46fa9ea4ff61793fcfe9ac0168

-STATEMENT MATCH (t1:t1) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1
---- hash rowsort
30 tuples hashing to 0075716954dbc259c5e8ac65568a6fa7

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR coalesce(t1.a) <> 0 RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, abs(t1.b - t1.c) AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, t1.c - t1.d AS col_5, t1.a + t1.b * 2 AS col_6, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_7
---- hash rowsort
30 tuples hashing to 782245bb6ba30992ede7e5b5f0b3a770

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.e > t1.a AND t1.e < t1.b) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.e AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3
---- hash rowsort
11 tuples hashing to 10ffdae48a4133e337ecdb4299e41e7f

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.a IS Null RETURN t1.b - t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.a + t1.b * 2 AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5
---- hash rowsort
2 tuples hashing to f4e0215d63da3cf742c6994add1a57ab

-STATEMENT MATCH (t1:t1) RETURN t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.c - t1.d AS col_3
---- hash rowsort
30 tuples hashing to 506e2afe06127463d88f196da2943a89

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.d > t1.e RETURN t1.a + t1.b * 2 AS col_1, t1.d AS col_2, abs(t1.b - t1.c) AS col_3, t1.e AS col_4
---- hash rowsort
5 tuples hashing to 43c185bc3c298eb1f985ac13c0bafe63

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d RETURN t1.c - t1.d AS col_1
---- hash rowsort
13 tuples hashing to 4f440d60ba96ec329ca81db364624811

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.c > t1.d OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a - t1.b AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2
---- hash rowsort
26 tuples hashing to de7705618b1cddff30f17f3cfd1b86ab

-STATEMENT MATCH (t1:t1) WHERE t1.a IS Null RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1
---- 2
555
555

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND coalesce(t1.a) <> 0 RETURN t1.a + t1.b * 2 AS col_1, t1.d - t1.e AS col_2, t1.a - t1.b AS col_3, abs(t1.a) AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5, t1.c AS col_6
---- hash rowsort
6 tuples hashing to d2d3b4e04efb177f21490dcb8d52ada5

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.a > t1.b RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.b AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3
---- hash rowsort
18 tuples hashing to b8c57644f5bc8e0f2140fe80814027d3

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1
---- hash rowsort
21 tuples hashing to 784d5bd4f8864db01ca28799e5ce3a3e

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.e > t1.a AND t1.e < t1.b) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.d - t1.e AS col_2
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) RETURN t1.b - t1.c AS col_1, t1.c AS col_2
---- 3
-1|224
1|193
2|247

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.d - t1.e AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.a + t1.b * 2 AS col_3, t1.a AS col_4, t1.b - t1.c AS col_5
---- hash rowsort
14 tuples hashing to 3a03b803d90629615043650cb325b728

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.b > t1.c RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a + t1.b * 2 AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.d - t1.e AS col_5
---- hash rowsort
15 tuples hashing to 0fad8b78ab2dd2f61c26a27190ce19c0

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.c - t1.d AS col_1
---- hash rowsort
26 tuples hashing to 24924fe69d316f176b1550199a62a171

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.d > t1.e OR t1.a > t1.b OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.c - t1.d AS col_5
---- hash rowsort
27 tuples hashing to 253872178c640da617545317023199c8

-STATEMENT MATCH (t1:t1) RETURN t1.e AS col_1
---- hash rowsort
30 tuples hashing to b9f09a0d6206ee3b897ed8a2dc580e1d

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d RETURN t1.a + t1.b * 2 AS col_1
---- hash rowsort
13 tuples hashing to a9f003d45f26b5b6764ef22f16260fdf

-STATEMENT MATCH (t1:t1) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1
---- hash rowsort
30 tuples hashing to ec9f02c46c399db521c47dd9cb6a40dd

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND NOT t1.b IS Null AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.c - t1.d AS col_1, t1.a + t1.b * 2 AS col_2, t1.d - t1.e AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4
---- hash rowsort
6 tuples hashing to 5b6e8b80eab2cb3c976af840f2f32caa

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR t1.d > t1.e RETURN t1.a - t1.b AS col_1, abs(t1.b - t1.c) AS col_2, abs(t1.a) AS col_3
---- hash rowsort
27 tuples hashing to daf8222f368b8af911b2ea0205aff651

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) RETURN t1.d - t1.e AS col_1, abs(t1.a) AS col_2
---- hash rowsort
21 tuples hashing to a867ad5e8d461f8bc18f0f80ec81a821

-STATEMENT MATCH (t1:t1) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.b - t1.c AS col_3
---- hash rowsort
30 tuples hashing to 00e72088d65823366f9b3a96d22b61e0

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND t1.b > t1.c AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.a - t1.b AS col_4
---- 1
333|1391|23|2

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, abs(t1.b - t1.c) AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.b - t1.c AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_6
---- hash rowsort
13 tuples hashing to d3cef94ca3dc1b45729489b9ffa60d3f

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.a > t1.b RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.b - t1.c AS col_2, t1.a + t1.b * 2 AS col_3
---- hash rowsort
8 tuples hashing to 66a81d76eae1ab608302f07cd95c35e2

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a - t1.b AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.d - t1.e AS col_4
---- hash rowsort
21 tuples hashing to 13da6431c56def32def8f22e9acb8f5a

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.a > t1.b AND coalesce(t1.a) <> 0 RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1
---- hash rowsort
17 tuples hashing to baeb6fdb5d575870fddf7d11fa9e02f3

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, abs(t1.b - t1.c) AS col_2, t1.a + t1.b * 2 AS col_3
---- hash rowsort
8 tuples hashing to 491acceccdee796c24e32a2d5f4d5ef4

-STATEMENT MATCH (t1:t1) WHERE t1.a IS Null RETURN t1.d - t1.e AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.b - t1.c AS col_3, t1.e AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5, abs(t1.b - t1.c) AS col_6
---- hash rowsort
2 tuples hashing to 3ae5d48da87beb5893f4efe7ae59aa41

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.e > t1.a AND t1.e < t1.b) OR t1.a IS Null RETURN t1.d AS col_1, t1.c - t1.d AS col_2, t1.e AS col_3
---- hash rowsort
18 tuples hashing to 31eed42b421ab6466a52c1a32f6c58cf

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.b - t1.c AS col_3
---- hash rowsort
30 tuples hashing to de6b536a747f0bd59101fa0a12d1b4e5

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR NOT t1.b IS Null RETURN t1.b AS col_1, t1.d AS col_2, abs(t1.a) AS col_3, abs(t1.b - t1.c) AS col_4, t1.d - t1.e AS col_5
---- hash rowsort
27 tuples hashing to 70b18d00c256c3e58282c1c741745e5e

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND t1.a > t1.b AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.c AS col_3
---- 0


-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.c - t1.d AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, t1.a - t1.b AS col_5, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_6, t1.b AS col_7
---- hash rowsort
30 tuples hashing to 9b296f0c2d63eb2d8663ebbf98fe7462

-STATEMENT MATCH (t1:t1) WHERE NOT t1.b IS Null RETURN t1.d - t1.e AS col_1, abs(t1.b - t1.c) AS col_2
---- hash rowsort
27 tuples hashing to d476ace2c3b8cf05ff5893bf63e088e9

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3
---- hash rowsort
21 tuples hashing to 65983a3e33b00a21250a41e26be2a27c

-STATEMENT MATCH (t1:t1) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a AS col_2, t1.d AS col_3, t1.b - t1.c AS col_4, t1.b AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_6, t1.a + t1.b * 2 + t1.c * 3 AS col_7
---- hash rowsort
30 tuples hashing to 04619e8c0fb24f77d2243885117a1776

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.e > t1.a AND t1.e < t1.b) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1
---- hash rowsort
11 tuples hashing to 8272d1dcfc3f235e9ce05b0d0be2cf0e

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, abs(t1.b - t1.c) AS col_3
---- hash rowsort
22 tuples hashing to d667c19a8db947e8d78da6f211a32b33

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.a > t1.b RETURN t1.c AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2
---- hash rowsort
18 tuples hashing to b3abed6fa7975f32cea35c1c82052613

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.b - t1.c AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3
---- hash rowsort
8 tuples hashing to eaf0882665f15d6358c9bc2beca55a0c

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.a > t1.b RETURN abs(t1.b - t1.c) AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.b AS col_3, t1.d AS col_4, t1.e AS col_5, t1.c AS col_6, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_7
---- hash rowsort
3 tuples hashing to ddf3c7563b358cce0af4f01125706ce0

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND NOT t1.b IS Null AND t1.c > t1.d RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.e AS col_2, t1.d - t1.e AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.a - t1.b AS col_5
---- hash rowsort
11 tuples hashing to 4d1e4b4b34120f5c6bb0c0e4fe30fdbd

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.e AS col_4, t1.d AS col_5, t1.c - t1.d AS col_6, t1.a AS col_7
---- hash rowsort
26 tuples hashing to d5715764b273222c0aa9385bf4a9781e

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.d > t1.e RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.a + t1.b * 2 AS col_3, t1.c - t1.d AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_6
---- hash rowsort
16 tuples hashing to 5d1b031c85c8e443a475c8bf4d3c62ac

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND coalesce(t1.a) <> 0 AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.d - t1.e AS col_1
---- hash rowsort
14 tuples hashing to eb0d3d5abd4ff4a559c13f43d12f55fc

-STATEMENT MATCH (t1:t1) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.d AS col_2, t1.b - t1.c AS col_3, t1.c - t1.d AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, t1.b AS col_6, abs(t1.b - t1.c) AS col_7
---- hash rowsort
30 tuples hashing to f687ab94c7a21d83732ee96a366aad41

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.e > t1.a AND t1.e < t1.b) AND t1.a > t1.b RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.a AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.d > t1.e RETURN t1.c - t1.d AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.b AS col_4
---- hash rowsort
3 tuples hashing to 383eb65446347ea6e607173208759bd4

-STATEMENT MATCH (t1:t1) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.b AS col_2, t1.d - t1.e AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4
---- hash rowsort
30 tuples hashing to 063f5e8d2c0f3169b9c191380f3d3322

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.d AS col_1, t1.b - t1.c AS col_2, abs(t1.b - t1.c) AS col_3, t1.b AS col_4
---- hash rowsort
15 tuples hashing to 1d4f85009c12a1a99a445c4d2f49a07e

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, abs(t1.a) AS col_2
---- hash rowsort
27 tuples hashing to d2b3fb0bad81f76d011537262cf82da3

-STATEMENT MATCH (t1:t1) WHERE t1.a IS Null AND (t1.e > t1.c OR t1.e < t1.d) RETURN t1.b - t1.c AS col_1
---- 1
-1

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b RETURN abs(t1.b - t1.c) AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.b - t1.c AS col_3, t1.c - t1.d AS col_4, t1.a + t1.b * 2 AS col_5, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_6
---- hash rowsort
17 tuples hashing to 90fa34da0f47adbe685546e0538a64b5

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) RETURN t1.d AS col_1
---- hash rowsort
21 tuples hashing to a901a0fa410534d01e357e4cd9c9c41c

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.c - t1.d AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2
---- 1
-2|333

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR t1.a > t1.b OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.a + t1.b * 2 AS col_3, t1.d AS col_4, t1.c AS col_5
---- hash rowsort
24 tuples hashing to 92d3da4ee6152238af162ebb340d4995

-STATEMENT MATCH (t1:t1) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, abs(t1.b - t1.c) AS col_2, t1.d AS col_3, t1.a - t1.b AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5, t1.a + t1.b * 2 AS col_6, abs(t1.a) AS col_7
---- hash rowsort
30 tuples hashing to 7eb91ccb10e1f33802a145f37a09d3c0

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 AS col_1, t1.d AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.d - t1.e AS col_4, t1.a - t1.b AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_6
---- hash rowsort
30 tuples hashing to a13289706342cf62df9d849372f0933b

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR (t1.e > t1.c OR t1.e < t1.d) OR NOT t1.b IS Null RETURN abs(t1.b - t1.c) AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.c AS col_5, t1.e AS col_6, t1.d AS col_7
---- hash rowsort
28 tuples hashing to cf443efda2951657ba653ba7aff10172

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR t1.b > t1.c OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a + t1.b * 2 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2
---- hash rowsort
25 tuples hashing to 51d40a3dfe04e569ca324b58e54c2001

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a + t1.b * 2 AS col_2
---- hash rowsort
13 tuples hashing to f9aa7b0682d2155a61d91f6c3e3aa0f6

-STATEMENT MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.e AS col_2, t1.a + t1.b * 2 AS col_3, abs(t1.a) AS col_4, t1.c - t1.d AS col_5
---- hash rowsort
15 tuples hashing to 20ec583d2295fd5f84a509c8bb33045d

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.c > t1.d AND t1.a > t1.b RETURN t1.b - t1.c AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.d - t1.e AS col_3
---- hash rowsort
5 tuples hashing to 4ae979f02ba8355cc00e1b6009f7f07c

-STATEMENT MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 RETURN t1.d - t1.e AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.e AS col_3, t1.b - t1.c AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, t1.a + t1.b * 2 + t1.c * 3 AS col_6
---- hash rowsort
30 tuples hashing to 47d6e3c44547d5c5dcbd19d1dd9f15d5

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a AS col_1
---- hash rowsort
21 tuples hashing to 7243fa2f96df52cd4af85647b2be6a1b

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE NOT t1.b IS Null RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, abs(t1.b - t1.c) AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.a AS col_5
---- hash rowsort
27 tuples hashing to 15138e5915e2fe5ed2c0c820de7579ce

-STATEMENT MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 AND (t1.e > t1.c OR t1.e < t1.d) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.d - t1.e AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3
---- 2
635|-1|107
760|2|127

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) RETURN abs(t1.a) AS col_1, abs(t1.b - t1.c) AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3
---- hash rowsort
17 tuples hashing to 2c44ca73003271afa763cdb6e877fae4

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR t1.a > t1.b OR NOT t1.b IS Null RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.a - t1.b AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.c AS col_5
---- hash rowsort
27 tuples hashing to 9e262611553407ecce8e397969dd1bce

-STATEMENT MATCH (t1:t1) WHERE NOT t1.b IS Null AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN abs(t1.b - t1.c) AS col_1
---- 2
1
4

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR t1.a IS Null RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.a + t1.b * 2 AS col_2, t1.d AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, t1.a - t1.b AS col_5, t1.b - t1.c AS col_6, t1.a AS col_7
---- hash rowsort
15 tuples hashing to 53754235cfffd05233b4d3a2403881a5

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1
---- hash rowsort
17 tuples hashing to e237372cbf981454a9240fd99e73b8e4

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 AS col_1, t1.a AS col_2, t1.b AS col_3, t1.c AS col_4, abs(t1.b - t1.c) AS col_5, abs(t1.a) AS col_6, t1.d AS col_7
---- hash rowsort
30 tuples hashing to b34e0001ad4bdd914341ae317c613e1c

-STATEMENT MATCH (t1:t1) WHERE NOT t1.b IS Null OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.b - t1.c AS col_1, abs(t1.a) AS col_2
---- hash rowsort
27 tuples hashing to 3755533386c14db52aa1ef57fb5c7dfe

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.a > t1.b RETURN t1.c - t1.d AS col_1, t1.b - t1.c AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.c AS col_4
---- hash rowsort
3 tuples hashing to 9d90bcb98a18bc4f2c6c648b57d9a0b5

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.a > t1.b RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.d - t1.e AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.a - t1.b AS col_4, abs(t1.b - t1.c) AS col_5, t1.d AS col_6
---- hash rowsort
22 tuples hashing to 1438bde5aab9a47b1027ed6cd08d3080

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN abs(t1.a) AS col_1, t1.d AS col_2, t1.e AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, t1.b - t1.c AS col_6, t1.a AS col_7
---- hash rowsort
14 tuples hashing to c485dc4b6e4854ed2f176aa12518bebd

-STATEMENT MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 RETURN t1.d - t1.e AS col_1, abs(t1.b - t1.c) AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.a + t1.b * 2 AS col_4, t1.a - t1.b AS col_5
---- hash rowsort
30 tuples hashing to 2187ecb4988b726899c40305e68659be

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.e > t1.c OR t1.e < t1.d) OR t1.c > t1.d RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.b AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.d - t1.e AS col_4
---- hash rowsort
26 tuples hashing to a14dd901528761d99a178f3831e86c6f

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.e > t1.c OR t1.e < t1.d) AND t1.a IS Null RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.c - t1.d AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.d - t1.e AS col_5
---- 0


-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.a IS Null AND t1.d > t1.e RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.d AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, abs(t1.b - t1.c) AS col_5
---- 1
||114|1120|1

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.d AS col_1, t1.b - t1.c AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5, t1.c AS col_6, t1.a AS col_7
---- hash rowsort
10 tuples hashing to b0d4bbdac1bb95cff2c4e05adbb5da90

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.b - t1.c AS col_5, t1.e AS col_6
---- hash rowsort
30 tuples hashing to a0916b6a52dd9dbdcc5e8e5abbf13dc2

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR t1.d > t1.e OR coalesce(t1.a) <> 0 RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5
---- hash rowsort
30 tuples hashing to 7513fd547e90170855946a451500730f

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.a - t1.b AS col_3, t1.c - t1.d AS col_4
---- 0


-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.d - t1.e AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5
---- hash rowsort
30 tuples hashing to cc55531fcbd70c80d6dd0a84e1b5dab1

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.c AS col_1, t1.b AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.e AS col_5, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_6
---- hash rowsort
30 tuples hashing to 2afc0d951d1416824ab2e15f933b302d

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.b AS col_3
---- hash rowsort
13 tuples hashing to 68c3d5e1a20acbe40e43b4cb004bd223

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND t1.a IS Null RETURN abs(t1.b - t1.c) AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.d AS col_3
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.b AS col_1
---- hash rowsort
10 tuples hashing to f4e6e43c2b8b813ce50d6662923d4fc0

-STATEMENT MATCH (t1:t1) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.c - t1.d AS col_3, t1.b - t1.c AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_6
---- hash rowsort
30 tuples hashing to b84d1c2bd9287ce781ed7f218fa68282

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.d > t1.e AND coalesce(t1.a) <> 0 RETURN t1.a - t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, t1.d AS col_5
---- hash rowsort
9 tuples hashing to c9265d596fbcbad28442ec6b998fb740

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.d > t1.e RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2
---- hash rowsort
9 tuples hashing to da91174780bb14b5dedff6e117705ee5

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN abs(t1.a) AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.a + t1.b * 2 AS col_3, t1.c AS col_4, t1.b AS col_5, t1.d AS col_6
---- hash rowsort
2 tuples hashing to a84ed43f5c663d693a9c3bea9318231a

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.e > t1.c OR t1.e < t1.d) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.d - t1.e AS col_1, t1.a AS col_2
---- hash rowsort
5 tuples hashing to 404b928d376c352433661ed869305818

-STATEMENT MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 AND t1.d > t1.e AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.d - t1.e AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, t1.a - t1.b AS col_6
---- hash rowsort
7 tuples hashing to c39888e7e799f07421b58acd0c14b335

-STATEMENT MATCH (t1:t1) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1
---- hash rowsort
30 tuples hashing to 62634e04a17da0e006feac1d867155ac

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.d AS col_2, t1.d - t1.e AS col_3, t1.a - t1.b AS col_4
---- hash rowsort
30 tuples hashing to e6ae93a5fa82784933c5ae92e7a39c88

-STATEMENT MATCH (t1:t1) RETURN t1.d - t1.e AS col_1, t1.a - t1.b AS col_2
---- hash rowsort
30 tuples hashing to f8086924cbfa151a37fc052de951fa95

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND NOT t1.b IS Null AND t1.c > t1.d RETURN abs(t1.a) AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.c - t1.d AS col_3
---- hash rowsort
4 tuples hashing to d1f97e065d3318f1c905ff5f404c259e

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b RETURN t1.a AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.d - t1.e AS col_3
---- hash rowsort
17 tuples hashing to c3ff7d2b20e04fd75f074ea1f41137bc

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND NOT t1.b IS Null AND coalesce(t1.a) <> 0 RETURN t1.c - t1.d AS col_1, t1.d - t1.e AS col_2, t1.a - t1.b AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.b AS col_5, t1.a AS col_6, abs(t1.b - t1.c) AS col_7
---- hash rowsort
11 tuples hashing to fcdd05c347f43f87c33b71e758491765

-STATEMENT MATCH (t1:t1) RETURN t1.a AS col_1, t1.d AS col_2, t1.a - t1.b AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4
---- hash rowsort
30 tuples hashing to edb25fbf497e7db5e074ec693f986484

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.d AS col_1, t1.c AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4
---- hash rowsort
30 tuples hashing to ed44bad18fcadef3387f16249b2c8188

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b RETURN t1.b AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5, t1.a + t1.b * 2 AS col_6
---- hash rowsort
17 tuples hashing to 35b3e42da41d41da850ff27225d1add2

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.b AS col_3
---- hash rowsort
17 tuples hashing to b86029f47418c16af4cf2b938795cf9d

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) RETURN abs(t1.a) AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2
---- hash rowsort
17 tuples hashing to b9f27e2692846c7cf82160112dc817a1

-STATEMENT MATCH (t1:t1) RETURN t1.a - t1.b AS col_1, t1.b - t1.c AS col_2, abs(t1.b - t1.c) AS col_3
---- hash rowsort
30 tuples hashing to c67a9b35c13fbe0e2c787e8b298e0cc7

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR t1.a > t1.b RETURN t1.c AS col_1
---- hash rowsort
25 tuples hashing to 12ac2528d0176d140f899db83beeae4a

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.c - t1.d AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.a AS col_5, t1.c AS col_6
---- hash rowsort
21 tuples hashing to 0d3de03b4e439157d4403c7995f77353

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.d > t1.e AND t1.b > t1.c RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1
---- 1
5

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a + t1.b * 2 AS col_1
---- hash rowsort
21 tuples hashing to 1af0120a7bbd1e3cd998679b777f783d

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.c AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.a + t1.b * 2 AS col_4
---- hash rowsort
11 tuples hashing to 6eb821a9c64425c2015710ca063f859d

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.b > t1.c OR t1.c > t1.d RETURN t1.d AS col_1
---- hash rowsort
23 tuples hashing to 83c121f8dfa4054cd315db02a5a0da66

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b RETURN t1.c AS col_1, t1.e AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.d - t1.e AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5
---- hash rowsort
17 tuples hashing to 6916e65d511015d6aa52a62b4a666ba3

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR t1.a > t1.b RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.b - t1.c AS col_2, t1.e AS col_3
---- hash rowsort
24 tuples hashing to 20a4b8aec8f3063b4950f5c7d01cf17c

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR t1.a IS Null RETURN t1.b AS col_1, t1.d AS col_2, t1.a AS col_3, t1.c AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_6, abs(t1.a) AS col_7
---- hash rowsort
12 tuples hashing to 5bce68a9cb274f51217904d5c72a6671

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR t1.a > t1.b OR NOT t1.b IS Null RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.c AS col_2, t1.c - t1.d AS col_3, t1.b - t1.c AS col_4
---- hash rowsort
27 tuples hashing to 2d4310983fffbe49ff8a05e91ff7336c

-STATEMENT MATCH (t1:t1) RETURN abs(t1.b - t1.c) AS col_1, t1.b - t1.c AS col_2, t1.a + t1.b * 2 AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, abs(t1.a) AS col_5
---- hash rowsort
30 tuples hashing to 72261b5400c0b7dba214ac4eddcacb91

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.a + t1.b * 2 AS col_3, t1.c AS col_4, t1.d AS col_5, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_6, t1.a - t1.b AS col_7
---- hash rowsort
2 tuples hashing to 08aca67746baa979d75bd8d3a8f212cf

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) RETURN t1.d - t1.e AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2
---- hash rowsort
21 tuples hashing to f05f1e4996491abb7652a9e8dac93edc

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN abs(t1.b - t1.c) AS col_1, t1.b AS col_2, t1.e AS col_3
---- hash rowsort
8 tuples hashing to 0ca44be4b036928221c634402be5da44

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND t1.c > t1.d RETURN abs(t1.b - t1.c) AS col_1
---- 2
1
1

-STATEMENT MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.b AS col_4, t1.c - t1.d AS col_5
---- hash rowsort
30 tuples hashing to 362a2f78bba70bae1f727da6185db9e1

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR coalesce(t1.a) <> 0 OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, abs(t1.b - t1.c) AS col_4
---- hash rowsort
30 tuples hashing to 32c073ed253379fc3c0fbde03f69af53

-STATEMENT MATCH (t1:t1) RETURN t1.a - t1.b AS col_1, t1.b AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, abs(t1.a) AS col_4, t1.a + t1.b * 2 AS col_5
---- hash rowsort
30 tuples hashing to 660436ce07762532fcc9a69293041a2b

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR NOT t1.b IS Null RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, abs(t1.b - t1.c) AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_6, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_7
---- hash rowsort
28 tuples hashing to c1f202f0a51841e72a91e666b7129ad5

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR NOT t1.b IS Null OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.c AS col_1
---- hash rowsort
28 tuples hashing to cdae70acb9fb03e155f862decbecce8e

-STATEMENT MATCH (t1:t1) RETURN t1.d - t1.e AS col_1, t1.c - t1.d AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.a + t1.b * 2 AS col_4
---- hash rowsort
30 tuples hashing to ab195b44b1a8ac08b9a3c76310753019

-STATEMENT MATCH (t1:t1) WHERE t1.a IS Null RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.d AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, t1.c AS col_5, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_6
---- hash rowsort
2 tuples hashing to 7cf42480d3b855179ce02c484cbe661f

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1
---- hash rowsort
30 tuples hashing to efdbaa4d180e7867bec1c4d897bd25b9

-STATEMENT MATCH (t1:t1) RETURN t1.d - t1.e AS col_1
---- hash rowsort
30 tuples hashing to 9e2d6381b04ea314cd79c5fc9325b30e

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.a IS Null OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.b - t1.c AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.c - t1.d AS col_4, t1.e AS col_5, t1.b AS col_6
---- hash rowsort
16 tuples hashing to e323ed5546d6d53a22e652df110c9a0a

-STATEMENT MATCH (t1:t1) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, abs(t1.a) AS col_2, t1.a + t1.b * 2 AS col_3, t1.a AS col_4
---- hash rowsort
30 tuples hashing to 1a22ce28ef143293b9a3df25d9186b3d

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.b > t1.c RETURN t1.d AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.b - t1.c AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4
---- hash rowsort
9 tuples hashing to 942b2c182279b08bb67984c403d5f2e3

-STATEMENT MATCH (t1:t1) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2
---- hash rowsort
30 tuples hashing to cbd91d5b8b7846c7bc6e8eeab7c0ac50

-STATEMENT MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 AND t1.d > t1.e RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1
---- hash rowsort
11 tuples hashing to 968b47b57dececa1c36ea07df5744ccb

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.d - t1.e AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.a - t1.b AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, abs(t1.b - t1.c) AS col_6
---- hash rowsort
30 tuples hashing to 2960873e6fcd668c017046579722e727

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN abs(t1.a) AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.d - t1.e AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.b AS col_5, t1.a + t1.b * 2 + t1.c * 3 AS col_6, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_7
---- hash rowsort
2 tuples hashing to d53a351ec6050ce23d1caa14c0f37975

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.e AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.c - t1.d AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.d AS col_5, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_6, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_7
---- hash rowsort
30 tuples hashing to 95e81aefa1435b01ca795dd01fa37055

-STATEMENT MATCH (t1:t1) RETURN t1.c - t1.d AS col_1, t1.a - t1.b AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3
---- hash rowsort
30 tuples hashing to 4ee92dc4498bf0bde48f9fe510e0eefb

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR NOT t1.b IS Null OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.c - t1.d AS col_3, t1.a AS col_4, t1.b - t1.c AS col_5, t1.a + t1.b * 2 AS col_6, t1.d - t1.e AS col_7
---- hash rowsort
27 tuples hashing to c5a503f5c0f1577e8fa78c52b97736fb

-STATEMENT MATCH (t1:t1) RETURN t1.a AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, abs(t1.a) AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4
---- hash rowsort
30 tuples hashing to 89a3078351b48f3f0a02f66263c70fca

-STATEMENT MATCH (t1:t1) WHERE NOT t1.b IS Null OR (t1.e > t1.c OR t1.e < t1.d) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN abs(t1.b - t1.c) AS col_1, t1.c - t1.d AS col_2, t1.c AS col_3, t1.d - t1.e AS col_4, abs(t1.a) AS col_5, t1.b - t1.c AS col_6
---- hash rowsort
29 tuples hashing to 5e517b9dfca72106d8a226a8513ad186

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1
---- hash rowsort
30 tuples hashing to fd6d6825820cf653aceb2d72af4a5983

-STATEMENT MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 RETURN t1.c - t1.d AS col_1
---- hash rowsort
30 tuples hashing to 5597b8fa34613aadc270053ea54637e5

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR NOT t1.b IS Null RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.b AS col_2, t1.a - t1.b AS col_3, t1.e AS col_4, t1.c AS col_5, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_6
---- hash rowsort
27 tuples hashing to 86497e82dae5464fd3ffbb6a17945399

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.a > t1.b RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.d AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.a + t1.b * 2 AS col_4, t1.e AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_6
---- hash rowsort
25 tuples hashing to 352a74ab89b39257e03af042d19053ca

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.d AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2
---- hash rowsort
26 tuples hashing to f898ac0e4bfdd5488091e2b7479fd259

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN abs(t1.b - t1.c) AS col_1, t1.e AS col_2, t1.b AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_6
---- hash rowsort
25 tuples hashing to 8b990284f465e87fb0bacddac6be6b32

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.e AS col_2, t1.b - t1.c AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4
---- hash rowsort
21 tuples hashing to 70fb8991b94738915d1b89be5807c89d

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.c > t1.d OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.e > t1.a AND t1.e < t1.b) RETURN t1.c - t1.d AS col_1, t1.d AS col_2, t1.a - t1.b AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4
---- hash rowsort
28 tuples hashing to 009272768053fb392328a37e37af1380

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a - t1.b AS col_1
---- hash rowsort
15 tuples hashing to 0462df69a372162bd2326b32559acd24

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR t1.a IS Null RETURN t1.d AS col_1, t1.a - t1.b AS col_2, t1.c - t1.d AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.e AS col_5, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_6
---- hash rowsort
5 tuples hashing to 0b840c9d2f6e0d2416bb58c87065049d

-STATEMENT MATCH (t1:t1) RETURN t1.a AS col_1
---- hash rowsort
30 tuples hashing to 9a6afb6b859fc856aafb6a7af11a38e4

-STATEMENT MATCH (t1:t1) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.a + t1.b * 2 AS col_2, abs(t1.a) AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, t1.d - t1.e AS col_5
---- hash rowsort
30 tuples hashing to 42cc720bde1b5dde4d745c8c50576a2a

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.a AS col_4, abs(t1.b - t1.c) AS col_5, abs(t1.a) AS col_6, t1.c - t1.d AS col_7
---- hash rowsort
15 tuples hashing to 48d8b2d1a06eb8b3706d975f7d0a211b

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.d - t1.e AS col_2, t1.c - t1.d AS col_3
---- hash rowsort
30 tuples hashing to 3c2e29c1a62828371d108fc2db0e9637

-STATEMENT MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a - t1.b AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, t1.d AS col_5, t1.c - t1.d AS col_6
---- hash rowsort
30 tuples hashing to f26f35b2777ee4f09e0e1e36a80f73df

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR t1.c > t1.d OR t1.a > t1.b RETURN t1.c AS col_1, t1.a + t1.b * 2 AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.c - t1.d AS col_4
---- hash rowsort
28 tuples hashing to e7ee87f5a21f10c5ba46c5523a4e3fc1

-STATEMENT MATCH (t1:t1) WHERE t1.a IS Null OR (t1.e > t1.a AND t1.e < t1.b) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.b - t1.c AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.c AS col_4, t1.e AS col_5, abs(t1.a) AS col_6, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_7
---- hash rowsort
5 tuples hashing to a6d02be344f2dcba4a1ee9ec438ac535

-STATEMENT MATCH (t1:t1) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.b - t1.c AS col_3, abs(t1.a) AS col_4, t1.a - t1.b AS col_5, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_6
---- hash rowsort
30 tuples hashing to 1d2c335944b2e1c4478b898ff81edaa1

-STATEMENT MATCH (t1:t1) RETURN t1.e AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.d AS col_3
---- hash rowsort
30 tuples hashing to 7ca206e4f35fd078b7c80aa48e621cc6

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.e AS col_4, t1.b - t1.c AS col_5, t1.d - t1.e AS col_6, abs(t1.a) AS col_7
---- hash rowsort
10 tuples hashing to 29806c31c20e32638f689ff9b0074bbc

-STATEMENT MATCH (t1:t1) WHERE t1.a IS Null AND t1.a > t1.b RETURN t1.d AS col_1, abs(t1.a) AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3
---- 0


-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.b - t1.c AS col_1, t1.c - t1.d AS col_2, t1.d AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_6
---- hash rowsort
10 tuples hashing to 1d97218927132ea6eeb68998798765dd

-STATEMENT MATCH (t1:t1) WHERE NOT t1.b IS Null OR t1.d > t1.e RETURN t1.a AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.b AS col_5
---- hash rowsort
27 tuples hashing to 951e266b40b8150f48baec623f0a686d

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.c > t1.d AND t1.a IS Null RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.b AS col_4, abs(t1.b - t1.c) AS col_5
---- 0


-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.e AS col_3
---- hash rowsort
30 tuples hashing to 1b021b42d846ed8372e5b8a64e4c4eae

-STATEMENT MATCH (t1:t1) RETURN t1.d AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.a AS col_3, t1.c AS col_4, t1.e AS col_5, t1.a + t1.b * 2 + t1.c * 3 AS col_6
---- hash rowsort
30 tuples hashing to e2fe87d1ca13d2214cfb68ebeb285fcc

-STATEMENT MATCH (t1:t1) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, abs(t1.a) AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4
---- hash rowsort
30 tuples hashing to 23d7b46770ede1fdc73ef30ac487ca75

-STATEMENT MATCH (t1:t1) RETURN t1.c - t1.d AS col_1, abs(t1.b - t1.c) AS col_2, t1.b AS col_3, abs(t1.a) AS col_4, t1.a AS col_5, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_6, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_7
---- hash rowsort
30 tuples hashing to 489a274fb7aeb39a8c02d774c5ae965b

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.e AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.a - t1.b AS col_4, t1.c - t1.d AS col_5, abs(t1.a) AS col_6
---- hash rowsort
2 tuples hashing to 949a25aceb3132e83fa3405310372da7

-STATEMENT MATCH (t1:t1) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1
---- hash rowsort
30 tuples hashing to 74b4b1d1e049d57b3610b70a67a1c32f

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 AS col_1, t1.c - t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5
---- hash rowsort
19 tuples hashing to 9c84288c31e030804a75653e160c1629

-STATEMENT MATCH (t1:t1) RETURN t1.e AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2
---- hash rowsort
30 tuples hashing to 5576a114b22ef7b73225f14861d7f4b0

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.a IS Null RETURN t1.c - t1.d AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.a AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5
---- hash rowsort
2 tuples hashing to 7ee51b913f9e7c82957dd58131b1b053

-STATEMENT MATCH (t1:t1) RETURN t1.d AS col_1, t1.c - t1.d AS col_2
---- hash rowsort
30 tuples hashing to 91395206c5a9ae2e3ba90eaaf9fbcad3

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND t1.a > t1.b AND coalesce(t1.a) <> 0 RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a AS col_2
---- hash rowsort
6 tuples hashing to d8e53c3de9f066cbd7c55b75853ee395

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.e AS col_3, t1.a + t1.b * 2 AS col_4, t1.c - t1.d AS col_5, t1.a AS col_6, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_7
---- hash rowsort
30 tuples hashing to 61699457c79288b3b884493fcc1312c0

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.e AS col_1, t1.d - t1.e AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.c AS col_4, t1.d AS col_5, t1.a - t1.b AS col_6, abs(t1.b - t1.c) AS col_7
---- hash rowsort
2 tuples hashing to 524440442f030d3deaeba575dcdfa474

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN abs(t1.b - t1.c) AS col_1, t1.d AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3
---- hash rowsort
10 tuples hashing to af433230b7fed89ab6f38404c00cf2a1

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR t1.a IS Null OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.c - t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.e AS col_4
---- hash rowsort
26 tuples hashing to 0fd633d46f41356e377d904b1d7e08ae

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN abs(t1.b - t1.c) AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.b - t1.c AS col_3, t1.a + t1.b * 2 AS col_4
---- 1
1|107|-1|317

-STATEMENT MATCH (t1:t1) WHERE NOT t1.b IS Null RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5
---- hash rowsort
27 tuples hashing to 195edd4caee8c35ebcd1a306b026059b

-STATEMENT MATCH (t1:t1) RETURN t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.b - t1.c AS col_3, t1.a - t1.b AS col_4
---- hash rowsort
30 tuples hashing to bbfd0916ec1ab98a214daa18adf03788

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND t1.d > t1.e RETURN abs(t1.a) AS col_1
---- hash rowsort
11 tuples hashing to 91e1a4121a8a99224ec3880f8f82538f

-STATEMENT MATCH (t1:t1) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.a - t1.b AS col_4, t1.c - t1.d AS col_5
---- hash rowsort
30 tuples hashing to 0048abc82bda6100f7d7ca07351af44a

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, abs(t1.b - t1.c) AS col_2, t1.d - t1.e AS col_3, abs(t1.a) AS col_4, t1.a AS col_5, t1.e AS col_6, t1.c - t1.d AS col_7
---- hash rowsort
30 tuples hashing to a35e63886c480ff2953ef9c44c877404

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.e > t1.c OR t1.e < t1.d) RETURN t1.c AS col_1
---- 7
125
161
187
214
215
224
231

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR t1.a IS Null OR NOT t1.b IS Null RETURN t1.a + t1.b * 2 AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.c AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, abs(t1.b - t1.c) AS col_6, t1.e AS col_7
---- hash rowsort
27 tuples hashing to 1a6eadef60af9a484ef356b4dbe18111

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.d - t1.e AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4
---- hash rowsort
30 tuples hashing to d5410dc1707e456075f961d75c8373e3

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.b > t1.c RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, abs(t1.b - t1.c) AS col_3, t1.a + t1.b * 2 AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_6
---- hash rowsort
13 tuples hashing to f52714b3be854536a6021f8399270892

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1
---- hash rowsort
15 tuples hashing to c1ad7b5831d238db75f543578abe9acd

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) RETURN t1.d - t1.e AS col_1
---- 3
-2
1
2

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.b AS col_1, t1.c - t1.d AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3
---- hash rowsort
17 tuples hashing to 3f10f53291c4c4332957f5fbb29105f3

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.e > t1.a AND t1.e < t1.b) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.d - t1.e AS col_1, t1.d AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3
---- 0


-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND NOT (t1.d >= 110 AND t1.d <= 150) AND t1.d > t1.e RETURN t1.d - t1.e AS col_1, abs(t1.b - t1.c) AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, abs(t1.a) AS col_5
---- hash rowsort
4 tuples hashing to 3cde23794ae5812c647b191dce114ef9

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.b AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5
---- hash rowsort
3 tuples hashing to 0bae48d0d8201f75d405f24f2d341639

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR t1.a IS Null RETURN t1.d AS col_1, t1.d - t1.e AS col_2, t1.a AS col_3, t1.b - t1.c AS col_4, t1.e AS col_5
---- hash rowsort
22 tuples hashing to 01e20b55ecbd46ade3cff5a56486c879

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3
---- hash rowsort
30 tuples hashing to caf4160422e6c04f33f5dee76a5ee6ba

-STATEMENT MATCH (t1:t1) WHERE t1.a IS Null AND t1.b > t1.c RETURN t1.d - t1.e AS col_1, t1.d AS col_2, t1.c AS col_3, t1.b - t1.c AS col_4
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN abs(t1.a) AS col_1, t1.a + t1.b * 2 AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.c - t1.d AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5
---- hash rowsort
15 tuples hashing to 0e1d3f091ae7618b475700ba7f021e9a

-STATEMENT MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, abs(t1.b - t1.c) AS col_3
---- hash rowsort
30 tuples hashing to fe561dee28440461c7db2b4bbe966e6d

-STATEMENT MATCH (t1:t1) RETURN t1.c - t1.d AS col_1
---- hash rowsort
30 tuples hashing to 5597b8fa34613aadc270053ea54637e5

-STATEMENT MATCH (t1:t1) WHERE NOT t1.b IS Null RETURN abs(t1.a) AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.a + t1.b * 2 AS col_3, t1.c AS col_4, t1.d AS col_5, t1.a - t1.b AS col_6, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_7
---- hash rowsort
27 tuples hashing to e3666393489dac8e3e03edb06718f10f

-STATEMENT MATCH (t1:t1) RETURN t1.a AS col_1, t1.a - t1.b AS col_2, t1.a + t1.b * 2 AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5
---- hash rowsort
30 tuples hashing to 2f3a15a8e97ebcf855a829bc06b4b32c

-STATEMENT MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 RETURN t1.d AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2
---- hash rowsort
30 tuples hashing to b3bf42b26da3b06aa3b50178db6c5697

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND NOT t1.b IS Null RETURN t1.a AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.d - t1.e AS col_3
---- hash rowsort
11 tuples hashing to 3a32b8d5a3ecfe962caef1637978eb7e

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.b AS col_1, t1.d - t1.e AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.d AS col_4, t1.a AS col_5
---- hash rowsort
2 tuples hashing to de89b94580a889b31f615d74825bf75b

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR t1.b > t1.c OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.c - t1.d AS col_3, abs(t1.b - t1.c) AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, t1.e AS col_6
---- hash rowsort
27 tuples hashing to 5387d6edebdd989ccaefbb09e17a4489

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR t1.d > t1.e OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.d AS col_1, t1.b - t1.c AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, abs(t1.a) AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, t1.b AS col_6
---- hash rowsort
16 tuples hashing to 00c6ced20f2eeff721db25271eae6fb3

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 AS col_1
---- 2
317
385

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.c AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, abs(t1.b - t1.c) AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5
---- hash rowsort
16 tuples hashing to 53ec7c69fa7066b8d13cba3190a01566

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.a > t1.b RETURN t1.d AS col_1, t1.a - t1.b AS col_2, t1.b - t1.c AS col_3, t1.c AS col_4
---- hash rowsort
8 tuples hashing to f82ab87aa91c92197efafacd537934bc

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.e AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3
---- hash rowsort
30 tuples hashing to f0edfb3eeaf25d63fa068b4d1ee607fc

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR t1.b > t1.c RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.c AS col_2, abs(t1.a) AS col_3, abs(t1.b - t1.c) AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5
---- hash rowsort
26 tuples hashing to 32e82da0c738e8e4864716e5bce71c70

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b RETURN abs(t1.b - t1.c) AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2
---- hash rowsort
17 tuples hashing to 17af39f9188adb8ce97fb72e6c8356ee

-STATEMENT MATCH (t1:t1) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1
---- hash rowsort
30 tuples hashing to 9589cc1f14474dd0aa42c579d2bfedb1

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.c - t1.d AS col_2
---- hash rowsort
13 tuples hashing to 7423c13b5fcb65e9953181f0cea5a006

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.e AS col_3
---- hash rowsort
15 tuples hashing to 39128834abd158abf862c122ca26779b

-STATEMENT MATCH (t1:t1) WHERE NOT t1.b IS Null OR t1.a > t1.b RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, abs(t1.b - t1.c) AS col_2
---- hash rowsort
27 tuples hashing to 24f085b29e652f1489e82b92cd2a3f18

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND t1.b > t1.c AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a - t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.a + t1.b * 2 AS col_3
---- 1
-3|2878|579

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND t1.a > t1.b AND t1.b > t1.c RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.d - t1.e AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5, t1.a - t1.b AS col_6
---- 1
555|333|3|2323|1391|2

-STATEMENT MATCH (t1:t1) RETURN abs(t1.b - t1.c) AS col_1
---- hash rowsort
30 tuples hashing to c289bcde2e1a495d6cc09dde069c6c87

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.e > t1.c OR t1.e < t1.d) RETURN abs(t1.a) AS col_1, t1.d - t1.e AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3
---- hash rowsort
7 tuples hashing to be9475424320a9b7ee7d2633300645a8

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.b AS col_1, t1.a + t1.b * 2 AS col_2, t1.c - t1.d AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5, abs(t1.a) AS col_6
---- hash rowsort
25 tuples hashing to f046070b061166d9a9445ac1be175e05

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR t1.b > t1.c RETURN t1.e AS col_1, t1.b AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3
---- hash rowsort
14 tuples hashing to 4415e43a6216d494659df3c3af052083

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR (t1.e > t1.c OR t1.e < t1.d) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.d - t1.e AS col_2, abs(t1.a) AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_6
---- hash rowsort
22 tuples hashing to 6f0120b9468fa22b78b4075616d92a65

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.d - t1.e AS col_1, t1.a - t1.b AS col_2, t1.b AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.a + t1.b * 2 AS col_5, t1.b - t1.c AS col_6, t1.d AS col_7
---- hash rowsort
19 tuples hashing to ad299b1f694938a839c76d63aeea1f80

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.b > t1.c RETURN abs(t1.a) AS col_1, abs(t1.b - t1.c) AS col_2, t1.c - t1.d AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5
---- hash rowsort
2 tuples hashing to 5bdbcd20f9b8b742c3afd186710bd1ba

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND t1.c > t1.d RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, abs(t1.b - t1.c) AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.a + t1.b * 2 AS col_5, t1.a - t1.b AS col_6
---- hash rowsort
8 tuples hashing to a4d0a38ede3fe0f188f7321970a8f4dd

-STATEMENT MATCH (t1:t1) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, abs(t1.b - t1.c) AS col_2, t1.e AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, t1.b - t1.c AS col_5
---- hash rowsort
30 tuples hashing to 8397a0903e15704ffd79e739a314f51b

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.a IS Null AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a AS col_1, t1.c AS col_2
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2
---- hash rowsort
13 tuples hashing to 663683e4f7954e2f02d662e397617a1a

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.b - t1.c AS col_2, t1.b AS col_3, t1.a AS col_4, t1.c AS col_5, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_6, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_7
---- hash rowsort
30 tuples hashing to d8d3fdc7da9f9940577c907ddc46ffce

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN abs(t1.b - t1.c) AS col_1, t1.d AS col_2, t1.c - t1.d AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.b - t1.c AS col_5
---- hash rowsort
2 tuples hashing to 952ec46f635a8a1bfe40ea39b30f4ec8

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1
---- hash rowsort
18 tuples hashing to ed081fa5a86710d0e9371bd21e57b60e

-STATEMENT MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 RETURN t1.b - t1.c AS col_1, t1.c - t1.d AS col_2, t1.d - t1.e AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.d AS col_5
---- hash rowsort
30 tuples hashing to 3c56becf91b5255ea828187ff5b098f4

-STATEMENT MATCH (t1:t1) RETURN t1.b AS col_1, t1.e AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.d - t1.e AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_6
---- hash rowsort
30 tuples hashing to f72f9804cce2a5a1e0ec51599a154fe3

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND t1.d > t1.e AND coalesce(t1.a) <> 0 RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.c AS col_2, t1.c - t1.d AS col_3, t1.a - t1.b AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_6, t1.a + t1.b * 2 + t1.c * 3 AS col_7
---- hash rowsort
7 tuples hashing to e5f10ba8d31c39afeed33abfce4615f4

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e > t1.a AND t1.e < t1.b) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.b AS col_2, t1.a + t1.b * 2 AS col_3, abs(t1.b - t1.c) AS col_4, abs(t1.a) AS col_5, t1.b - t1.c AS col_6, t1.d AS col_7
---- hash rowsort
2 tuples hashing to ea291a160f11695640cfade2795f38fd

-STATEMENT MATCH (t1:t1) WHERE NOT t1.b IS Null AND t1.d > t1.e AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a AS col_1
---- 1
127

-STATEMENT MATCH (t1:t1) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.d - t1.e AS col_2, t1.b - t1.c AS col_3, t1.a AS col_4, t1.c AS col_5, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_6
---- hash rowsort
30 tuples hashing to 86a4dc3efb363f1f9683ae2a20b3ee22

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR NOT t1.b IS Null OR t1.a > t1.b RETURN t1.d - t1.e AS col_1, abs(t1.b - t1.c) AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.a - t1.b AS col_4
---- hash rowsort
27 tuples hashing to aca58d046c3974c5452267788f36253d

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.e > t1.c OR t1.e < t1.d) OR coalesce(t1.a) <> 0 RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.d AS col_3
---- hash rowsort
30 tuples hashing to 831ec57d0eab9076adedbe5a7b29e5bf

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a - t1.b AS col_1
---- 3
-3
-3
-4

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a - t1.b AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.a AS col_3, t1.a + t1.b * 2 AS col_4, t1.e AS col_5
---- hash rowsort
26 tuples hashing to 8de54a5c9493f4626950467d68cfefe2

-STATEMENT MATCH (t1:t1) RETURN t1.c AS col_1, t1.c - t1.d AS col_2, t1.a AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4
---- hash rowsort
30 tuples hashing to 7cfb43e744f8e78165f7b2b7b9e4751a

-STATEMENT MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, t1.d AS col_5
---- hash rowsort
30 tuples hashing to c76015113477b90a604969958de72e28

-STATEMENT MATCH (t1:t1) RETURN t1.e AS col_1, t1.b AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.c - t1.d AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5
---- hash rowsort
30 tuples hashing to 0e9e96a0d093e7424d1a880b95bfdf56

-STATEMENT MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 AND (t1.e > t1.c OR t1.e < t1.d) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.a AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, abs(t1.b - t1.c) AS col_5, t1.d AS col_6
---- hash rowsort
21 tuples hashing to a9e3be887c4114d3580e4feb0f2d4fcc

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND t1.a > t1.b AND t1.a IS Null RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1
---- 0


-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR t1.a > t1.b RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.d AS col_4
---- hash rowsort
27 tuples hashing to 978db612dff384a225a87254a55c893f

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, t1.e AS col_5, t1.b - t1.c AS col_6, t1.c - t1.d AS col_7
---- hash rowsort
27 tuples hashing to b3ccccf01d4d70c48a2ac5cedbde340a

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND coalesce(t1.a) <> 0 AND (t1.e > t1.c OR t1.e < t1.d) RETURN abs(t1.b - t1.c) AS col_1, t1.b - t1.c AS col_2
---- hash rowsort
13 tuples hashing to 6155648a9fcd972b0fc067d251cc8e28

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.b - t1.c AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2
---- hash rowsort
15 tuples hashing to 9171c6c1e8116c8bbc186b02e5f5d53a

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a - t1.b AS col_1, t1.d - t1.e AS col_2, t1.b - t1.c AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_6
---- hash rowsort
26 tuples hashing to 7e476544120b4f25bbc20d8a66a7ca25

-STATEMENT MATCH (t1:t1) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.b - t1.c AS col_2, t1.d AS col_3, abs(t1.b - t1.c) AS col_4, t1.e AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_6
---- hash rowsort
30 tuples hashing to cabb6bcf768ba77f886f0b24483199ff

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a + t1.b * 2 AS col_1
---- 3
579
666
743

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.c AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4
---- hash rowsort
5 tuples hashing to 8b8de03297a4e9b601746a08dccab3da

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.a > t1.b RETURN t1.a AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, abs(t1.b - t1.c) AS col_3, t1.c - t1.d AS col_4
---- hash rowsort
17 tuples hashing to 059bff8962702d7f8ec171a2b6710523

-STATEMENT MATCH (t1:t1) WHERE NOT t1.b IS Null OR (t1.e > t1.a AND t1.e < t1.b) OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.c - t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.d - t1.e AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, t1.b - t1.c AS col_5, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_6
---- hash rowsort
28 tuples hashing to dc3fa84cb08309cd0e59105bb6687bb2

-STATEMENT MATCH (t1:t1) RETURN t1.c - t1.d AS col_1, t1.a AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.a - t1.b AS col_4
---- hash rowsort
30 tuples hashing to fc3ff1ff51c829b0bd8bcc949814b62f

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.a IS Null OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR t1.a > t1.b RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.e AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5
---- hash rowsort
24 tuples hashing to 3fb73a6642c453dc019d87cb69d8ce65

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND coalesce(t1.a) <> 0 AND t1.a > t1.b RETURN t1.e AS col_1
---- 5
132
173
180
189
210

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.d - t1.e AS col_1, t1.a AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.b - t1.c AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5, t1.c AS col_6
---- hash rowsort
8 tuples hashing to 3a6088239fe8d4db13bd3789cf9ed7da

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR coalesce(t1.a) <> 0 RETURN abs(t1.a) AS col_1, t1.d AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.e AS col_4
---- hash rowsort
30 tuples hashing to f4530e16c6d59dfaeee60435bf008b02

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.a > t1.b RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3
---- hash rowsort
22 tuples hashing to affa3f7c8cca946ae71f450ca6822fc1

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a AS col_1, t1.e AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, abs(t1.b - t1.c) AS col_4
---- hash rowsort
26 tuples hashing to 0eed9ac4c30390c199e62f58365199eb

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.d - t1.e AS col_1, t1.c AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5
---- hash rowsort
8 tuples hashing to a24ad9a2815293e785c73b1daaa0e8ad

-STATEMENT MATCH (t1:t1) RETURN t1.b AS col_1, t1.c - t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3
---- hash rowsort
30 tuples hashing to b4c390cf4b2cfb24ddd6e3f132c39aaa

-STATEMENT MATCH (t1:t1) RETURN t1.a AS col_1, t1.a + t1.b * 2 AS col_2, t1.a - t1.b AS col_3
---- hash rowsort
30 tuples hashing to 49d12b03e799cc0ee6e76a2a9f7c33a8

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.d > t1.e RETURN t1.e AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, abs(t1.a) AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5
---- hash rowsort
20 tuples hashing to df3961211ec3a646a12da616ad3fadc0

-STATEMENT MATCH (t1:t1) RETURN t1.c - t1.d AS col_1, t1.a - t1.b AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.b - t1.c AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5
---- hash rowsort
30 tuples hashing to bf7cb204030abc772d574623b4b8cfbf

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND t1.a > t1.b AND t1.a IS Null RETURN t1.d - t1.e AS col_1, t1.b - t1.c AS col_2, t1.c AS col_3
---- 0


-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1
---- hash rowsort
26 tuples hashing to 2aaf5920e7c6cb16651a8794e8a1e31a

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.a + t1.b * 2 AS col_2
---- 2
107|317
127|385

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.a IS Null AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1
---- 1


-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR t1.a IS Null OR NOT t1.b IS Null RETURN t1.b - t1.c AS col_1, t1.e AS col_2, t1.c - t1.d AS col_3, t1.a - t1.b AS col_4
---- hash rowsort
27 tuples hashing to 7e30de55cc8c8fecffab160dec37f6cf

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR t1.a IS Null OR t1.b > t1.c RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, abs(t1.b - t1.c) AS col_2, t1.d AS col_3
---- hash rowsort
26 tuples hashing to 63edb99176cba2defed12c703539f05a

-STATEMENT MATCH (t1:t1) WHERE NOT t1.b IS Null OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.d AS col_2, t1.a - t1.b AS col_3, abs(t1.b - t1.c) AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5
---- hash rowsort
29 tuples hashing to 63be192e3efa764f76ad645bbc0072f1

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.d AS col_1, t1.d - t1.e AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4
---- hash rowsort
23 tuples hashing to a5b6a8f716fa56ad6172f74a7ea0e544

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.a - t1.b AS col_3, t1.c AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_6, abs(t1.b - t1.c) AS col_7
---- hash rowsort
30 tuples hashing to d4be2584de61345eb22f847ae3919f39

-STATEMENT MATCH (t1:t1) WHERE t1.a IS Null RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, abs(t1.b - t1.c) AS col_2
---- 2
555|1
555|2

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a + t1.b * 2 AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.b - t1.c AS col_5, t1.a AS col_6
---- hash rowsort
17 tuples hashing to 144faf71d17f02b59e87b9d4f0f2d960

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN abs(t1.a) AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.e AS col_3, abs(t1.b - t1.c) AS col_4, t1.b AS col_5, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_6
---- hash rowsort
23 tuples hashing to 8d59f2064f6a4d8a9932bb0487115ad1

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3
---- hash rowsort
13 tuples hashing to 0a7270cbb622612fe7d21399b291ea34

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND coalesce(t1.a) <> 0 AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.c AS col_1, t1.b AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_6, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_7
---- 1
106|105|635|1612|333|0|333

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.b > t1.c AND NOT t1.b IS Null RETURN t1.c - t1.d AS col_1, t1.a - t1.b AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, abs(t1.b - t1.c) AS col_5, t1.d AS col_6, t1.a + t1.b * 2 + t1.c * 3 AS col_7
---- hash rowsort
6 tuples hashing to 292d19ab365220a4c3e6c8d933cded12

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.d > t1.e RETURN t1.a - t1.b AS col_1, t1.b AS col_2, t1.a + t1.b * 2 AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, t1.d - t1.e AS col_5, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_6
---- hash rowsort
12 tuples hashing to 3e177272e34b49de0d456303ee9c5a3e

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2
---- hash rowsort
13 tuples hashing to bbcf40e5d9193aabcea50a283e717c13

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.d > t1.e OR t1.a > t1.b RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, abs(t1.a) AS col_4, t1.b AS col_5, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_6
---- hash rowsort
23 tuples hashing to 36061e61f6fb65be552999cbc8a62109

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a - t1.b AS col_2, t1.d AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.c AS col_5, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_6, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_7
---- hash rowsort
3 tuples hashing to c52bd0f2d82976eab5cfb785d671da7e

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a + t1.b * 2 AS col_2, t1.d - t1.e AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, abs(t1.a) AS col_5, t1.a AS col_6
---- hash rowsort
30 tuples hashing to 4a8f3f5cc7acabba999f282a682e4df3

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2
---- hash rowsort
21 tuples hashing to 9d378e63f24bd55daca7add102ebfade

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.a AS col_2, abs(t1.b - t1.c) AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4
---- hash rowsort
21 tuples hashing to fd9f16c948283e1fe91f2c77bad90bee

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR coalesce(t1.a) <> 0 RETURN abs(t1.b - t1.c) AS col_1, abs(t1.a) AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.c - t1.d AS col_5
---- hash rowsort
30 tuples hashing to 2ebddea9b425cce206f5389f0b39fd13

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND NOT t1.b IS Null AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.b AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.d AS col_4, t1.b - t1.c AS col_5, abs(t1.b - t1.c) AS col_6, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_7
---- hash rowsort
3 tuples hashing to 6b47d7772558a73fe76fe3782ca48346

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR t1.a IS Null RETURN t1.a + t1.b * 2 AS col_1, abs(t1.b - t1.c) AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.a - t1.b AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5
---- hash rowsort
5 tuples hashing to 4c45e9b97d8ff2b66704f4fbce35bb07

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.d > t1.e RETURN t1.a AS col_1, t1.b - t1.c AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, t1.d - t1.e AS col_5, t1.d AS col_6
---- hash rowsort
12 tuples hashing to 880fbd81a41a9c85a5eae4cce9eb38a7

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR t1.b > t1.c RETURN t1.d AS col_1
---- hash rowsort
22 tuples hashing to 37894839dede35f650b00286a84a36c1

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.d - t1.e AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.a + t1.b * 2 AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, t1.c - t1.d AS col_5, t1.c AS col_6, t1.a AS col_7
---- hash rowsort
10 tuples hashing to dc257c0ed350a49a5fc2d03ed4017bce

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR t1.a > t1.b RETURN t1.e AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.a + t1.b * 2 AS col_3, t1.d - t1.e AS col_4, abs(t1.a) AS col_5, t1.a + t1.b * 2 + t1.c * 3 AS col_6
---- hash rowsort
24 tuples hashing to 9bef3a2da8ca8adaf6ac27a55656e1d4

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.e > t1.c OR t1.e < t1.d) AND t1.b > t1.c RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.b - t1.c AS col_3, t1.e AS col_4, abs(t1.b - t1.c) AS col_5, t1.c - t1.d AS col_6, t1.b AS col_7
---- 1
760|127|4|126|4|-3|129

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.b > t1.c RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.c AS col_2, abs(t1.a) AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5
---- hash rowsort
5 tuples hashing to a319c940b7c0dad8385a5d2d235e0ac9

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND coalesce(t1.a) <> 0 RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3
---- hash rowsort
11 tuples hashing to cccc2fc956ba31f21063f4ed5504c7d5

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.e > t1.a AND t1.e < t1.b) RETURN t1.e AS col_1, t1.d - t1.e AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.a - t1.b AS col_4, t1.b - t1.c AS col_5, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_6
---- hash rowsort
18 tuples hashing to 43e44193d5e2e8bb305b0af16302e4eb

-STATEMENT MATCH (t1:t1) WHERE t1.a IS Null OR t1.b > t1.c OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.a - t1.b AS col_2, t1.d - t1.e AS col_3
---- hash rowsort
23 tuples hashing to 59bf333ae0b98d58bcae7a31cd5557cc

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1
---- hash rowsort
21 tuples hashing to 558d17aef1b84bc5cb6d000f08146d80

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR coalesce(t1.a) <> 0 RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.e AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3
---- hash rowsort
30 tuples hashing to bf0b1691880199579089ce2f5732550a

-STATEMENT MATCH (t1:t1) RETURN t1.c - t1.d AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.d AS col_3, t1.a - t1.b AS col_4
---- hash rowsort
30 tuples hashing to 2e71f1d3ef553efa731e74493491b43e

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.a - t1.b AS col_2, t1.d - t1.e AS col_3, t1.c AS col_4, t1.a + t1.b * 2 AS col_5
---- hash rowsort
8 tuples hashing to a5c45806a190a3761cd26e77f9d1b87d

-STATEMENT MATCH (t1:t1) WHERE t1.a IS Null RETURN t1.a - t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.c - t1.d AS col_3, t1.b - t1.c AS col_4, abs(t1.a) AS col_5, t1.e AS col_6
---- hash rowsort
2 tuples hashing to c2341ef27ca149884884ab6c568fa923

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.d AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2
---- hash rowsort
12 tuples hashing to 39f21bf43fd60cb6f414344a0ebf8c6e

-STATEMENT MATCH (t1:t1) RETURN t1.b AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.a + t1.b * 2 AS col_3
---- hash rowsort
30 tuples hashing to 7bc137f1d51fe79facd9ee45bf275bf8

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.a IS Null RETURN t1.b AS col_1
---- 2
112
206

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.c - t1.d AS col_1, abs(t1.a) AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5
---- hash rowsort
30 tuples hashing to f04293c115149822ce94d0701e876523

-STATEMENT MATCH (t1:t1) RETURN abs(t1.b - t1.c) AS col_1, t1.a - t1.b AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, abs(t1.a) AS col_5, t1.b - t1.c AS col_6
---- hash rowsort
30 tuples hashing to d675a861445bf6449191f78a0be4d636

-STATEMENT MATCH (t1:t1) RETURN t1.d AS col_1, t1.c AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3
---- hash rowsort
30 tuples hashing to 4032b38fe56b3a0b8c9306a891b2213d

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1
---- 3
382
440
490

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, abs(t1.b - t1.c) AS col_2, t1.a + t1.b * 2 AS col_3
---- hash rowsort
15 tuples hashing to 3729b9a2cec19ed659ec404c99fef704

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.d AS col_1
---- 8
133
136
140
183
196
226



-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.c - t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3
---- hash rowsort
30 tuples hashing to 4b77b8e5b0c1604194e4a62a152c243b

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, abs(t1.b - t1.c) AS col_2, t1.a + t1.b * 2 AS col_3, t1.d - t1.e AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5
---- hash rowsort
13 tuples hashing to 7d1010ffd2bac09eacbd2c9fba7ac5e3

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a - t1.b AS col_1, abs(t1.b - t1.c) AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3
---- hash rowsort
8 tuples hashing to 06f69cfca8d245108f238d4c1bc772da

-STATEMENT MATCH (t1:t1) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1
---- hash rowsort
30 tuples hashing to 74b4b1d1e049d57b3610b70a67a1c32f

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR t1.d > t1.e OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.a AS col_4
---- hash rowsort
24 tuples hashing to 0a694e460dfc951a33a620b695902bd4

-STATEMENT MATCH (t1:t1) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1
---- hash rowsort
30 tuples hashing to 62634e04a17da0e006feac1d867155ac

-STATEMENT MATCH (t1:t1) WHERE t1.a IS Null AND coalesce(t1.a) <> 0 AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, abs(t1.a) AS col_2, t1.c AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, t1.e AS col_5, t1.a AS col_6, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_7
---- 0


-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.d > t1.e RETURN t1.c - t1.d AS col_1, t1.b - t1.c AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.c AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_6
---- hash rowsort
3 tuples hashing to 0863cee9de2d56270775813a3a17b7e5

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, abs(t1.a) AS col_2, t1.a - t1.b AS col_3, t1.a + t1.b * 2 AS col_4, t1.b AS col_5, t1.c - t1.d AS col_6
---- hash rowsort
8 tuples hashing to 94f74078907e78ef572fa0e510484e77

-STATEMENT MATCH (t1:t1) RETURN t1.c - t1.d AS col_1, t1.e AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.c AS col_4, t1.a AS col_5, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_6
---- hash rowsort
30 tuples hashing to 624e1992ceabc09658eb0d5c4c493913

-STATEMENT MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 OR t1.b > t1.c OR t1.a > t1.b RETURN t1.d AS col_1, t1.d - t1.e AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, abs(t1.a) AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5, t1.a + t1.b * 2 AS col_6, t1.b AS col_7
---- hash rowsort
30 tuples hashing to c3a28a29943cda0b0369096bc4217587

-STATEMENT MATCH (t1:t1) RETURN t1.d AS col_1, t1.c AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, abs(t1.a) AS col_5, t1.e AS col_6
---- hash rowsort
30 tuples hashing to 5654e95b1947f195d63ec22ce973e453

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.e > t1.a AND t1.e < t1.b) OR NOT t1.b IS Null RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.e AS col_3, t1.d AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5
---- hash rowsort
28 tuples hashing to bd275a415055d7f30cd2fe981b1ba355

-STATEMENT MATCH (t1:t1) RETURN t1.d AS col_1, t1.e AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, abs(t1.a) AS col_4, t1.c - t1.d AS col_5
---- hash rowsort
30 tuples hashing to d2a802f554e72ad9dba374c727edf3f0

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.b - t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.c AS col_3, t1.d AS col_4
---- hash rowsort
17 tuples hashing to 6523173f866be3a379005fdf32d3c5fb

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.e AS col_1, t1.a + t1.b * 2 AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.a - t1.b AS col_5, abs(t1.a) AS col_6, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_7
---- hash rowsort
30 tuples hashing to c3150ef8bcd2ba7d6850a2e90e8429d2

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR t1.a IS Null OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.c - t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2
---- hash rowsort
26 tuples hashing to d1831b90746819624b83ad192394b1a8

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND t1.d > t1.e AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.e AS col_1, t1.d AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_6
---- hash rowsort
4 tuples hashing to b2cc54a61a6f44d8ab1e65618acaa745

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 AND t1.c > t1.d RETURN t1.d AS col_1, t1.e AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, abs(t1.b - t1.c) AS col_6
---- hash rowsort
13 tuples hashing to aea9f3b24ac690b7ca61dde6e38d4087

-STATEMENT MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1
---- hash rowsort
30 tuples hashing to 445b0172de37f3ca0ed777000309cef8

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, abs(t1.a) AS col_4, t1.d - t1.e AS col_5, t1.b - t1.c AS col_6, t1.a AS col_7
---- hash rowsort
8 tuples hashing to dfa264954dc45c28601ad369754a1a9c

-STATEMENT MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 RETURN t1.b - t1.c AS col_1, abs(t1.b - t1.c) AS col_2, t1.a - t1.b AS col_3
---- hash rowsort
30 tuples hashing to b695930cba779990506825371a4cb6f0

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.d > t1.e RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, abs(t1.b - t1.c) AS col_2, t1.c AS col_3, t1.b AS col_4, t1.a - t1.b AS col_5
---- hash rowsort
4 tuples hashing to f36747a922a64a45b6021838f71a7404

-STATEMENT MATCH (t1:t1) WHERE t1.a IS Null OR coalesce(t1.a) <> 0 OR t1.b > t1.c RETURN abs(t1.b - t1.c) AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.e AS col_3, t1.b - t1.c AS col_4
---- hash rowsort
30 tuples hashing to a66e96aaa5e2333eada2f94e14e11d19

-STATEMENT MATCH (t1:t1) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2
---- hash rowsort
30 tuples hashing to 786e944a9c358a8be09160a4fcdb486f

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e RETURN t1.c - t1.d AS col_1, t1.a - t1.b AS col_2
---- hash rowsort
11 tuples hashing to 6d5296bf2990e2c542cb932b111e58b0

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.e > t1.c OR t1.e < t1.d) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.c - t1.d AS col_3, t1.d - t1.e AS col_4, t1.a + t1.b * 2 AS col_5
---- hash rowsort
24 tuples hashing to cb847ba7dcd3eb1d2450a5b291047662

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a + t1.b * 2 AS col_3, t1.d - t1.e AS col_4, abs(t1.a) AS col_5, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_6, t1.d AS col_7
---- hash rowsort
29 tuples hashing to b8f26217f6d969f987d08b680bcca617

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND t1.d > t1.e RETURN t1.b AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5, t1.a AS col_6
---- hash rowsort
11 tuples hashing to 29bf444784eb00e33aec085b59443fcf

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2
---- hash rowsort
30 tuples hashing to 9dab3921e761fb6aeea4e154dd53814c

-STATEMENT MATCH (t1:t1) RETURN t1.e AS col_1, t1.c - t1.d AS col_2
---- hash rowsort
30 tuples hashing to 52b55195fd2cbf5a5724611d48a47b4d

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR t1.c > t1.d RETURN t1.d AS col_1
---- hash rowsort
18 tuples hashing to 10a54676f8fc9c6839ddbb6078163c29

-STATEMENT MATCH (t1:t1) RETURN abs(t1.a) AS col_1
---- hash rowsort
30 tuples hashing to 9a6afb6b859fc856aafb6a7af11a38e4

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND NOT (t1.d >= 110 AND t1.d <= 150) AND t1.d > t1.e RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.c AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.a AS col_5
---- 1
2728|14|184|364|182

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a AS col_1, t1.a - t1.b AS col_2
---- hash rowsort
26 tuples hashing to f6891d2a92880715cbd16ae236fa3074

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.d - t1.e AS col_2, t1.a AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5, t1.a - t1.b AS col_6, abs(t1.a) AS col_7
---- hash rowsort
30 tuples hashing to eea0fe282625350bef7f9b7814de13dd

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.d - t1.e AS col_1, t1.b - t1.c AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, abs(t1.a) AS col_5, t1.e AS col_6
---- hash rowsort
17 tuples hashing to 98908ff5846d6cb9e3fe38fc05b19861

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN abs(t1.a) AS col_1, t1.b AS col_2, abs(t1.b - t1.c) AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, t1.a + t1.b * 2 AS col_6
---- hash rowsort
8 tuples hashing to a25fc4aa4ed799e5420dff54e7cf50b8

-STATEMENT MATCH (t1:t1) RETURN t1.c - t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a AS col_3, t1.b - t1.c AS col_4
---- hash rowsort
30 tuples hashing to f8a8436cb97b5c9c4005e4a59e5a61b5

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND NOT t1.b IS Null RETURN t1.a + t1.b * 2 AS col_1, abs(t1.a) AS col_2, t1.b AS col_3, t1.c AS col_4, t1.d AS col_5, t1.a + t1.b * 2 + t1.c * 3 AS col_6
---- hash rowsort
6 tuples hashing to 94312feb4471e360fb2f52d49629c3c6

-STATEMENT MATCH (t1:t1) RETURN t1.d - t1.e AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3
---- hash rowsort
30 tuples hashing to ab7bf827555e6d006830cf421fb78d5a

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b RETURN t1.e AS col_1, t1.a - t1.b AS col_2, t1.b - t1.c AS col_3, t1.b AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5
---- hash rowsort
17 tuples hashing to 80d90d98b5254af7ad522b74fdb17712

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.d - t1.e AS col_2, t1.c - t1.d AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5, t1.a AS col_6
---- hash rowsort
15 tuples hashing to f8fb8a9cc87855aa28b5a54deac3d079

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a + t1.b * 2 AS col_1, abs(t1.a) AS col_2
---- hash rowsort
17 tuples hashing to 431dcbdecbfe1b6d6b282b2f49c172ac

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, abs(t1.a) AS col_4
---- hash rowsort
17 tuples hashing to abcb35b2a0d7934c081beb8189cf1b95

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.d - t1.e AS col_3, t1.a AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5
---- hash rowsort
26 tuples hashing to a796fca93745e24a441c4418f099ada2

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.b AS col_2, t1.a AS col_3, t1.d - t1.e AS col_4, t1.e AS col_5, t1.c AS col_6
---- hash rowsort
13 tuples hashing to 1b520683f74b5530a6d329a42c3b086c

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.b > t1.c RETURN t1.b AS col_1, t1.c AS col_2, abs(t1.b - t1.c) AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.a - t1.b AS col_5, t1.e AS col_6, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_7
---- hash rowsort
15 tuples hashing to 93621982a8d1f310b8a2c14097620bf2

-STATEMENT MATCH (t1:t1) WHERE t1.a IS Null AND (t1.e > t1.c OR t1.e < t1.d) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, abs(t1.a) AS col_3, t1.b - t1.c AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5
---- 1
|||-1|0

-STATEMENT MATCH (t1:t1) WHERE NOT t1.b IS Null AND t1.b > t1.c RETURN t1.a AS col_1, t1.c - t1.d AS col_2, t1.b AS col_3, t1.a + t1.b * 2 AS col_4, t1.b - t1.c AS col_5, t1.a - t1.b AS col_6
---- hash rowsort
13 tuples hashing to 1dcb8480bfa52a7ff3eeadb8e5f9d6b7

-STATEMENT MATCH (t1:t1) RETURN t1.b - t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.a - t1.b AS col_4, t1.a AS col_5, abs(t1.b - t1.c) AS col_6
---- hash rowsort
30 tuples hashing to 1ed5912b63460941c8c5a0292f0a7984

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a + t1.b * 2 AS col_1, t1.e AS col_2
---- hash rowsort
19 tuples hashing to 87d92ebb256f91f8fcff006e1de357c6

-STATEMENT MATCH (t1:t1) RETURN abs(t1.a) AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.d AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4
---- hash rowsort
30 tuples hashing to 81a8b928f88cd5217110bc243c3ab674

-STATEMENT MATCH (t1:t1) RETURN t1.e AS col_1, abs(t1.b - t1.c) AS col_2
---- hash rowsort
30 tuples hashing to 175eb8ebb1cb5751d4c04d8c8042c1ca

-STATEMENT MATCH (t1:t1) RETURN t1.d - t1.e AS col_1, t1.a + t1.b * 2 AS col_2, t1.c - t1.d AS col_3, t1.e AS col_4
---- hash rowsort
30 tuples hashing to 41cf291c3e37328eea680976910a4f23

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR t1.c > t1.d OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.c - t1.d AS col_1, abs(t1.b - t1.c) AS col_2, t1.b - t1.c AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, t1.d AS col_5
---- hash rowsort
26 tuples hashing to 22615879d395d9f85a5d5410a52cbade

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2
---- hash rowsort
5 tuples hashing to fc410b7d336a3f78d1e43861edfaec84

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3
---- hash rowsort
7 tuples hashing to 2f6f2dd8e351550e41f9c92450c72bc6

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 AS col_1, t1.d - t1.e AS col_2, t1.d AS col_3, abs(t1.a) AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5
---- hash rowsort
2 tuples hashing to 32f0873492afea01a2ec2f1c8ddb066c

-STATEMENT MATCH (t1:t1) RETURN t1.b - t1.c AS col_1, t1.c AS col_2, t1.a - t1.b AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.c - t1.d AS col_5, abs(t1.a) AS col_6
---- hash rowsort
30 tuples hashing to fd977adbddd651550a6e34a05459bb63

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.c - t1.d AS col_2, abs(t1.b - t1.c) AS col_3
---- hash rowsort
30 tuples hashing to e0bd6b84b335beafaddf3b8b290fdc32

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.b > t1.c RETURN t1.a AS col_1, t1.c - t1.d AS col_2, t1.b AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4
---- 1
234|-2|232|3473

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.a + t1.b * 2 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, abs(t1.a) AS col_5, abs(t1.b - t1.c) AS col_6, t1.c - t1.d AS col_7
---- hash rowsort
30 tuples hashing to 3c8f4a1535d3f43a24c81afe21c184e4

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2
---- hash rowsort
30 tuples hashing to d1c1f508b401a056a7d00268e472c4dd

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND t1.a > t1.b RETURN t1.b AS col_1
---- 1
105

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.d AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.b - t1.c AS col_4
---- hash rowsort
30 tuples hashing to 901ba045211faeea092345b7ad51c0d5

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR t1.a IS Null RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.c - t1.d AS col_2
---- hash rowsort
12 tuples hashing to e2a022b7bd74795bc490bcc51a206498

-STATEMENT MATCH (t1:t1) WHERE NOT t1.b IS Null OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.d > t1.e RETURN abs(t1.b - t1.c) AS col_1
---- hash rowsort
28 tuples hashing to 13f8270a8f89d6e944f5090daeadabd0

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.a AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3
---- hash rowsort
30 tuples hashing to b64e8dd4be2e6ece6f5a841be6390216

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.a AS col_2
---- hash rowsort
30 tuples hashing to b73cc6e12fee837e4c39dc8c79ae8088

-STATEMENT MATCH (t1:t1) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.a + t1.b * 2 AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.a AS col_5
---- hash rowsort
30 tuples hashing to 262db940c660e83757adc7278c5040a6

-STATEMENT MATCH (t1:t1) WHERE t1.a IS Null RETURN t1.d AS col_1, t1.c AS col_2, t1.a - t1.b AS col_3
---- 2
114|113|
207|208|

-STATEMENT MATCH (t1:t1) RETURN t1.a AS col_1, t1.c AS col_2, t1.d - t1.e AS col_3, t1.d AS col_4
---- hash rowsort
30 tuples hashing to d55510812ed7546de990bac6f6e05f89

-STATEMENT MATCH (t1:t1) WHERE t1.a IS Null AND (t1.e > t1.c OR t1.e < t1.d) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.b AS col_1, t1.b - t1.c AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.c - t1.d AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5
---- 0


-STATEMENT MATCH (t1:t1) RETURN abs(t1.b - t1.c) AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2
---- hash rowsort
30 tuples hashing to 7d882c923da7dd6117ef8c8ef811d50f

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND NOT t1.b IS Null AND (t1.e > t1.a AND t1.e < t1.b) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3
---- 0


-STATEMENT MATCH (t1:t1) WHERE NOT t1.b IS Null AND (t1.e > t1.a AND t1.e < t1.b) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.b - t1.c AS col_1, t1.a - t1.b AS col_2, t1.d - t1.e AS col_3
---- 2
-1|-3|1
1|-3|-2

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.a > t1.b RETURN t1.a AS col_1, t1.b - t1.c AS col_2, t1.c - t1.d AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.e AS col_5
---- hash rowsort
5 tuples hashing to 419cd8bb5dda32eae9bca394f90dde33

-STATEMENT MATCH (t1:t1) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.c AS col_2, t1.a + t1.b * 2 AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4
---- hash rowsort
30 tuples hashing to cf05f8db217ea1e68c87aadfde913fec

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.e > t1.c OR t1.e < t1.d) RETURN abs(t1.b - t1.c) AS col_1
---- hash rowsort
21 tuples hashing to 85d4eec34c66b4290a8a76fd7e78cf23

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR t1.b > t1.c RETURN t1.a + t1.b * 2 AS col_1, t1.c AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3
---- hash rowsort
24 tuples hashing to f845b36d538bfc88079f0cb5eef060a2

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a - t1.b AS col_1, t1.b AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4
---- hash rowsort
10 tuples hashing to 80e350db406b6c89ef984d914c33e892

-STATEMENT MATCH (t1:t1) WHERE t1.a IS Null AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN abs(t1.b - t1.c) AS col_1
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.c - t1.d AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, abs(t1.b - t1.c) AS col_4, t1.b AS col_5
---- hash rowsort
11 tuples hashing to 4fb7cde1ffb36fa34c2f5dfd90654ada

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND coalesce(t1.a) <> 0 AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN abs(t1.b - t1.c) AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, t1.b - t1.c AS col_5, t1.d AS col_6, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_7
---- hash rowsort
2 tuples hashing to e86dd9a09988eb25ea97879396caf6b1

-STATEMENT MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.e AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, abs(t1.b - t1.c) AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4
---- hash rowsort
8 tuples hashing to 2cd396bd130309f87de5f36d2f475a80

-STATEMENT MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 OR (t1.e > t1.c OR t1.e < t1.d) OR t1.a IS Null RETURN t1.b - t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2
---- hash rowsort
30 tuples hashing to 45b5218e3b6ff1cf93bd2d8b65f62dbb

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2
---- hash rowsort
30 tuples hashing to 18f2933597761b47c2c692da942192f4

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.b - t1.c AS col_2
---- hash rowsort
21 tuples hashing to 08496728df11f8eb676e1463ca29cd89

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.b > t1.c AND NOT (t1.d >= 110 AND t1.d <= 150) AND coalesce(t1.a) <> 0 RETURN t1.e AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.d - t1.e AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4
---- hash rowsort
6 tuples hashing to 47e330569be3eb481186c0d6c28073c5

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 AS col_1
---- hash rowsort
30 tuples hashing to fbca95e5a969d3d61cef1ebdfb618461

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.d - t1.e AS col_1
---- hash rowsort
10 tuples hashing to 6e82ac65b16043b22b77cce5a6b54b85

-STATEMENT MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 AND (t1.e > t1.a AND t1.e < t1.b) AND NOT t1.b IS Null RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1
---- 3
192
222
247

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND coalesce(t1.a) <> 0 RETURN abs(t1.b - t1.c) AS col_1, t1.c AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.e AS col_4, t1.b - t1.c AS col_5
---- hash rowsort
8 tuples hashing to 37f20a64c7fb356dece2c07d46d1ab67

-STATEMENT MATCH (t1:t1) WHERE NOT t1.b IS Null AND t1.c > t1.d AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2
---- hash rowsort
10 tuples hashing to 5f495935b071bd704ed9f2508972775f

-STATEMENT MATCH (t1:t1) RETURN t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.b AS col_3, abs(t1.b - t1.c) AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5, abs(t1.a) AS col_6
---- hash rowsort
30 tuples hashing to f54645bfc786b7ace563665760407aba

-STATEMENT MATCH (t1:t1) RETURN t1.c - t1.d AS col_1, abs(t1.a) AS col_2
---- hash rowsort
30 tuples hashing to fe78e4b1ff081fd27c3224d12fcc9ce5

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.c > t1.d RETURN t1.a - t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.c AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4
---- hash rowsort
5 tuples hashing to a6f5b07700b91337d455fc7b74670969

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.d - t1.e AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, abs(t1.b - t1.c) AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_6, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_7
---- hash rowsort
21 tuples hashing to 940512b6145ce091c8d1f82874510cfb

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.c AS col_1, t1.b - t1.c AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3
---- hash rowsort
24 tuples hashing to 0f242e9e2f56c89d9c9be56b8e43ccd9

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.b AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2
---- 2
105|107
129|127

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.d - t1.e AS col_3, t1.a + t1.b * 2 AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_6
---- hash rowsort
30 tuples hashing to bff37502d1e7e46781572fa3856673bb

-STATEMENT MATCH (t1:t1) WHERE t1.a IS Null OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2
---- hash rowsort
10 tuples hashing to 82d982ab8667fb9211481119ba46e14a

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND NOT t1.b IS Null RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.e AS col_2, t1.c - t1.d AS col_3, t1.d AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5, t1.a AS col_6, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_7
---- hash rowsort
15 tuples hashing to a705f5bea82e4b8a8f28a191c6530660

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.b - t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.c - t1.d AS col_4
---- hash rowsort
14 tuples hashing to cbb39a25d3afdfd29808c80cbbdced19

-STATEMENT MATCH (t1:t1) RETURN t1.d - t1.e AS col_1
---- hash rowsort
30 tuples hashing to 9e2d6381b04ea314cd79c5fc9325b30e

-STATEMENT MATCH (t1:t1) WHERE NOT t1.b IS Null OR coalesce(t1.a) <> 0 OR t1.a IS Null RETURN abs(t1.b - t1.c) AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2
---- hash rowsort
30 tuples hashing to 7a1089974412491aad2bf8edc19d0344

-STATEMENT MATCH (t1:t1) WHERE NOT t1.b IS Null OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.d - t1.e AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.b - t1.c AS col_3, t1.a AS col_4, t1.d AS col_5, t1.b AS col_6
---- hash rowsort
29 tuples hashing to 03fe0d3bbd39567ee4199b3e3b15c9e0

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c RETURN t1.a AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.b AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, t1.a - t1.b AS col_6, t1.d AS col_7
---- hash rowsort
13 tuples hashing to 126317fd31fb97a1f067200b291595e8

-STATEMENT MATCH (t1:t1) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2
---- hash rowsort
30 tuples hashing to 3a2b53501becfa0092d18388c1510147

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 AS col_1, t1.c AS col_2, t1.d - t1.e AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, t1.a - t1.b AS col_6
---- hash rowsort
10 tuples hashing to 85fd30e621d2979629fdff750ef890c6

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR t1.a IS Null OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2
---- hash rowsort
19 tuples hashing to 2cb9992dd2e1efb568d5c05c75270eae

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.b AS col_2
---- 2
333|105
333|129

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.e AS col_3
---- hash rowsort
30 tuples hashing to b31f4824975e491f8148bfc8e1ee9f41

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.e AS col_1, t1.d AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4
---- hash rowsort
17 tuples hashing to 85ffb6504ac3b87c0fb31d02076bb13e

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b RETURN t1.c - t1.d AS col_1
---- hash rowsort
17 tuples hashing to 339d4bd65b5ceb69bc4f771072510b73

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.d > t1.e RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a + t1.b * 2 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, t1.b - t1.c AS col_5, t1.a AS col_6, abs(t1.a) AS col_7
---- hash rowsort
17 tuples hashing to c1050f64689e52b52a4fd459eef9efca

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.a + t1.b * 2 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.b - t1.c AS col_3, t1.c - t1.d AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5, t1.d - t1.e AS col_6, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_7
---- hash rowsort
30 tuples hashing to 6c1db2552ee9e0507d6aee38b8feb8cc

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a AS col_2
---- hash rowsort
23 tuples hashing to 18f24ebfbe56b03b99e19ec7f35bee15

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.e AS col_2, t1.b - t1.c AS col_3, t1.d AS col_4
---- hash rowsort
22 tuples hashing to 4f0d28dd42becf5dea31ce1ea40351b7

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.c AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2
---- hash rowsort
22 tuples hashing to 436aec0b8f293a2a9e9f2d2d27d983e8

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR (t1.e > t1.c OR t1.e < t1.d) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4
---- hash rowsort
27 tuples hashing to 3ac458d1cc019b66a1f2985ef9e2fc30

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.c AS col_1, t1.e AS col_2
---- 1
106|109

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.a > t1.b OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.d > t1.e RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.c - t1.d AS col_2, abs(t1.a) AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.b - t1.c AS col_5, t1.a - t1.b AS col_6, t1.b AS col_7
---- hash rowsort
23 tuples hashing to f5decf8ff88f038062422376c736ce1e

-STATEMENT MATCH (t1:t1) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1
---- hash rowsort
30 tuples hashing to 9589cc1f14474dd0aa42c579d2bfedb1

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.d - t1.e AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2
---- 2
-1|107
2|127

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.b AS col_3
---- hash rowsort
17 tuples hashing to fe6b57844f6bca2c80db86f273233b7f

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1
---- hash rowsort
12 tuples hashing to 3297975eebdf7bdaa556ca71560c6bad

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.e AS col_2, t1.a + t1.b * 2 AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4
---- hash rowsort
30 tuples hashing to d64ae13ea13b09b451adffcce9f0d88e

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.c AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4
---- hash rowsort
9 tuples hashing to 4d84e7911b468f556cb05fb367bc2e1a

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.e > t1.c OR t1.e < t1.d) AND coalesce(t1.a) <> 0 RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1
---- hash rowsort
9 tuples hashing to 8b75136b2b51c77345c03804ec1cda5c

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND NOT (t1.d >= 110 AND t1.d <= 150) AND t1.b > t1.c RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.e AS col_2, t1.c - t1.d AS col_3, t1.b AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5, t1.a - t1.b AS col_6
---- hash rowsort
6 tuples hashing to 1dfab01a2a3cde1a0fb099a13ee8f260

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.b > t1.c RETURN t1.e AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.a + t1.b * 2 AS col_3, t1.a AS col_4, abs(t1.b - t1.c) AS col_5, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_6, t1.b AS col_7
---- hash rowsort
13 tuples hashing to 2510a4574e6b6031bf8b31706569fd18

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c RETURN t1.e AS col_1
---- hash rowsort
13 tuples hashing to 4d4acfcd99942f84e7e344dc0cf97feb

-STATEMENT MATCH (t1:t1) RETURN abs(t1.b - t1.c) AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2
---- hash rowsort
30 tuples hashing to df4d8b65a46a637f8e6623eeab84c0cd

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR coalesce(t1.a) <> 0 RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a AS col_2, t1.a - t1.b AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5
---- hash rowsort
30 tuples hashing to 7a10803f8ac1862746a5dfd7761068ec

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.a AS col_4
---- hash rowsort
30 tuples hashing to a0bd82430be70a6a69fa925b102b17a1

-STATEMENT MATCH (t1:t1) RETURN t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, abs(t1.b - t1.c) AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, t1.a AS col_5
---- hash rowsort
30 tuples hashing to aac2b3e27334fce2b3fe88f608a6a7d2

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a + t1.b * 2 AS col_1, t1.c - t1.d AS col_2, t1.e AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.b AS col_5, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_6
---- hash rowsort
21 tuples hashing to 2727cf3f7baeb9cf180f6c3e47e7ac5c

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.b AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.c AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, t1.d - t1.e AS col_6, t1.a - t1.b AS col_7
---- hash rowsort
10 tuples hashing to a30d10c6e226154b4f8a0a602394c523

-STATEMENT MATCH (t1:t1) RETURN t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3
---- hash rowsort
30 tuples hashing to 2dea08f9e5f055d0e54310b6521dcdf9

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND t1.b > t1.c RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.c - t1.d AS col_4
---- hash rowsort
9 tuples hashing to 79335442c361dccabc252e74f3e843e2

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.d - t1.e AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.a - t1.b AS col_3
---- hash rowsort
25 tuples hashing to b7122692372cbdcb123689643515f27b

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.a + t1.b * 2 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3
---- hash rowsort
30 tuples hashing to 68d0758e12aa7de3bf098c50b1020325

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND t1.a > t1.b AND t1.d > t1.e RETURN t1.b AS col_1, t1.a - t1.b AS col_2
---- hash rowsort
5 tuples hashing to 3c965ff7e782f60c038c785b61f762ec

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.b AS col_1
---- hash rowsort
26 tuples hashing to 45166f9056e31d2a2c5a729b92a8069f

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN abs(t1.a) AS col_1, abs(t1.b - t1.c) AS col_2, t1.a AS col_3
---- 2
107|1|107
127|4|127

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.b - t1.c AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5, t1.a + t1.b * 2 AS col_6, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_7
---- hash rowsort
30 tuples hashing to 211250250d77b776c079d3ae1530f040

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 AS col_1, t1.a - t1.b AS col_2, t1.b AS col_3, t1.d AS col_4
---- hash rowsort
22 tuples hashing to 5cede43346ad9a3e7df350a2905a234e

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3
---- hash rowsort
10 tuples hashing to 5f68c99fb1307c4719cc8c8b21a13d5a

-STATEMENT MATCH (t1:t1) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, abs(t1.b - t1.c) AS col_2, t1.d AS col_3, t1.e AS col_4, t1.d - t1.e AS col_5
---- hash rowsort
30 tuples hashing to 6502655c587cc722407dab5bad5802b1

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND t1.c > t1.d AND t1.b > t1.c RETURN t1.a + t1.b * 2 AS col_1, t1.b - t1.c AS col_2, t1.c AS col_3, t1.b AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.a IS Null OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.b > t1.c RETURN t1.c - t1.d AS col_1, t1.a AS col_2, t1.a + t1.b * 2 AS col_3, abs(t1.a) AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5, t1.c AS col_6
---- hash rowsort
21 tuples hashing to a0c2526cbe79a2234e194925721595ac

-STATEMENT MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 OR t1.a IS Null OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.b - t1.c AS col_1, t1.a + t1.b * 2 AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3
---- hash rowsort
30 tuples hashing to e930affe853f103637032aeca0d8bbed

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.e AS col_1
---- hash rowsort
22 tuples hashing to bbd955f05cf2d985d96026cbe9fcbf95

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.a - t1.b AS col_2
---- 2
1612|2
1902|-2

-STATEMENT MATCH (t1:t1) WHERE NOT t1.b IS Null AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2
---- hash rowsort
15 tuples hashing to 269f4a3f34eee7d366575299c282bf0f

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1
---- hash rowsort
30 tuples hashing to f54b614acd4cb798dba29ba05152f26d

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a - t1.b AS col_1, t1.c AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.b - t1.c AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, t1.b AS col_6
---- hash rowsort
28 tuples hashing to e1a831887ece1fd1a76178b4e62c96d3

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR t1.d > t1.e RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.c AS col_2, t1.d AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.a + t1.b * 2 AS col_5, t1.c - t1.d AS col_6, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_7
---- hash rowsort
22 tuples hashing to b3c2481d8ea84ad257e77907a46f4575

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.a IS Null RETURN t1.a AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.a - t1.b AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5
---- hash rowsort
2 tuples hashing to 505171f6697927ddf587129b77ebb51b

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.d - t1.e AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.c - t1.d AS col_5, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_6
---- hash rowsort
30 tuples hashing to ab4b430395489726f0634900658ff227

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR t1.c > t1.d OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN abs(t1.a) AS col_1, t1.c AS col_2, abs(t1.b - t1.c) AS col_3, t1.b - t1.c AS col_4
---- hash rowsort
29 tuples hashing to 4293bfad16fedc0e068f1eaba172f4b0

-STATEMENT MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 AND t1.c > t1.d AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.c AS col_3, abs(t1.a) AS col_4
---- hash rowsort
5 tuples hashing to 8f4e8cad16d912e4afabac29308ba86b

-STATEMENT MATCH (t1:t1) WHERE t1.a IS Null OR t1.b > t1.c RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.b AS col_3, t1.a - t1.b AS col_4, t1.a AS col_5, t1.a + t1.b * 2 + t1.c * 3 AS col_6
---- hash rowsort
15 tuples hashing to aae88e03ac5ada995ab449e794fe5dbd

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a - t1.b AS col_2, t1.b - t1.c AS col_3, t1.b AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_6
---- hash rowsort
10 tuples hashing to fccfe38217c9336da83a72e1e38466e9

-STATEMENT MATCH (t1:t1) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.c AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5, abs(t1.b - t1.c) AS col_6, t1.d - t1.e AS col_7
---- hash rowsort
30 tuples hashing to f5ab411c4a38875c9fb9a8449288401b

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) RETURN abs(t1.a) AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.c - t1.d AS col_3
---- hash rowsort
17 tuples hashing to 9f89c5db1a39fdf0128d784a415b7aec

-STATEMENT MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.d AS col_1
---- hash rowsort
17 tuples hashing to 6753fb8eb6def51fd8dded76e76af57a

-STATEMENT MATCH (t1:t1) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2
---- hash rowsort
30 tuples hashing to 1268fe276d67a0ee132c2c5115c12cbe

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.c - t1.d AS col_1, abs(t1.a) AS col_2
---- hash rowsort
10 tuples hashing to aa007d94cb84743d77f13a517ac1c0a2

-STATEMENT MATCH (t1:t1) WHERE NOT t1.b IS Null RETURN abs(t1.b - t1.c) AS col_1, t1.c - t1.d AS col_2
---- hash rowsort
27 tuples hashing to 0769f1f2c8be954b6c9fa17d55b37ee4

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.b AS col_1, t1.c AS col_2, t1.e AS col_3, abs(t1.a) AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5, t1.a - t1.b AS col_6
---- hash rowsort
17 tuples hashing to 5a2492c56eb0a3902520dbdb321524ae

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.a - t1.b AS col_1, t1.c AS col_2, t1.b AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5
---- hash rowsort
30 tuples hashing to 47c99b2a96a0b1135bfe580e677eeea1

-STATEMENT MATCH (t1:t1) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.c - t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.d AS col_4
---- hash rowsort
30 tuples hashing to 48c8a67b9e81a901a1f13db6fda04911

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND NOT t1.b IS Null AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a - t1.b AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, abs(t1.a) AS col_3
---- hash rowsort
8 tuples hashing to 44c8198ef1ff172dccb68377d71790c4

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2
---- 2
0|107
0|127

-STATEMENT MATCH (t1:t1) WHERE NOT t1.b IS Null RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, abs(t1.b - t1.c) AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5
---- hash rowsort
27 tuples hashing to 6ad2d4d42b2ada0a52d53e56cca280d6

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND t1.d > t1.e AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a + t1.b * 2 AS col_1, t1.a - t1.b AS col_2
---- 2
391|1
544|1

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR coalesce(t1.a) <> 0 RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.c - t1.d AS col_4
---- hash rowsort
30 tuples hashing to 8ab46353ee866e071bf1b7af72db7e40

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.c > t1.d AND NOT t1.b IS Null AND t1.a > t1.b RETURN t1.d AS col_1, t1.c - t1.d AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_6
---- hash rowsort
5 tuples hashing to fdd011a2e0a18abb3227e4326df8ecdd

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.a - t1.b AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.c AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.e AS col_5, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_6, t1.d - t1.e AS col_7
---- hash rowsort
30 tuples hashing to 51eb4c6f118a3cd801249a8cd6d255c6

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.c > t1.d RETURN t1.a AS col_1, abs(t1.a) AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.a + t1.b * 2 AS col_4
---- hash rowsort
18 tuples hashing to 082358e17e9e36e6e9d5b0c79eee1ea6

-STATEMENT MATCH (t1:t1) RETURN t1.c AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2
---- hash rowsort
30 tuples hashing to 19f43f5d16381a382e6f42d423819d43

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND t1.c > t1.d AND coalesce(t1.a) <> 0 RETURN t1.b - t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.b AS col_3, t1.c - t1.d AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5
---- hash rowsort
5 tuples hashing to 299e3455af3896f73b4c030343e18557

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e RETURN t1.b AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.a - t1.b AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5, t1.d - t1.e AS col_6
---- hash rowsort
11 tuples hashing to 63f9ad9303fb8a4a7b347b0e62fdff94

-STATEMENT MATCH (t1:t1) WHERE t1.a IS Null RETURN t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.a AS col_4, t1.a + t1.b * 2 AS col_5
---- hash rowsort
2 tuples hashing to bbe75ac144d98776fc6601ffd1e7f529

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1
---- hash rowsort
17 tuples hashing to a4c7d8a991efd76cb5f546dad4050ef2

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 AS col_1, t1.b - t1.c AS col_2, t1.c - t1.d AS col_3
---- hash rowsort
30 tuples hashing to 682d77eb10e5a460ffaf779a07bf10b2

-STATEMENT MATCH (t1:t1) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3
---- hash rowsort
30 tuples hashing to 162c428c5bacc4383ffe635abbb4e5ba

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.d - t1.e AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3
---- hash rowsort
11 tuples hashing to ea6c8f3411332788326ec19211e7f3ca

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e RETURN t1.a AS col_1, t1.c - t1.d AS col_2, abs(t1.a) AS col_3
---- hash rowsort
11 tuples hashing to a1f305de18a165327a59c4b3250a373e

-STATEMENT MATCH (t1:t1) RETURN abs(t1.b - t1.c) AS col_1, t1.a - t1.b AS col_2, t1.c - t1.d AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, t1.b - t1.c AS col_5
---- hash rowsort
30 tuples hashing to 2b4eff4fda2993558a9c12090b664627

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.c - t1.d AS col_3, t1.d - t1.e AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5
---- hash rowsort
25 tuples hashing to 8200bbe242c05e370d1826d430378751

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1
---- hash rowsort
17 tuples hashing to d495cc96671b8b56d893ab44a8baf564

-STATEMENT MATCH (t1:t1) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.b AS col_3, t1.c - t1.d AS col_4, t1.d AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_6, t1.a + t1.b * 2 + t1.c * 3 AS col_7
---- hash rowsort
30 tuples hashing to 39ed7676da3c420f7e9c83cce81d1a4f

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.c > t1.d RETURN t1.a AS col_1, t1.d - t1.e AS col_2, t1.e AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, abs(t1.b - t1.c) AS col_5, t1.c AS col_6, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_7
---- hash rowsort
17 tuples hashing to 7343926d6c48db22db873f7d5ee38428

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1
---- hash rowsort
15 tuples hashing to a879d0436172411bd1ff79ad23bcf6c5

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.c - t1.d AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5, t1.a - t1.b AS col_6, t1.d - t1.e AS col_7
---- hash rowsort
17 tuples hashing to bfe4d06f73a191d0b43685cefb316775

-STATEMENT MATCH (t1:t1) WHERE t1.a IS Null RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1
---- 2



-STATEMENT MATCH (t1:t1) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.b - t1.c AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.c - t1.d AS col_4
---- hash rowsort
30 tuples hashing to 08da035b8a7fe742130cdb13e7ad6ff6

-STATEMENT MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2
---- hash rowsort
30 tuples hashing to b339e36127a64202a49f498513dd40e3

-STATEMENT MATCH (t1:t1) WHERE t1.a IS Null AND t1.d > t1.e RETURN t1.b AS col_1, t1.d - t1.e AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5
---- 1
112|4||1|444

-STATEMENT MATCH (t1:t1) RETURN t1.e AS col_1, t1.a + t1.b * 2 AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4
---- hash rowsort
30 tuples hashing to 6f21fb43e70dd16f186ac8d998c9a1ab

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.d > t1.e AND t1.a > t1.b AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.b AS col_3, t1.e AS col_4, t1.c - t1.d AS col_5, t1.b - t1.c AS col_6, t1.d AS col_7
---- hash rowsort
5 tuples hashing to be86deef0c7e820d495982d5c6b880da

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.b AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.c AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5
---- hash rowsort
26 tuples hashing to 6411992407fa5dc995f0fcde32cc1804

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b RETURN t1.c AS col_1, t1.a - t1.b AS col_2
---- hash rowsort
17 tuples hashing to d2068136b2985ee7c04a8c9b78209dad

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, abs(t1.b - t1.c) AS col_2, t1.c - t1.d AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, t1.a AS col_5, t1.b AS col_6, abs(t1.a) AS col_7
---- hash rowsort
18 tuples hashing to adb8714e6ea266fe29ae95aa6fd92d4d

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.a IS Null RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.b AS col_2
---- 2
1120|112
|206

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.e > t1.a AND t1.e < t1.b) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.a AS col_4
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR NOT t1.b IS Null RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.a + t1.b * 2 AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.d - t1.e AS col_5, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_6, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_7
---- hash rowsort
27 tuples hashing to bb3374aa095cf12d733b405f3a4b0f1e

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR t1.a > t1.b OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.d AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.a AS col_3, t1.c - t1.d AS col_4, t1.a - t1.b AS col_5, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_6
---- hash rowsort
27 tuples hashing to a0366f44c0f21a5de9e307e2f3a2b965

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a - t1.b AS col_1, t1.c - t1.d AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.d - t1.e AS col_4
---- hash rowsort
17 tuples hashing to 58a97ed4a9b494aafbd3a3c57da82078

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d RETURN t1.c - t1.d AS col_1, t1.a + t1.b * 2 AS col_2, t1.d - t1.e AS col_3
---- hash rowsort
13 tuples hashing to b3af61dbda8d2d8b5489597c7f233424

-STATEMENT MATCH (t1:t1) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, abs(t1.b - t1.c) AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4
---- hash rowsort
30 tuples hashing to cca0428a4957294dfd510fc7266ea92d

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.d > t1.e RETURN t1.a - t1.b AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2
---- hash rowsort
11 tuples hashing to efc2b46a59d1aa24c732442ab6e2e534

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a - t1.b AS col_1
---- hash rowsort
21 tuples hashing to a8aec6acdf2c584e2f18d33820ef624e

-STATEMENT MATCH (t1:t1) RETURN t1.d - t1.e AS col_1, t1.c - t1.d AS col_2
---- hash rowsort
30 tuples hashing to ef369eca6494d99a6196b047bc1be265

-STATEMENT MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 AND (t1.e > t1.c OR t1.e < t1.d) RETURN t1.c - t1.d AS col_1, t1.d AS col_2, abs(t1.b - t1.c) AS col_3, t1.d - t1.e AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, t1.b - t1.c AS col_6
---- hash rowsort
21 tuples hashing to a8aad71dc40b7ba2ba2e600b47021d38

-STATEMENT MATCH (t1:t1) WHERE NOT t1.b IS Null OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.e > t1.a AND t1.e < t1.b) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.b AS col_3, abs(t1.b - t1.c) AS col_4, abs(t1.a) AS col_5
---- hash rowsort
27 tuples hashing to 0002cb7ca93935fefb9e888bd6ec0cda

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.e AS col_4, t1.d AS col_5
---- hash rowsort
30 tuples hashing to 3dcf5bdec772863d7b90fced4cc9baaa

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.c - t1.d AS col_1, abs(t1.a) AS col_2, t1.a + t1.b * 2 AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, t1.d - t1.e AS col_5, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_6, t1.a AS col_7
---- hash rowsort
10 tuples hashing to 25f32304c1bc47764dd68ff331ed7b3d

-STATEMENT MATCH (t1:t1) WHERE NOT t1.b IS Null RETURN t1.a AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.d AS col_3
---- hash rowsort
27 tuples hashing to 43ef865ccee93beaef9b0531bbe27ea1

-STATEMENT MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 AND t1.d > t1.e RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.a - t1.b AS col_4, abs(t1.b - t1.c) AS col_5
---- hash rowsort
11 tuples hashing to 629632d72a0b69e9ce52cf46e7961dc2

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.e AS col_1, abs(t1.a) AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.a AS col_5, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_6, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_7
---- hash rowsort
19 tuples hashing to 4c7875a7b6b7999ecba73c9123945b6f

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN abs(t1.b - t1.c) AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, abs(t1.a) AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.a - t1.b AS col_5, t1.c AS col_6, t1.a AS col_7
---- hash rowsort
30 tuples hashing to e7899c818ed75057d5abbe8b5f971bc6

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d RETURN abs(t1.b - t1.c) AS col_1, t1.d - t1.e AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, t1.a AS col_5, t1.b AS col_6, abs(t1.a) AS col_7
---- hash rowsort
13 tuples hashing to 1039be830093d12f37a63093d04e1547

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.d - t1.e AS col_5, abs(t1.b - t1.c) AS col_6, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_7
---- hash rowsort
30 tuples hashing to b2e9cef39d103d581c325552c1fad51e

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.d - t1.e AS col_2, t1.c - t1.d AS col_3, abs(t1.a) AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5
---- hash rowsort
8 tuples hashing to 0a56263b4e542487aed6eda155f85f2a

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.c > t1.d OR t1.b > t1.c RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.a AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_6
---- hash rowsort
22 tuples hashing to 677b478959906ed745c9582fe57c8429

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.b AS col_1, t1.a + t1.b * 2 AS col_2, t1.b - t1.c AS col_3, t1.a AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5, t1.d - t1.e AS col_6
---- hash rowsort
10 tuples hashing to 43cc8289cc0d7aa27dd7ca100b418c79

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1
---- 8
1325
1371
1411
1828
1964
2264



-STATEMENT MATCH (t1:t1) RETURN t1.d - t1.e AS col_1, t1.b - t1.c AS col_2, t1.a - t1.b AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4
---- hash rowsort
30 tuples hashing to 6ca1061e1b64773067b613285ddb7e57

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.d > t1.e AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.b AS col_1
---- hash rowsort
9 tuples hashing to af18a98364ca4a37adc4ca16602c22da

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, abs(t1.b - t1.c) AS col_2
---- hash rowsort
26 tuples hashing to 0f2004236b9faf5aa9fead02a7c49bb1

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a + t1.b * 2 AS col_1
---- 8
391
416
428
475
502
544
595
685

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.d - t1.e AS col_1
---- 8
-2
-2
-4
1
2
3



-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.c - t1.d AS col_2
---- hash rowsort
8 tuples hashing to 2c838c66b1922cc5ef8d87bbd634c2e1

-STATEMENT MATCH (t1:t1) WHERE NOT t1.b IS Null AND t1.c > t1.d RETURN t1.a - t1.b AS col_1
---- hash rowsort
11 tuples hashing to a727bc0a71dc5f6847d30cb017bdbf58

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.a > t1.b OR t1.c > t1.d RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1
---- hash rowsort
25 tuples hashing to 41af91f684d2199c66e7c6d300ada96b

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, abs(t1.a) AS col_2, t1.e AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, abs(t1.b - t1.c) AS col_5, t1.a - t1.b AS col_6, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_7
---- hash rowsort
19 tuples hashing to 0b00640f4c88770b3c72896ca4614554

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.a > t1.b OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.a IS Null RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.b AS col_3, t1.d AS col_4, t1.c - t1.d AS col_5, t1.a + t1.b * 2 AS col_6
---- hash rowsort
24 tuples hashing to ce0260b129a5febb9ede5c74aea550c5

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.b - t1.c AS col_1, t1.a + t1.b * 2 AS col_2
---- hash rowsort
26 tuples hashing to 8f8952986d01fffc8cebb109eb10e66c

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.e > t1.a AND t1.e < t1.b) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.a AS col_2, t1.b - t1.c AS col_3, t1.a + t1.b * 2 AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, t1.c - t1.d AS col_6
---- hash rowsort
18 tuples hashing to 0c675dc8434be0a244b5e78e42d773f0

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR t1.a > t1.b RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.e AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4
---- hash rowsort
20 tuples hashing to 782160babf2c361f1ed87683e525e840

-STATEMENT MATCH (t1:t1) RETURN t1.b AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.d AS col_3, t1.a - t1.b AS col_4, t1.a + t1.b * 2 AS col_5, t1.a + t1.b * 2 + t1.c * 3 AS col_6, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_7
---- hash rowsort
30 tuples hashing to e530bba37e14c2e4bfeb984a31c25c26

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, abs(t1.b - t1.c) AS col_5, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_6
---- hash rowsort
3 tuples hashing to 41b00f78900bcaddd3a9faeef71701c9

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.a - t1.b AS col_4, t1.d AS col_5
---- hash rowsort
16 tuples hashing to ea31eb8eb327932f9dddcc6bc5c8c833

-STATEMENT MATCH (t1:t1) RETURN abs(t1.b - t1.c) AS col_1, t1.d - t1.e AS col_2, t1.b AS col_3, t1.c AS col_4
---- hash rowsort
30 tuples hashing to a9c76f87fd78b4d3ad82ce7bc8e64ac8

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.d > t1.e AND NOT t1.b IS Null RETURN abs(t1.b - t1.c) AS col_1, t1.c - t1.d AS col_2, t1.d - t1.e AS col_3, t1.e AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5
---- hash rowsort
3 tuples hashing to 7c787a6339d303da1db7c981873e544b

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 AND NOT (t1.d >= 110 AND t1.d <= 150) AND NOT t1.b IS Null RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.a AS col_2, abs(t1.a) AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4
---- hash rowsort
15 tuples hashing to 2007f05c0a6e062701e09fdfa0713122

-STATEMENT MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, t1.c - t1.d AS col_5, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_6
---- hash rowsort
30 tuples hashing to 9b776a59385a5b6e30c0e39547af4166

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.a - t1.b AS col_2, abs(t1.a) AS col_3
---- hash rowsort
30 tuples hashing to fef98e4832a2f229da033f1bc8cf44b0

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2
---- hash rowsort
26 tuples hashing to 5bcbb381f1d7a1f9ba896ddd0f948d71

-STATEMENT MATCH (t1:t1) RETURN t1.a - t1.b AS col_1, t1.c AS col_2, abs(t1.a) AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4
---- hash rowsort
30 tuples hashing to 3dee096e2ff1cd4833ffb7474653edd0

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a + t1.b * 2 AS col_2, t1.b AS col_3, t1.b - t1.c AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_6, t1.a - t1.b AS col_7
---- hash rowsort
17 tuples hashing to 9715224193fc9463e03ea8c6b1228d00

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e RETURN t1.b - t1.c AS col_1, abs(t1.b - t1.c) AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.d AS col_4
---- hash rowsort
11 tuples hashing to 0a0d670d28969de28ede7d2e1e51ba1f

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.b > t1.c AND t1.d > t1.e AND coalesce(t1.a) <> 0 RETURN t1.d AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, abs(t1.b - t1.c) AS col_3
---- hash rowsort
4 tuples hashing to 09562012bae47f170d9275f0d6912571

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.a IS Null OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.d - t1.e AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, abs(t1.b - t1.c) AS col_5, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_6, t1.b AS col_7
---- hash rowsort
20 tuples hashing to 7b013cbc35b21bdb59f96aff7f278d57

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.c - t1.d AS col_2, t1.d - t1.e AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5
---- hash rowsort
30 tuples hashing to fb407de0e3aa5eba05dfac0f6c830cf0

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4
---- hash rowsort
3 tuples hashing to d321a3d27a70ead3b2dfaf5159362643

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.d - t1.e AS col_1, t1.e AS col_2, t1.b - t1.c AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4
---- hash rowsort
26 tuples hashing to 5e9803a88163ef8053517360e08e9f55

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR t1.a IS Null RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1
---- hash rowsort
22 tuples hashing to c72292419115129326c6770fce033a0f

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, abs(t1.b - t1.c) AS col_2
---- hash rowsort
30 tuples hashing to 0b9ef161ef3a21dce30650b33c19bb5e

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.d AS col_1
---- hash rowsort
17 tuples hashing to 6753fb8eb6def51fd8dded76e76af57a

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.c AS col_2, t1.b AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_6
---- hash rowsort
26 tuples hashing to 8cfb948d288bf26f787dbe54192f20c2

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d RETURN t1.b - t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.c - t1.d AS col_3, t1.b AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_6
---- hash rowsort
13 tuples hashing to e47956172c8fa5c59837e680b8bf0cc7

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.c AS col_2, t1.a + t1.b * 2 AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4
---- hash rowsort
21 tuples hashing to 5ef7a7de359f55165792cdb3acfb2f37

-STATEMENT MATCH (t1:t1) WHERE t1.a IS Null OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.e > t1.a AND t1.e < t1.b) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2
---- hash rowsort
13 tuples hashing to 693a207f237ae88b9986be9729de24a7

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2
---- hash rowsort
30 tuples hashing to aa5d47b7ad8836779f5ac0baa36be8dd

-STATEMENT MATCH (t1:t1) RETURN t1.b AS col_1
---- hash rowsort
30 tuples hashing to 9697cb5cadc4331af70386531f7792a9

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.a IS Null AND t1.c > t1.d AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.c AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.c - t1.d AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.c - t1.d AS col_1
---- hash rowsort
14 tuples hashing to 182b05ac2b2f5031af55d5fc8e2ca678

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR t1.a IS Null RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.b - t1.c AS col_2
---- hash rowsort
19 tuples hashing to c780d393ba03d9efcbfb54dfb435ce6b

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.b > t1.c RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a AS col_2, t1.c - t1.d AS col_3
---- hash rowsort
13 tuples hashing to 43e0495dd149fef637b37182902a70b0

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e RETURN t1.e AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.a AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4
---- hash rowsort
11 tuples hashing to a0bbce0efbadffac94910fe5daccf705

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a - t1.b AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, abs(t1.b - t1.c) AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5, t1.a + t1.b * 2 AS col_6, t1.b AS col_7
---- hash rowsort
15 tuples hashing to 8537770ca2da14912a0a889f8a0332b5

-STATEMENT MATCH (t1:t1) WHERE NOT t1.b IS Null RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.a + t1.b * 2 AS col_3, t1.b AS col_4, t1.d - t1.e AS col_5
---- hash rowsort
27 tuples hashing to 077ebe086c15dc2ff2cf7917fc5603ce

-STATEMENT MATCH (t1:t1) RETURN t1.e AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.b - t1.c AS col_4, t1.d - t1.e AS col_5
---- hash rowsort
30 tuples hashing to f7d2d5ba4d29dabed474bd11e679268f

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.c > t1.d OR t1.a IS Null RETURN t1.c AS col_1, abs(t1.b - t1.c) AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.c - t1.d AS col_4, t1.a + t1.b * 2 AS col_5
---- hash rowsort
19 tuples hashing to 3e4cd208357eddf8ec1f9c0f4886f421

-STATEMENT MATCH (t1:t1) RETURN t1.b - t1.c AS col_1, abs(t1.a) AS col_2
---- hash rowsort
30 tuples hashing to f81a96674d5188e29e9a2725a491cbee

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.d AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, abs(t1.b - t1.c) AS col_3, t1.a - t1.b AS col_4, t1.a AS col_5
---- hash rowsort
24 tuples hashing to a8ac31c7c91b1d87db3fcf5623afa85b

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND t1.b > t1.c RETURN t1.a AS col_1, t1.c AS col_2
---- 4
127|125
138|137
234|231
245|247

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.b - t1.c AS col_1
---- hash rowsort
28 tuples hashing to 1ff878f032c5cfd9be2e7d1739fd5bb1

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1
---- hash rowsort
15 tuples hashing to 3778773ed139bd0dde6579b2944d52c5

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a - t1.b AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.e AS col_4
---- hash rowsort
27 tuples hashing to c945f38fdfb7bcfe16a6e443641f2ff5

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.d - t1.e AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, t1.d AS col_6, abs(t1.b - t1.c) AS col_7
---- hash rowsort
24 tuples hashing to ec4cf3ef8e4c6c0576b3697f263ee288

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.d AS col_2, t1.c AS col_3
---- hash rowsort
13 tuples hashing to 3a3a06de0e9583c7ab3290f3dec6e38f

-STATEMENT MATCH (t1:t1) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a + t1.b * 2 AS col_2
---- hash rowsort
30 tuples hashing to 268ffae5bbd280974bcf34ff00a53ce8

-STATEMENT MATCH (t1:t1) WHERE t1.a IS Null RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.d AS col_3, t1.e AS col_4
---- 2
444||114|110
444||207|

-STATEMENT MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 OR t1.a IS Null OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1
---- hash rowsort
30 tuples hashing to fd6d6825820cf653aceb2d72af4a5983

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND t1.a IS Null RETURN abs(t1.a) AS col_1
---- 1


-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, abs(t1.a) AS col_5
---- hash rowsort
30 tuples hashing to 34c3e27713566af5831216c8673ecec6

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.b - t1.c AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.c - t1.d AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5
---- hash rowsort
30 tuples hashing to ef543d2c1644996271362e9eb021b653

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1
---- hash rowsort
30 tuples hashing to fd6d6825820cf653aceb2d72af4a5983

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, abs(t1.a) AS col_2, t1.a AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.a - t1.b AS col_5, t1.d AS col_6
---- hash rowsort
20 tuples hashing to 65ae29e27263411cbba61fe2685ffa23

-STATEMENT MATCH (t1:t1) RETURN t1.d - t1.e AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.b AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, abs(t1.a) AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_6, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_7
---- hash rowsort
30 tuples hashing to a31aa071b70198721385ba5a7b7cba2c

-STATEMENT MATCH (t1:t1) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1
---- hash rowsort
30 tuples hashing to 62634e04a17da0e006feac1d867155ac

-STATEMENT MATCH (t1:t1) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.b - t1.c AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3
---- hash rowsort
30 tuples hashing to aa6f3fd5f298c6b3c08a6e592d89cb60

-STATEMENT MATCH (t1:t1) RETURN t1.c - t1.d AS col_1, t1.c AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3
---- hash rowsort
30 tuples hashing to 8ce0f8b414e39414e330e5d40720506a

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2
---- hash rowsort
13 tuples hashing to ac1ac27954b3ddbc82d232af3766a94b

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR coalesce(t1.a) <> 0 OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1
---- hash rowsort
30 tuples hashing to 445b0172de37f3ca0ed777000309cef8

-STATEMENT MATCH (t1:t1) WHERE t1.a IS Null AND (t1.e > t1.c OR t1.e < t1.d) AND t1.c > t1.d RETURN t1.a + t1.b * 2 AS col_1, abs(t1.b - t1.c) AS col_2, t1.a AS col_3
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.c AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.d AS col_4, t1.d - t1.e AS col_5
---- hash rowsort
3 tuples hashing to bc2ce01b3953de9946df4d58505c8398

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.b > t1.c RETURN t1.d - t1.e AS col_1
---- 5
-4
1
2
3


-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN abs(t1.a) AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2
---- 1
107|0

-STATEMENT MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a AS col_2, t1.b AS col_3, abs(t1.b - t1.c) AS col_4
---- hash rowsort
30 tuples hashing to 8af952a15dc09ac334e0d82042a24df9

-STATEMENT MATCH (t1:t1) RETURN t1.a AS col_1
---- hash rowsort
30 tuples hashing to 9a6afb6b859fc856aafb6a7af11a38e4

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE NOT t1.b IS Null OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.e > t1.c OR t1.e < t1.d) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1
---- hash rowsort
28 tuples hashing to 96913c6f63f3116bacfa71ff4a9f73e2

-STATEMENT MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 AND t1.a > t1.b AND NOT t1.b IS Null RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.a + t1.b * 2 AS col_3
---- hash rowsort
17 tuples hashing to fb13c2384756bc5e8255d1d7d244b5a8

-STATEMENT MATCH (t1:t1) RETURN t1.a - t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.c - t1.d AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_6, t1.c AS col_7
---- hash rowsort
30 tuples hashing to 70abb12df6491fcd04e18940ea4523b4

-STATEMENT MATCH (t1:t1) WHERE t1.a IS Null AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.c > t1.d RETURN t1.c AS col_1
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.e AS col_1, t1.b - t1.c AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.d - t1.e AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, t1.b AS col_6
---- hash rowsort
27 tuples hashing to 421c6610087a017188e5d506772d3234

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.b AS col_2, t1.d AS col_3
---- hash rowsort
14 tuples hashing to c4ed1d4efe550de05e657bff5ca3e4f1

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND NOT t1.b IS Null RETURN t1.c - t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.b AS col_3, t1.d AS col_4
---- hash rowsort
9 tuples hashing to 06e77c39107ea08444e134ef0f89067a

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1
---- hash rowsort
15 tuples hashing to 24301db3251cc0181759db55e6ca955d

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.b > t1.c RETURN t1.c - t1.d AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3
---- hash rowsort
13 tuples hashing to 03a1cfda7ff971e7feec2aae616af091

-STATEMENT MATCH (t1:t1) WHERE NOT t1.b IS Null AND t1.a > t1.b AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a AS col_2, abs(t1.b - t1.c) AS col_3, t1.d - t1.e AS col_4, t1.a + t1.b * 2 AS col_5
---- hash rowsort
8 tuples hashing to 367c01752379b26b48a5796d10d16ee8

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR t1.d > t1.e RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1
---- hash rowsort
26 tuples hashing to 5c41d2c888f71bdfb301a5449bb2316d

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR coalesce(t1.a) <> 0 RETURN t1.c - t1.d AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.a + t1.b * 2 AS col_4, t1.c AS col_5, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_6
---- hash rowsort
30 tuples hashing to 90084eaaa4371d329e7a2ac1a0ed1c5f

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a + t1.b * 2 AS col_1
---- hash rowsort
11 tuples hashing to 9b90765be9d258ed2e6f4bafe855f8c8

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) AND (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.e AS col_2
---- 2
3331|221
3706|246

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.c > t1.d OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.d - t1.e AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2
---- hash rowsort
18 tuples hashing to 1fa798dc51e11d6e3131bf0c82349e7d

-STATEMENT MATCH (t1:t1) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.b AS col_3
---- hash rowsort
30 tuples hashing to 1db270b129edfe2a9cbfb25cb5406519

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.a IS Null AND NOT t1.b IS Null AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.a + t1.b * 2 AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_6
---- hash rowsort
2 tuples hashing to e77c56203b9f140a2fbfd2b4ec315cb6

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.c AS col_2, t1.c - t1.d AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, abs(t1.b - t1.c) AS col_5
---- hash rowsort
3 tuples hashing to 53401db7d1bdba939ef5d0b1869fc87a

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) RETURN t1.b - t1.c AS col_1, t1.a + t1.b * 2 AS col_2, t1.b AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5
---- hash rowsort
21 tuples hashing to 4d9c7a11cb1abb70ca128d4f25567c20

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND NOT t1.b IS Null AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2
---- 2
224|2226
247|2476

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1
---- hash rowsort
30 tuples hashing to fd6d6825820cf653aceb2d72af4a5983

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b RETURN t1.d - t1.e AS col_1, t1.b AS col_2
---- hash rowsort
17 tuples hashing to 61ae510be58bcd19ca005e792d30db99

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.a > t1.b OR t1.b > t1.c OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.d - t1.e AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.a - t1.b AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.b AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_6
---- hash rowsort
27 tuples hashing to d3bb54ee120d9244f04682c3992fe447

-STATEMENT MATCH (t1:t1) RETURN t1.a - t1.b AS col_1
---- hash rowsort
30 tuples hashing to a8508bcdf86e494dd5feccb5ca8d9768

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.b > t1.c AND t1.a IS Null RETURN t1.c - t1.d AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.d - t1.e AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4
---- 0


-STATEMENT MATCH (t1:t1) RETURN abs(t1.b - t1.c) AS col_1, t1.c AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3
---- hash rowsort
30 tuples hashing to 4a1cb86e3b2d0a16b93a4a43e4862ea7

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND NOT (t1.d >= 110 AND t1.d <= 150) AND t1.c > t1.d RETURN abs(t1.a) AS col_1, t1.d AS col_2
---- hash rowsort
6 tuples hashing to 1db451b4f2b6f6a00ca68c20c8f5a10a

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.d - t1.e AS col_1, t1.c - t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, t1.a AS col_5
---- hash rowsort
2 tuples hashing to 0f2bcf5dd0b4e7c0d86e4dea51b3669d

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.b - t1.c AS col_5, t1.e AS col_6, t1.a - t1.b AS col_7
---- hash rowsort
30 tuples hashing to 49dc85648e0395e2d12eac8679743c89

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.b > t1.c RETURN t1.c - t1.d AS col_1, t1.d AS col_2
---- hash rowsort
6 tuples hashing to 29cac38b69c814d477ac32eec447ae65

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, abs(t1.a) AS col_2
---- hash rowsort
25 tuples hashing to b70d30843a06f6e016d63b0d5fc5c5fc

-STATEMENT MATCH (t1:t1) RETURN t1.d AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3
---- hash rowsort
30 tuples hashing to 356b53bc2a5a060f3597859758312b6a

-STATEMENT MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 AND (t1.e > t1.c OR t1.e < t1.d) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN abs(t1.b - t1.c) AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.b AS col_3
---- hash rowsort
7 tuples hashing to 6e80f3e9a1c3da5eec90c6c2db4083c6

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.d AS col_1, t1.b - t1.c AS col_2, t1.a - t1.b AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, t1.a AS col_5, t1.a + t1.b * 2 AS col_6
---- hash rowsort
15 tuples hashing to 1cb2eacc3e9cb1ce9a5cdd735e243c53

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 AS col_1, t1.d AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, abs(t1.b - t1.c) AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, t1.a AS col_6, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_7
---- hash rowsort
30 tuples hashing to aae9fe2b7aee06bb2c5a585ddf71ea79

-STATEMENT MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN abs(t1.a) AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.d AS col_3
---- hash rowsort
8 tuples hashing to 603c6dd34471ed173cee5dc2935fcb64

-STATEMENT MATCH (t1:t1) RETURN t1.a AS col_1, t1.a + t1.b * 2 AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.b AS col_4, abs(t1.b - t1.c) AS col_5, t1.c - t1.d AS col_6, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_7
---- hash rowsort
30 tuples hashing to fb3c6154be221c04b78b37e980225b61

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1
---- hash rowsort
16 tuples hashing to 6245ac24acbce1345908146a2c06dd24

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.c - t1.d AS col_2, t1.a - t1.b AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4
---- hash rowsort
30 tuples hashing to 13596ff760d2bd824d35c61351f80bb9

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.a > t1.b RETURN t1.a AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2
---- hash rowsort
20 tuples hashing to 4ff7b2fb85463226b58936d09fcc37e8

-STATEMENT MATCH (t1:t1) RETURN abs(t1.a) AS col_1, t1.a + t1.b * 2 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5
---- hash rowsort
30 tuples hashing to 32a03da26d11e34294e2baaf4f91be64

-STATEMENT MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 RETURN t1.c - t1.d AS col_1
---- hash rowsort
30 tuples hashing to 5597b8fa34613aadc270053ea54637e5

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE NOT t1.b IS Null AND coalesce(t1.a) <> 0 RETURN t1.b AS col_1, t1.b - t1.c AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, abs(t1.a) AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5
---- hash rowsort
27 tuples hashing to 75d9abddd431af42ba006b25f9f77c64

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR NOT t1.b IS Null RETURN t1.e AS col_1
---- hash rowsort
28 tuples hashing to d2d7ee3c92135bb07a4e693017a465fa

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, t1.c - t1.d AS col_4, t1.e AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_6, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_7
---- hash rowsort
15 tuples hashing to a1b6d1f25e288ac504cdf45104e5bcea

-STATEMENT MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 RETURN abs(t1.a) AS col_1, t1.a - t1.b AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.a + t1.b * 2 AS col_4
---- hash rowsort
30 tuples hashing to cae2effd4f5bfa6d7cc193ec4fec967d

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, t1.a - t1.b AS col_5
---- hash rowsort
24 tuples hashing to 47ef020bd750bd779fc3a87e56ca1e40

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR (t1.e > t1.c OR t1.e < t1.d) RETURN abs(t1.a) AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.a AS col_3
---- hash rowsort
22 tuples hashing to f25bc21e77b0f80a903714dbc26594bf

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR t1.d > t1.e RETURN t1.d AS col_1, t1.b AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.a - t1.b AS col_5, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_6
---- hash rowsort
20 tuples hashing to 094387372652ced028edd125dc034efc

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b RETURN t1.e AS col_1, t1.b - t1.c AS col_2, abs(t1.b - t1.c) AS col_3, t1.c AS col_4, t1.c - t1.d AS col_5
---- hash rowsort
17 tuples hashing to cf909c6ca2632f334d02ace97fe65161

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.b AS col_1, t1.a - t1.b AS col_2, t1.d AS col_3, t1.a + t1.b * 2 AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, t1.b - t1.c AS col_6, t1.a + t1.b * 2 + t1.c * 3 AS col_7
---- hash rowsort
17 tuples hashing to 46dcc426265c9c6d3e5a95476b486aea

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR t1.a IS Null OR t1.c > t1.d RETURN t1.d - t1.e AS col_1, t1.a - t1.b AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, t1.a + t1.b * 2 AS col_4, abs(t1.b - t1.c) AS col_5, t1.c - t1.d AS col_6
---- hash rowsort
15 tuples hashing to 24562a4b1a2aff1a1a2f2cf5c4224a17

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR t1.a > t1.b OR t1.d > t1.e RETURN t1.a + t1.b * 2 AS col_1
---- hash rowsort
28 tuples hashing to 2fcc0f3b5e0753a1f915168aa80928cb

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e RETURN t1.c - t1.d AS col_1, t1.b - t1.c AS col_2, t1.e AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4
---- hash rowsort
11 tuples hashing to 2a856cf96ef2c2ee896fde7ac15baf59

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b OR coalesce(t1.a) <> 0 RETURN t1.e AS col_1
---- hash rowsort
30 tuples hashing to b9f09a0d6206ee3b897ed8a2dc580e1d

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.a > t1.b AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.b AS col_4
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.c AS col_1
---- hash rowsort
29 tuples hashing to 725eda52ed4dea9e7b98db61d7453ca7

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.d > t1.e RETURN t1.e AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, t1.a AS col_5, t1.b - t1.c AS col_6
---- hash rowsort
6 tuples hashing to 36e5ee818c5f66d85faa44d5c242e3a3

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.e AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, abs(t1.b - t1.c) AS col_3, t1.a - t1.b AS col_4
---- 0


-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.a > t1.b OR t1.c > t1.d RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, abs(t1.b - t1.c) AS col_2, abs(t1.a) AS col_3
---- hash rowsort
25 tuples hashing to b9e8c83a8bc74e55aa613fb8bbae83b5

-STATEMENT MATCH (t1:t1) RETURN t1.c AS col_1, t1.b AS col_2, abs(t1.b - t1.c) AS col_3, t1.e AS col_4, t1.d - t1.e AS col_5, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_6
---- hash rowsort
30 tuples hashing to 1d8546ea2c7b3aec706db25a0a5582a5

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.c - t1.d AS col_1, t1.d AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3
---- hash rowsort
3 tuples hashing to 8426b640ba20050345c3bd7757382d40

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a - t1.b AS col_1, t1.a + t1.b * 2 AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3
---- hash rowsort
24 tuples hashing to 6d2826ad5fa4926835fd3b121dde9c29

-STATEMENT MATCH (t1:t1) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.c AS col_2, t1.a + t1.b * 2 AS col_3
---- hash rowsort
30 tuples hashing to 46952a3594167f104f7b2fc9d0667fcb

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.a - t1.b AS col_3, abs(t1.b - t1.c) AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5
---- hash rowsort
27 tuples hashing to 1e6ea1ffb48cdd83eb8219a2171309ae

-STATEMENT MATCH (t1:t1) WHERE NOT t1.b IS Null RETURN t1.a + t1.b * 2 AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2
---- hash rowsort
27 tuples hashing to 944c3b21b23622f327b6f5023635db60

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a AS col_1, t1.e AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, abs(t1.a) AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_6, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_7
---- hash rowsort
16 tuples hashing to 4b7e9fe3af074b9e61a12ca304736451

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.e > t1.c OR t1.e < t1.d) OR t1.b > t1.c RETURN t1.d - t1.e AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.a + t1.b * 2 AS col_3, abs(t1.b - t1.c) AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5
---- hash rowsort
25 tuples hashing to a4c2c5b599a12eb25e02a7a49e712b33

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.d > t1.e OR NOT t1.b IS Null OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.c AS col_3, t1.d AS col_4, t1.b - t1.c AS col_5, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_6, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_7
---- hash rowsort
29 tuples hashing to 1c10d302b1c0ebea0ed1b3f458977b97

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.c - t1.d AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3
---- 2
1612|-2|0
1902|-3|3

-STATEMENT MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 OR NOT t1.b IS Null RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.a + t1.b * 2 AS col_3, t1.b AS col_4
---- hash rowsort
30 tuples hashing to 1851d361af710203059df04bf29673a7

-STATEMENT MATCH (t1:t1) RETURN t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.b AS col_3, t1.a + t1.b * 2 AS col_4
---- hash rowsort
30 tuples hashing to 10ce41f677d9d05127e3b704d98bc101

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.b - t1.c AS col_1, t1.b AS col_2, t1.a + t1.b * 2 AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, t1.c AS col_5, t1.d - t1.e AS col_6
---- hash rowsort
10 tuples hashing to acdf487118a15ea371915fc5f0f267ff

-STATEMENT MATCH (t1:t1) WHERE t1.a IS Null AND coalesce(t1.a) <> 0 RETURN t1.a AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, abs(t1.b - t1.c) AS col_5
---- hash rowsort
2 tuples hashing to 40d0564520ae2c3653e39dbaed07d225

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.a IS Null OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.b AS col_1, t1.b - t1.c AS col_2, t1.e AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, t1.a AS col_6
---- hash rowsort
12 tuples hashing to 2f4add22910ef08e36f4a9b91127d083

-STATEMENT MATCH (t1:t1) RETURN t1.a - t1.b AS col_1, t1.d - t1.e AS col_2
---- hash rowsort
30 tuples hashing to c60a057f1b0709ced3374a0ceb82507d

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1
---- 8
1985
2046
2131
2728
2949
3399



-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.d - t1.e AS col_1, t1.a AS col_2, t1.b - t1.c AS col_3, t1.e AS col_4, t1.d AS col_5
---- hash rowsort
2 tuples hashing to 2937bb482629986f024c94114abb48d4

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a + t1.b * 2 AS col_2
---- hash rowsort
16 tuples hashing to 9e90687d2b7ec623140ca90b9f8aa467

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE NOT t1.b IS Null RETURN t1.a - t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, abs(t1.b - t1.c) AS col_3, t1.d AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_6, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_7
---- hash rowsort
27 tuples hashing to ca41f560b82abfc4ff509877b9d62b5d

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1
---- 7
1325
1371
1411
1828
1964
2264


-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, abs(t1.b - t1.c) AS col_5, t1.a + t1.b * 2 AS col_6
---- hash rowsort
17 tuples hashing to 4a7a447f6d5243f37593760f719d4ded

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND coalesce(t1.a) <> 0 AND t1.a IS Null RETURN abs(t1.a) AS col_1
---- 2



-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.c > t1.d RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.c - t1.d AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.e AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_6, t1.b AS col_7
---- hash rowsort
13 tuples hashing to 8bc441725523cf82da0b2509fef56441

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a + t1.b * 2 AS col_1, t1.a - t1.b AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4
---- hash rowsort
18 tuples hashing to 3f86e6dcd60d73671fd42bf747b97ef2

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.b - t1.c AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.d - t1.e AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5
---- hash rowsort
8 tuples hashing to 514495abd297c1a057a65b95c2ad204c

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.a - t1.b AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.c - t1.d AS col_3, t1.b AS col_4
---- hash rowsort
30 tuples hashing to ab4368667b081082064b8857255d4dfb

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND t1.a > t1.b RETURN t1.c - t1.d AS col_1, abs(t1.b - t1.c) AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3
---- hash rowsort
10 tuples hashing to 7df01c794d7280c4cda156ce4cc15349

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.b AS col_1, t1.a AS col_2
---- hash rowsort
8 tuples hashing to 468bd5a398285c1f8e2aa9340125c06b

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.e > t1.a AND t1.e < t1.b) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 AS col_2, t1.a AS col_3, t1.b AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5, t1.d - t1.e AS col_6
---- hash rowsort
14 tuples hashing to 961fc2f4c5ee210998a114c2652508ac

-STATEMENT MATCH (t1:t1) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, abs(t1.a) AS col_2, t1.d - t1.e AS col_3, t1.e AS col_4, t1.b AS col_5
---- hash rowsort
30 tuples hashing to 16d7b4faefe1748ff669ad3787e9d6ed

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.a > t1.b AND (t1.e > t1.c OR t1.e < t1.d) RETURN t1.d AS col_1, abs(t1.a) AS col_2, t1.c AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.e AS col_5
---- hash rowsort
5 tuples hashing to b86aacf967a3caef141c367a037d8b82

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c RETURN t1.d - t1.e AS col_1, t1.a + t1.b * 2 AS col_2, t1.b - t1.c AS col_3, abs(t1.b - t1.c) AS col_4, t1.c - t1.d AS col_5, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_6, t1.a + t1.b * 2 + t1.c * 3 AS col_7
---- hash rowsort
13 tuples hashing to f466adf4b72001a7e56f1288f645df0b

-STATEMENT MATCH (t1:t1) WHERE NOT t1.b IS Null AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1
---- hash rowsort
26 tuples hashing to 5c41d2c888f71bdfb301a5449bb2316d

-STATEMENT MATCH (t1:t1) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.c - t1.d AS col_2
---- hash rowsort
30 tuples hashing to b2ba365f7b87dd73ac4f1c85175748ca

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.c > t1.d RETURN abs(t1.a) AS col_1, t1.b - t1.c AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.a - t1.b AS col_5, t1.c AS col_6, t1.c - t1.d AS col_7
---- hash rowsort
2 tuples hashing to 060c8961d4cff53963cd257a6eee9284

-STATEMENT MATCH (t1:t1) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.d - t1.e AS col_3
---- hash rowsort
30 tuples hashing to bbd77b718f2719f7454986877792ef5e

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.e AS col_3, t1.a AS col_4
---- hash rowsort
30 tuples hashing to 3fa24bffa729a10cb7039b714b42e5d4

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.c > t1.d RETURN t1.b - t1.c AS col_1, t1.e AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3
---- hash rowsort
18 tuples hashing to 881857dc2c171a5b5629a1b02f5ace04

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.a + t1.b * 2 AS col_3, t1.a AS col_4, t1.a - t1.b AS col_5, t1.b AS col_6, t1.e AS col_7
---- hash rowsort
2 tuples hashing to 76706d6bfaa3ef72a37e5472f2087545

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND NOT t1.b IS Null RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a + t1.b * 2 AS col_3, t1.d - t1.e AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_6, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_7
---- hash rowsort
14 tuples hashing to 3c732f810d9ffae30a7349df09c761e4

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR t1.c > t1.d RETURN t1.d AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.c AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5, t1.b AS col_6
---- hash rowsort
22 tuples hashing to 11730d9f03d7ecbc708a87dc3640c235

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND t1.b > t1.c AND t1.d > t1.e RETURN t1.e AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, abs(t1.b - t1.c) AS col_5, t1.d AS col_6
---- hash rowsort
2 tuples hashing to 9f73d785e22ab32232fd62d9ad1f340d

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND coalesce(t1.a) <> 0 AND t1.a IS Null RETURN t1.a + t1.b * 2 AS col_1
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.a AS col_2, t1.e AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4
---- hash rowsort
8 tuples hashing to e068612da5055a85525a6525c7174a3f

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR coalesce(t1.a) <> 0 OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.e AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.a + t1.b * 2 AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5
---- hash rowsort
30 tuples hashing to efe403e7b4ddc333a02fb214bc2a480e

-STATEMENT MATCH (t1:t1) RETURN t1.c - t1.d AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2
---- hash rowsort
30 tuples hashing to cad6ac29e9baa7160c13794239affff0

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.b > t1.c RETURN t1.c - t1.d AS col_1, t1.b - t1.c AS col_2
---- hash rowsort
13 tuples hashing to 153104bccece0f4b8983f53c4fce4711

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e RETURN t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5, t1.a + t1.b * 2 AS col_6, t1.c AS col_7
---- hash rowsort
11 tuples hashing to 6e95b47bb3fde264a5703ac9d978a586

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR NOT t1.b IS Null RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.b AS col_3, t1.c - t1.d AS col_4
---- hash rowsort
27 tuples hashing to 8e4e18bd94b85bed75cf03d3a9aa0f0d

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.e > t1.a AND t1.e < t1.b) RETURN t1.b - t1.c AS col_1, abs(t1.b - t1.c) AS col_2, t1.d - t1.e AS col_3, t1.a + t1.b * 2 AS col_4, t1.c - t1.d AS col_5
---- 0


-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR t1.a IS Null RETURN t1.c - t1.d AS col_1, t1.b AS col_2
---- hash rowsort
26 tuples hashing to 768787064bded9f5179020bdd71a7ca4

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.b AS col_1
---- hash rowsort
26 tuples hashing to 45166f9056e31d2a2c5a729b92a8069f

-STATEMENT MATCH (t1:t1) WHERE NOT t1.b IS Null OR t1.a > t1.b RETURN abs(t1.a) AS col_1
---- hash rowsort
27 tuples hashing to c6c480f662d91f78cd743fd4c1283663

-STATEMENT MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 AND NOT t1.b IS Null RETURN t1.c AS col_1, t1.b - t1.c AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5, t1.a AS col_6, t1.c - t1.d AS col_7
---- hash rowsort
27 tuples hashing to 3b5e129e362e947f42addc2454cc9d00

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.b > t1.c OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, abs(t1.b - t1.c) AS col_2, t1.b - t1.c AS col_3, t1.d - t1.e AS col_4, t1.a + t1.b * 2 AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_6
---- hash rowsort
23 tuples hashing to 99547f63b16be41e4b6d1ce1ecd6bbba

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.c - t1.d AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.a - t1.b AS col_3, t1.c AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5
---- hash rowsort
30 tuples hashing to 0a190d0a39d0986d864cdafb35899dec

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.d AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.c - t1.d AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5
---- hash rowsort
15 tuples hashing to 6f1161b8b64ef7b0fc274f04938506ff

-STATEMENT MATCH (t1:t1) RETURN t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.c AS col_3, t1.a + t1.b * 2 AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5
---- hash rowsort
30 tuples hashing to 480f85ae67f16e760cb55c4afc93a670

-STATEMENT MATCH (t1:t1) WHERE NOT t1.b IS Null AND t1.b > t1.c RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1
---- hash rowsort
13 tuples hashing to bf5f4ef7a0280c43b79f03405b636d31

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) RETURN t1.d - t1.e AS col_1
---- 3
-2
1
2

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.c AS col_2, t1.a AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, t1.a - t1.b AS col_5
---- 0


-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.e AS col_1, t1.c - t1.d AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.a + t1.b * 2 AS col_4, t1.b AS col_5, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_6, t1.c AS col_7
---- hash rowsort
3 tuples hashing to 81a337f03d1dc2d11b2f29cda3091722

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR t1.a > t1.b RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.a - t1.b AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3
---- hash rowsort
24 tuples hashing to 82acf3b1c44d191e300317b99459564f

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1
---- hash rowsort
30 tuples hashing to fd6d6825820cf653aceb2d72af4a5983

-STATEMENT MATCH (t1:t1) RETURN t1.c - t1.d AS col_1, t1.a AS col_2, t1.b AS col_3, t1.d AS col_4, t1.b - t1.c AS col_5
---- hash rowsort
30 tuples hashing to 805631fbc56c324b76a9e5def0b20628

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a AS col_1, t1.c AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5
---- hash rowsort
10 tuples hashing to 8b122e9905ab4554fac21a8adb7e15bb

-STATEMENT MATCH (t1:t1) WHERE NOT t1.b IS Null AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.c - t1.d AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, abs(t1.a) AS col_4
---- hash rowsort
8 tuples hashing to 7df290349b27acbd369f33e1bfd8fe4a

-STATEMENT MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.a + t1.b * 2 AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.a - t1.b AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5
---- hash rowsort
2 tuples hashing to f554e1ec3679835b79c7b5798663cdfd

-STATEMENT MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, abs(t1.a) AS col_2, t1.c AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.d AS col_5
---- hash rowsort
30 tuples hashing to 549a029db9acfbfd3deb7f78189f3707

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE NOT t1.b IS Null AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.c AS col_3, t1.d AS col_4, t1.b AS col_5
---- hash rowsort
15 tuples hashing to b90bf883e6dde333753b1eb5b7b41d7b

-STATEMENT MATCH (t1:t1) WHERE t1.a IS Null RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.d AS col_3, abs(t1.a) AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5, t1.b - t1.c AS col_6
---- hash rowsort
2 tuples hashing to 515b61c8383a5d4b24b24d9b52ab5a43

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a - t1.b AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.b - t1.c AS col_5, t1.a AS col_6, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_7
---- hash rowsort
17 tuples hashing to 1ff69bb4e6898fa319a064037e2747bc

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR t1.a IS Null RETURN abs(t1.a) AS col_1
---- hash rowsort
15 tuples hashing to ee5e469b70e69479c72ba919407850bf

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN abs(t1.a) AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.c AS col_3, t1.e AS col_4
---- hash rowsort
30 tuples hashing to 37c38db934bd2d3c307dd2619bfb035a

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.a - t1.b AS col_5
---- hash rowsort
10 tuples hashing to 1a25f2981afcfe3b90b78e5f46d408dd

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.b > t1.c RETURN abs(t1.a) AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.a AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.a - t1.b AS col_5
---- hash rowsort
2 tuples hashing to 97311a820c01f81122bd9a43101bb2b3

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.b > t1.c AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.b - t1.c AS col_1, t1.a + t1.b * 2 AS col_2, t1.d AS col_3, abs(t1.b - t1.c) AS col_4
---- hash rowsort
4 tuples hashing to 955f14c539e3692f1b86ab3a24683a19

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c RETURN t1.d - t1.e AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, abs(t1.a) AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, t1.b - t1.c AS col_5
---- hash rowsort
13 tuples hashing to e3d9292d05db4167a92c6229e4caa760

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR t1.d > t1.e OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.b - t1.c AS col_1
---- hash rowsort
28 tuples hashing to d4cd424a829b1432ef86746a9204209d

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.c AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.a + t1.b * 2 AS col_3, t1.a - t1.b AS col_4
---- hash rowsort
18 tuples hashing to 370fe299a3734448a7be6672f01c3a94

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN abs(t1.b - t1.c) AS col_1, t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.b AS col_4, t1.a AS col_5
---- hash rowsort
10 tuples hashing to 07bc5bca23ad9ae8a819dfac639082fd

-STATEMENT MATCH (t1:t1) WHERE t1.a IS Null OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.a AS col_2, t1.a - t1.b AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4
---- hash rowsort
26 tuples hashing to 55a5e0422172b0c7a6b2067252cce354

-STATEMENT MATCH (t1:t1) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2
---- hash rowsort
30 tuples hashing to 2f9a934526ac4a7f7c28016425042260

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR t1.d > t1.e RETURN t1.b AS col_1, abs(t1.a) AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, abs(t1.b - t1.c) AS col_4, t1.d - t1.e AS col_5
---- hash rowsort
12 tuples hashing to 82d16a26b3d57b3cc239c4f7a9593f7c

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND (t1.e > t1.a AND t1.e < t1.b) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.c - t1.d AS col_2, t1.e AS col_3, abs(t1.a) AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5, abs(t1.b - t1.c) AS col_6
---- hash rowsort
3 tuples hashing to 23bd2aa9005d7a79f92b46bfe852378d

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND t1.a IS Null AND t1.a > t1.b RETURN t1.d - t1.e AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.a AS col_3
---- 0


-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.a + t1.b * 2 AS col_2, t1.c - t1.d AS col_3, t1.b - t1.c AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5
---- hash rowsort
30 tuples hashing to 610f0faec87fe3b6c7fe13df512df7d8

-STATEMENT MATCH (t1:t1) WHERE NOT t1.b IS Null RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.a + t1.b * 2 AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.d - t1.e AS col_5, abs(t1.b - t1.c) AS col_6
---- hash rowsort
27 tuples hashing to e98414941114afc92bb0247f70af52da

-STATEMENT MATCH (t1:t1) RETURN abs(t1.b - t1.c) AS col_1
---- hash rowsort
30 tuples hashing to c289bcde2e1a495d6cc09dde069c6c87

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.b - t1.c AS col_1
---- 2
-1
4

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 OR t1.c > t1.d RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.b AS col_3
---- hash rowsort
30 tuples hashing to c5fa723aa4e2c42050943e4693f1e923

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND t1.a IS Null RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.c AS col_2, t1.a AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5
---- 1
1|113|||1120

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5, t1.b AS col_6
---- hash rowsort
13 tuples hashing to eac728c6ddb91ccd31a0d1128417639c

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.e > t1.c OR t1.e < t1.d) OR t1.b > t1.c RETURN t1.d - t1.e AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2
---- hash rowsort
26 tuples hashing to 7315fb2782e02a62e78599ef812d5d8e

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.c > t1.d OR t1.b > t1.c RETURN abs(t1.b - t1.c) AS col_1, t1.a - t1.b AS col_2, t1.d - t1.e AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_6, t1.a AS col_7
---- hash rowsort
22 tuples hashing to 253db2ba2de764cddb828c61c33fa94b

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.b AS col_1, t1.a - t1.b AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.c AS col_5, t1.c - t1.d AS col_6
---- hash rowsort
2 tuples hashing to 61f4eb32e9f9cee66661e5545d3b1c99

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR t1.a IS Null OR t1.d > t1.e RETURN t1.a AS col_1, t1.a + t1.b * 2 AS col_2, t1.a - t1.b AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4
---- hash rowsort
17 tuples hashing to 17710e7f1160312d5f85b00b3baef24b

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.b AS col_4, t1.b - t1.c AS col_5, t1.d - t1.e AS col_6
---- hash rowsort
17 tuples hashing to af66c8797cf0a18cf8964083d275dc3e

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b RETURN abs(t1.a) AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.c AS col_3, t1.d - t1.e AS col_4, t1.a + t1.b * 2 AS col_5, t1.e AS col_6, t1.b AS col_7
---- hash rowsort
17 tuples hashing to a928e4c940a05e1636f24ad9d8d056c5

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR (t1.e > t1.a AND t1.e < t1.b) OR t1.c > t1.d RETURN t1.a - t1.b AS col_1, abs(t1.b - t1.c) AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3
---- hash rowsort
18 tuples hashing to 750a489b4c6cdcd65e8153612541edb4

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3
---- hash rowsort
30 tuples hashing to a3cc5ce52e625e50e112a70b5afa9d9f

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 AS col_1, t1.e AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.b AS col_4, t1.c - t1.d AS col_5
---- hash rowsort
30 tuples hashing to 61e0ca2c4623a448c09ffea6be3bd5d0

-STATEMENT MATCH (t1:t1) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.b AS col_3
---- hash rowsort
30 tuples hashing to b4010ae6b698a00474a73f648303f691

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR coalesce(t1.a) <> 0 RETURN t1.d AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2
---- hash rowsort
30 tuples hashing to 338667821f799dd406c1ce8fc2fcd75b

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, abs(t1.b - t1.c) AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_6
---- hash rowsort
30 tuples hashing to a092631ff16c49852d19bcde8bb84f97

-STATEMENT MATCH (t1:t1) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.c - t1.d AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, t1.d AS col_4, t1.b AS col_5
---- hash rowsort
30 tuples hashing to 33372d8e30d702bdbd9868d693fc2202

-STATEMENT MATCH (t1:t1) RETURN t1.d AS col_1
---- hash rowsort
30 tuples hashing to 169a721efb38857a8de46fcd1500025a

-STATEMENT MATCH (t1:t1) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.c - t1.d AS col_2, t1.a AS col_3, t1.b - t1.c AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_6
---- hash rowsort
30 tuples hashing to 515844256bb85001d2cb75ee98b5a8f8

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1
---- hash rowsort
17 tuples hashing to 4a6c075c0bc5ddff6a754adcddbe79f2

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.d > t1.e RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3
---- hash rowsort
11 tuples hashing to 03629e50bc54a9c68b8e0642de1d4b7f

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND coalesce(t1.a) <> 0 RETURN t1.c AS col_1, t1.b - t1.c AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3
---- hash rowsort
13 tuples hashing to c01cb38d1477fb445451a60bccfb3148

-STATEMENT MATCH (t1:t1) WHERE t1.a IS Null OR NOT t1.b IS Null RETURN t1.a AS col_1
---- hash rowsort
27 tuples hashing to c6c480f662d91f78cd743fd4c1283663

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.d > t1.e AND t1.a > t1.b RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a - t1.b AS col_2, t1.b - t1.c AS col_3, t1.c - t1.d AS col_4, abs(t1.b - t1.c) AS col_5, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_6
---- hash rowsort
6 tuples hashing to 64c7b21a3631601a574791d879f549c1

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b RETURN t1.b AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2
---- hash rowsort
17 tuples hashing to 69ba5ba7b54faa8998a04eb07686fe15

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1
---- 2
107
127

-STATEMENT MATCH (t1:t1) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.a - t1.b AS col_3, t1.c AS col_4
---- hash rowsort
30 tuples hashing to bb756a7a0a00511145e15f30e94dc3ab

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a - t1.b AS col_1
---- 8
1
1
2
2
2
2
3
4

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.d > t1.e OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.c - t1.d AS col_2, t1.b AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, abs(t1.b - t1.c) AS col_6, t1.a - t1.b AS col_7
---- hash rowsort
16 tuples hashing to 0f2897475eaf6ca131d1b9e12559fcec

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.e AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3
---- hash rowsort
17 tuples hashing to c1b4d722bbccd5388ce36d4da5a272fe

-STATEMENT MATCH (t1:t1) WHERE t1.a IS Null OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.b AS col_1, t1.d AS col_2, t1.b - t1.c AS col_3
---- hash rowsort
26 tuples hashing to d17be0197a4dc9db4ecd65acbbf40536

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, t1.a - t1.b AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, abs(t1.b - t1.c) AS col_6, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_7
---- hash rowsort
10 tuples hashing to 9a7478a4b8f1a1d7ee51ac83087d9623

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.e > t1.c OR t1.e < t1.d) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1
---- 7
1300
1390
1430
1580
364
398
458

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR t1.b > t1.c OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.c - t1.d AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.c AS col_5, t1.a AS col_6, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_7
---- hash rowsort
19 tuples hashing to eb09696995447bcf7629e722d6bce242

-STATEMENT MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND t1.a IS Null RETURN t1.d - t1.e AS col_1
---- 0


-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.a AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5, t1.e AS col_6, t1.d AS col_7
---- hash rowsort
30 tuples hashing to 9b0beb9869ed0a96cfbcda0f59b83405

-STATEMENT MATCH (t1:t1) RETURN t1.a AS col_1
---- hash rowsort
30 tuples hashing to 9a6afb6b859fc856aafb6a7af11a38e4

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.c > t1.d OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1
---- hash rowsort
28 tuples hashing to 486fb8b2bb23aeab9339f10803b81228

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR NOT t1.b IS Null RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.c AS col_3, t1.b AS col_4
---- hash rowsort
27 tuples hashing to f3cb3836a7de227290cce6b4a51594bb

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR t1.d > t1.e OR t1.a > t1.b RETURN t1.d AS col_1, t1.c - t1.d AS col_2, t1.a + t1.b * 2 AS col_3
---- hash rowsort
25 tuples hashing to a4ce622cd218c8c4279544e5142a5f17

-STATEMENT MATCH (t1:t1) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.c AS col_2, abs(t1.a) AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_6, t1.a - t1.b AS col_7
---- hash rowsort
30 tuples hashing to 1cde2c74be53c5dce96c25052e2e10ad

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, t1.e AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, t1.a - t1.b AS col_5, t1.b - t1.c AS col_6, t1.d AS col_7
---- hash rowsort
13 tuples hashing to 406047a5fba16f6298cc8865ceb16d6d

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 AS col_1, abs(t1.b - t1.c) AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.d AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5
---- hash rowsort
30 tuples hashing to a2a674cd1ccfa13f299403584124d24b

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2
---- hash rowsort
7 tuples hashing to 42b7e1c03bf06145255a8f16dad4070e

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND t1.d > t1.e RETURN t1.e AS col_1, t1.b - t1.c AS col_2, t1.a + t1.b * 2 AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, t1.d - t1.e AS col_5, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_6, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_7
---- 0


-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.d > t1.e RETURN t1.d AS col_1, t1.b - t1.c AS col_2
---- hash rowsort
11 tuples hashing to 59fc2a0cb9d6eb15500b2a01873c9267

-STATEMENT MATCH (t1:t1) WHERE t1.a IS Null AND t1.c > t1.d RETURN t1.b - t1.c AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.c AS col_3, t1.a + t1.b * 2 AS col_4, t1.d - t1.e AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_6, t1.c - t1.d AS col_7
---- 1
-2|18|208||||1

-STATEMENT MATCH (t1:t1) RETURN t1.b AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, t1.a + t1.b * 2 AS col_3
---- hash rowsort
30 tuples hashing to 2a911ac2155259959d16fcce2279272b

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.e > t1.a AND t1.e < t1.b) RETURN t1.e AS col_1, t1.b - t1.c AS col_2, abs(t1.b - t1.c) AS col_3, abs(t1.a) AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, t1.d AS col_6
---- hash rowsort
5 tuples hashing to b79d26d49660927b80fca503f834f14f

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c RETURN t1.d AS col_1, t1.c - t1.d AS col_2, abs(t1.b - t1.c) AS col_3, t1.b - t1.c AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5
---- hash rowsort
13 tuples hashing to 3e557fbf49bddf5af6346144a1ae8837

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE NOT t1.b IS Null AND (t1.e > t1.c OR t1.e < t1.d) AND t1.c > t1.d RETURN t1.a - t1.b AS col_1, t1.a AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, abs(t1.a) AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, t1.b - t1.c AS col_6
---- hash rowsort
8 tuples hashing to 0e34bea3ef5254baecdfc598a768bad7

-STATEMENT MATCH (t1:t1) RETURN abs(t1.b - t1.c) AS col_1, t1.e AS col_2, t1.a + t1.b * 2 AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, abs(t1.a) AS col_5, t1.c - t1.d AS col_6, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_7
---- hash rowsort
30 tuples hashing to 5a6fed1060cbe05c56269ecc68bf4a0a

-STATEMENT MATCH (t1:t1) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.d AS col_2, t1.e AS col_3, t1.c - t1.d AS col_4, t1.a AS col_5, abs(t1.a) AS col_6, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_7
---- hash rowsort
30 tuples hashing to 0eaa58bc4fb56af423e73d84dbc298c7

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.b AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, abs(t1.b - t1.c) AS col_5, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_6
---- hash rowsort
30 tuples hashing to 6def4225a77ed61ec70dfdfab8f4294a

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR coalesce(t1.a) <> 0 RETURN t1.b AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, abs(t1.b - t1.c) AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4
---- hash rowsort
30 tuples hashing to aa50fc18d4fe0a775060a5289c7df0f1

-STATEMENT MATCH (t1:t1) WHERE t1.a IS Null RETURN abs(t1.a) AS col_1, t1.c AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4
---- 2
|113||444
|208||444

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.d > t1.e RETURN abs(t1.b - t1.c) AS col_1, t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.a - t1.b AS col_4, t1.c - t1.d AS col_5, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_6, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_7
---- hash rowsort
11 tuples hashing to c2770ceec6cb227337e0706504a617e0

-STATEMENT MATCH (t1:t1) RETURN t1.c AS col_1, t1.a - t1.b AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.e AS col_4, abs(t1.a) AS col_5
---- hash rowsort
30 tuples hashing to a14b7f2ccb8b1fae67646b4fb3b5113b

-STATEMENT MATCH (t1:t1) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.b AS col_2, t1.c AS col_3, t1.a + t1.b * 2 AS col_4
---- hash rowsort
30 tuples hashing to 02413ad3886e868d10e60923c66d937b

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a - t1.b AS col_1, t1.b - t1.c AS col_2, t1.a + t1.b * 2 AS col_3, t1.c - t1.d AS col_4
---- hash rowsort
22 tuples hashing to 812e25e42aa220948974f1eec8a1ddf1

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.a + t1.b * 2 AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.d - t1.e AS col_4
---- hash rowsort
21 tuples hashing to d1c417e25ee0ab9d11e97402e0f5084e

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND t1.c > t1.d AND t1.a IS Null RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.c - t1.d AS col_2
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.b AS col_1, t1.a - t1.b AS col_2, t1.d - t1.e AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4
---- hash rowsort
15 tuples hashing to 537d3f9d63f0f7718ecf18cfd06d654a

-STATEMENT MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 OR t1.b > t1.c RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.b AS col_2, t1.a AS col_3, t1.e AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5
---- hash rowsort
30 tuples hashing to 1e4b4b28a8b6a2e471e50ea659610358

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR NOT (t1.d >= 110 AND t1.d <= 150) OR (t1.e > t1.c OR t1.e < t1.d) RETURN t1.b - t1.c AS col_1, t1.a AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.c - t1.d AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_6, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_7
---- hash rowsort
25 tuples hashing to cfcb51efe7d807a4c1df7e63499e1f7e

-STATEMENT MATCH (t1:t1) RETURN t1.a - t1.b AS col_1, t1.c - t1.d AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, t1.d AS col_6
---- hash rowsort
30 tuples hashing to 910f2c92d56f1b0d38588697acb0b1b8

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3
---- hash rowsort
30 tuples hashing to ac4a1d203ab70c5087569113ced7147f

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR t1.c > t1.d OR t1.a > t1.b RETURN t1.c AS col_1
---- hash rowsort
29 tuples hashing to 725eda52ed4dea9e7b98db61d7453ca7

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.b AS col_2, abs(t1.a) AS col_3
---- hash rowsort
30 tuples hashing to dfaa311be6dc8e4d21f0120e3a099cf0

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND t1.c > t1.d AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1
---- 4
111
111
333
444

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.b > t1.c RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.d AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4
---- hash rowsort
13 tuples hashing to 8a4f59d60224b0bb54df3d8b9940b67f

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.d > t1.e OR t1.b > t1.c RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.d - t1.e AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5
---- hash rowsort
20 tuples hashing to 8037b1bcfe636f3ff495bfd825d53e0d

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.a + t1.b * 2 AS col_3
---- hash rowsort
13 tuples hashing to 841a895d7644c667c2fad00c7f68e8e5

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR t1.b > t1.c OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1
---- hash rowsort
25 tuples hashing to 152789c2cc255e73e1326c66cc7fb1e3

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND t1.a IS Null RETURN t1.d - t1.e AS col_1, t1.a AS col_2, t1.d AS col_3
---- 1
4||114

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.b - t1.c AS col_3, t1.a + t1.b * 2 AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5
---- hash rowsort
21 tuples hashing to 8561ffccf2f0932bb1c2a63c34257383

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE NOT t1.b IS Null RETURN abs(t1.a) AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, t1.e AS col_3
---- hash rowsort
27 tuples hashing to 0640407785b3503fdb251a182b6d57ab

-STATEMENT MATCH (t1:t1) RETURN t1.d - t1.e AS col_1, t1.a - t1.b AS col_2, t1.c AS col_3, t1.c - t1.d AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5
---- hash rowsort
30 tuples hashing to 632b4850194bf60509de90f1feabfb2a

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN abs(t1.b - t1.c) AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, abs(t1.a) AS col_4, t1.a AS col_5, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_6
---- hash rowsort
2 tuples hashing to 5b25ff1c58c12b1f100ac28b4685433d

-STATEMENT MATCH (t1:t1) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.b AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3
---- hash rowsort
30 tuples hashing to 8e7a27827336c83e4b452eda1e64be51

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a + t1.b * 2 AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4
---- hash rowsort
27 tuples hashing to ca801d7b57914978b4b6e8332ae88f58

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.c > t1.d RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, abs(t1.a) AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.b - t1.c AS col_5
---- hash rowsort
10 tuples hashing to ac4b616ec0c322bb2be9a742fbc3e1b4

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.c > t1.d AND NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.d - t1.e AS col_1, t1.a AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, abs(t1.a) AS col_4, t1.b AS col_5
---- hash rowsort
4 tuples hashing to 02253cc820958e19bdcdc9135a965d7c

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND t1.c > t1.d RETURN CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3
---- hash rowsort
8 tuples hashing to 82a9f46f2908306f2348047b589eeac0

-STATEMENT MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 RETURN t1.c - t1.d AS col_1, t1.e AS col_2
---- hash rowsort
30 tuples hashing to 588535d9ebc6d149a7057b9468ce599d

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.d - t1.e AS col_2, abs(t1.a) AS col_3, t1.a + t1.b * 2 AS col_4, t1.c AS col_5
---- hash rowsort
30 tuples hashing to 6e1d4a7fb7f2779d84fb3030fdecb95a

-STATEMENT MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1
---- hash rowsort
30 tuples hashing to ec9f02c46c399db521c47dd9cb6a40dd

-STATEMENT MATCH (t1:t1) RETURN t1.a - t1.b AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.a + t1.b * 2 AS col_3, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_4, t1.c - t1.d AS col_5, t1.b - t1.c AS col_6
---- hash rowsort
30 tuples hashing to d7acf8cfbd68a26fe1476b64dd164ef2

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND t1.a IS Null AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN abs(t1.a) AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4
---- 0


-STATEMENT MATCH (t1:t1) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1
---- hash rowsort
30 tuples hashing to 9589cc1f14474dd0aa42c579d2bfedb1

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.c - t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.a + t1.b * 2 AS col_4, abs(t1.a) AS col_5, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_6, t1.e AS col_7
---- hash rowsort
30 tuples hashing to 9756db9aac4e087c276ae4c671e83fdc

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) OR t1.c > t1.d RETURN abs(t1.a) AS col_1, t1.c AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3
---- hash rowsort
26 tuples hashing to 601783bc6cee105e35b85bffdefdabf0

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) RETURN t1.d AS col_1, t1.b - t1.c AS col_2, t1.c - t1.d AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5
---- hash rowsort
21 tuples hashing to 7e4e0609be3b34884ac960d168df1d08

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.e > t1.a AND t1.e < t1.b) AND NOT t1.b IS Null RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.b AS col_2, abs(t1.a) AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_4
---- 2
111|249|245|2476
222|194|191|1918

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND t1.a IS Null RETURN t1.a + t1.b * 2 AS col_1, abs(t1.a) AS col_2
---- 1
|

-STATEMENT MATCH (t1:t1) RETURN t1.c - t1.d AS col_1, abs(t1.b - t1.c) AS col_2, t1.a - t1.b AS col_3, t1.a AS col_4
---- hash rowsort
30 tuples hashing to 6449326185cfb2c4b591e22f1d0b9c43

-STATEMENT MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 RETURN t1.a AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.e AS col_3, t1.a + t1.b * 2 AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, abs(t1.b - t1.c) AS col_6
---- hash rowsort
30 tuples hashing to d18f2b7889b1931bf2ad6e5c5b5d4434

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.b > t1.c OR t1.c > t1.d RETURN abs(t1.b - t1.c) AS col_1, t1.d AS col_2, abs(t1.a) AS col_3, t1.a - t1.b AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, t1.c - t1.d AS col_6, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_7
---- hash rowsort
22 tuples hashing to f2c0443c634f22d927709c9df7248cb4

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, t1.b - t1.c AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, t1.e AS col_5, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_6
---- hash rowsort
30 tuples hashing to e180b57b4723cf0cf9dbac7b9bf7036a

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND t1.c > t1.d AND NOT t1.b IS Null RETURN t1.a AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_2, t1.c AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4
---- hash rowsort
5 tuples hashing to bd0a4f265ee4fa29a213395d83a0776d

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) RETURN t1.c AS col_1
---- 3
193
224
247

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.d > t1.e AND t1.c > t1.d RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2
---- hash rowsort
5 tuples hashing to 2832b4b5ac653f653d22d7f12a93cf9e

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND NOT (t1.d >= 110 AND t1.d <= 150) AND t1.a > t1.b RETURN t1.b - t1.c AS col_1
---- 5
-1
-1
-1
-3
1

-STATEMENT MATCH (t1:t1) WHERE t1.a IS Null OR (t1.e > t1.a AND t1.e < t1.b) RETURN t1.e AS col_1, t1.a - t1.b AS col_2, t1.b - t1.c AS col_3, t1.d - t1.e AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5
---- hash rowsort
5 tuples hashing to dc878db9fa79ddf65d2d494dd4e6f88c

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN t1.a + t1.b * 2 AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3, t1.c - t1.d AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5
---- hash rowsort
19 tuples hashing to 451208c9117faf9f6575928cd5fcbcf3

-STATEMENT MATCH (t1:t1) RETURN t1.d - t1.e AS col_1, t1.a - t1.b AS col_2, t1.b - t1.c AS col_3
---- hash rowsort
30 tuples hashing to 864c4406e97c2f59c84ce3ca396d1ab8

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR NOT t1.b IS Null OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.c AS col_1
---- hash rowsort
27 tuples hashing to 8aefe123549b9829fb99271a217cb9a2

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d OR t1.d > t1.e RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.e AS col_2, t1.d - t1.e AS col_3, t1.a - t1.b AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5, t1.a AS col_6
---- hash rowsort
19 tuples hashing to e60614d0810e9d20d1ba7d5ec76faae4

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.c > t1.d RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3
---- hash rowsort
17 tuples hashing to 6257dc95c2d19fe398936dcf19cc0fd7

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, t1.b - t1.c AS col_4, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_5, t1.a - t1.b AS col_6, t1.d AS col_7
---- hash rowsort
19 tuples hashing to 17d275371a37f40f92cc7a00385ceef1

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_2, abs(t1.b - t1.c) AS col_3, t1.e AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_5
---- hash rowsort
21 tuples hashing to eff52972830501f3a2595f830cc27718

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR t1.a > t1.b RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.d AS col_2, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_3
---- hash rowsort
28 tuples hashing to dddaa7a5327df8e332800a2692c9fd3c

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND t1.b > t1.c RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.e AS col_4
---- hash rowsort
6 tuples hashing to 4322e1fd1ebd79c0adcf73292b568d18

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) AND t1.c > t1.d RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.a + t1.b * 2 AS col_2, t1.e AS col_3, t1.c AS col_4, abs(t1.a) AS col_5, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_6
---- hash rowsort
8 tuples hashing to e123674e3f83b126ddc91ddfb4ec283e

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.d AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.c AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.e AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_6
---- hash rowsort
2 tuples hashing to 586bb8dc59a82a2d1a8dd742453b7009

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.e > t1.c OR t1.e < t1.d) OR t1.c > t1.d RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a - t1.b AS col_2
---- hash rowsort
26 tuples hashing to 953d2bddf44b39d6a8131c7e0d8527ab

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.c OR t1.e < t1.d) RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1
---- hash rowsort
21 tuples hashing to 3a5c51b5d871430790d3e62143a2ca9c

-STATEMENT MATCH (t1:t1) RETURN t1.a + t1.b * 2 AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, abs(t1.b - t1.c) AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4
---- hash rowsort
30 tuples hashing to 07bd2709604b3d638589a37e24a6142c

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.c > t1.d RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, t1.c AS col_4, t1.a AS col_5, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_6, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_7
---- hash rowsort
13 tuples hashing to 45e6f78c344e1febadcfb399ccdb77d0

-STATEMENT MATCH (t1:t1) WHERE t1.d > t1.e AND EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.a - t1.b AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_5, t1.b AS col_6
---- hash rowsort
11 tuples hashing to 2bd8a28e2c3a998bd3b34756f07b98de

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1, t1.b AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5, t1.a AS col_6, t1.d AS col_7
---- hash rowsort
30 tuples hashing to 719552a6d050bc0883d65efb01ca392c

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.a > t1.b OR (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.a + t1.b * 2 AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, t1.a - t1.b AS col_5, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_6
---- hash rowsort
25 tuples hashing to 5db6c9ec6926b5c79fc5e8a4c523abc4

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.d > t1.e RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1
---- hash rowsort
11 tuples hashing to be1fb32359cadf053dc7743dd3945178

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.d AS col_3
---- hash rowsort
4 tuples hashing to e170e72ed3c6c65f197d2de7a3c22834

-STATEMENT MATCH (t1:t1) RETURN t1.a - t1.b AS col_1
---- hash rowsort
30 tuples hashing to a8508bcdf86e494dd5feccb5ca8d9768

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR t1.b > t1.c OR t1.c > t1.d RETURN t1.c - t1.d AS col_1, abs(t1.a) AS col_2, t1.a AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, t1.b AS col_5
---- hash rowsort
28 tuples hashing to d4f3b53d6c183b6326b0c2564db94ea0

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR t1.b > t1.c RETURN t1.c - t1.d AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.d AS col_4
---- hash rowsort
26 tuples hashing to cd111f29f5f7f36e2a77b27e33dbd004

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR t1.a IS Null OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, t1.b - t1.c AS col_2, abs(t1.b - t1.c) AS col_3, t1.e AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_6, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_7
---- hash rowsort
23 tuples hashing to ad90c576a238ab887d1339af826fbae7

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR (t1.e > t1.a AND t1.e < t1.b) OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, abs(t1.b - t1.c) AS col_3
---- hash rowsort
29 tuples hashing to 54008cb7c43c992b88512ae92630f7d2

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR t1.b > t1.c RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, abs(t1.a) AS col_2, t1.c - t1.d AS col_3
---- hash rowsort
19 tuples hashing to 886592d9da106aa25f38a55801e8ac69

-STATEMENT MATCH (t1:t1) WHERE t1.a IS Null AND t1.b > t1.c AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a - t1.b AS col_1, t1.d - t1.e AS col_2, abs(t1.b - t1.c) AS col_3, t1.e AS col_4, t1.a + t1.b * 2 AS col_5, t1.b - t1.c AS col_6
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c OR (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.b - t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3
---- hash rowsort
16 tuples hashing to 6307101e8338aba164354bdb1282d73d

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) RETURN COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_1, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_2, t1.c - t1.d AS col_3, t1.e AS col_4
---- hash rowsort
15 tuples hashing to 8f74be728e555a10648e2137a01e3bc0

-STATEMENT MATCH (t1:t1) RETURN t1.d AS col_1, t1.a AS col_2, t1.b AS col_3
---- hash rowsort
30 tuples hashing to 8dfc55883d23fac968db336e7eb05819

-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c AND (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) RETURN t1.b AS col_1, t1.a AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_4
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) RETURN t1.a AS col_1, t1.a + t1.b * 2 AS col_2, t1.b - t1.c AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.b AS col_5, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_6
---- hash rowsort
3 tuples hashing to 506ea6fa327350f3bc05be2325c7037e

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.d > t1.e OR t1.a IS Null OR NOT (t1.d >= 110 AND t1.d <= 150) RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, t1.b - t1.c AS col_2, t1.c - t1.d AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5
---- hash rowsort
21 tuples hashing to ab84430c78ddb8d0d0d19474da34643f

-STATEMENT MATCH (t1:t1) WHERE t1.a IS Null AND t1.c > t1.d AND t1.a > t1.b RETURN abs(t1.a) AS col_1, t1.d AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, t1.c AS col_5
---- 0


-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.a IS Null AND coalesce(t1.a) <> 0 RETURN abs(t1.b - t1.c) AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, t1.a - t1.b AS col_3, t1.c AS col_4, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_5, t1.b - t1.c AS col_6, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_7
---- hash rowsort
2 tuples hashing to 618c86d29c136607a70868aa0904aa06

-STATEMENT MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 OR (t1.e > t1.a AND t1.e < t1.b) RETURN t1.b - t1.c AS col_1, abs(t1.a) AS col_2
---- hash rowsort
30 tuples hashing to f81a96674d5188e29e9a2725a491cbee

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR (t1.e > t1.a AND t1.e < t1.b) OR coalesce(t1.a) <> 0 RETURN t1.b - t1.c AS col_1
---- hash rowsort
30 tuples hashing to c5a2b847c6c21100b32db39349809b0e

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1, t1.a AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4
---- hash rowsort
28 tuples hashing to 906803dad947847164e3a1bd7856a35c

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } AND t1.a IS Null AND coalesce(t1.a) <> 0 RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1
---- 2



-STATEMENT MATCH (t1:t1) RETURN t1.e AS col_1, t1.a + t1.b * 2 AS col_2, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, t1.b AS col_5
---- hash rowsort
30 tuples hashing to 9657f08c27dcf035d9e0c2e95cc4d75f

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_2, abs(t1.a) AS col_3, t1.a + t1.b * 2 AS col_4, t1.a - t1.b AS col_5, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_6, t1.d - t1.e AS col_7
---- hash rowsort
30 tuples hashing to b4a7869dee46edfc2130eb57eeddd3e2

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) AND t1.c > t1.d RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_3, t1.a - t1.b AS col_4, abs(t1.b - t1.c) AS col_5
---- hash rowsort
8 tuples hashing to 37a6d88bfb16420fe6ffcfb0389bb483

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d RETURN abs(t1.a) AS col_1
---- hash rowsort
13 tuples hashing to 7d6be458c1183d1520b654a8117570fe

-STATEMENT MATCH (t1:t1) RETURN t1.e AS col_1, t1.a + t1.b * 2 AS col_2, t1.c AS col_3, t1.d - t1.e AS col_4
---- hash rowsort
30 tuples hashing to 8229fc62414ac478d35fc865e46beba5

-STATEMENT MATCH (t1:t1) RETURN t1.d - t1.e AS col_1, t1.d AS col_2, t1.a AS col_3, t1.a + t1.b * 2 AS col_4
---- hash rowsort
30 tuples hashing to 75f1c2193cc02c75e60ae3b6c925a916

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d RETURN t1.a AS col_1
---- hash rowsort
13 tuples hashing to 7d6be458c1183d1520b654a8117570fe

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) RETURN t1.c - t1.d AS col_1, t1.a + t1.b * 2 + t1.c * 3 AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, t1.a AS col_4, t1.b AS col_5, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_6
---- hash rowsort
17 tuples hashing to 12665cbcc870eefa3f4cc0d11a9991d5

-STATEMENT MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 RETURN CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_1, abs(t1.a) AS col_2, t1.a + t1.b * 2 + t1.c * 3 AS col_3
---- hash rowsort
30 tuples hashing to 23c4156570b0b850e857e907cadd7306

-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) AND (t1.e > t1.c OR t1.e < t1.d) AND t1.a > t1.b RETURN COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_1, abs(t1.a) AS col_2, t1.b AS col_3, t1.a - t1.b AS col_4, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_5
---- hash rowsort
5 tuples hashing to 2378cc3c476ffe4a8e946543b42a9d9d

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE t1.a > t1.b OR (t1.a > t1.b - 2 AND t1.a < t1.b + 2) RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_3, COUNT { MATCH (x:t1) WHERE x.c > t1.c AND x.d < t1.d } AS col_4, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_5
---- hash rowsort
19 tuples hashing to 194147ebc0159ce5e6de96a285359361

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND t1.a IS Null AND t1.c > t1.d RETURN t1.d AS col_1, abs(t1.b - t1.c) AS col_2, t1.b - t1.c AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, t1.b AS col_5
---- 0


-STATEMENT MATCH (t1:t1) RETURN t1.b AS col_1, t1.d - t1.e AS col_2, t1.a + t1.b * 2 AS col_3, t1.b - t1.c AS col_4
---- hash rowsort
30 tuples hashing to 373df092a93b28b07e7af72a6365b90e

-STATEMENT MATCH (t1:t1) WHERE t1.a IS Null AND (t1.e > t1.a AND t1.e < t1.b) AND NOT t1.b IS Null RETURN t1.c AS col_1, t1.e AS col_2, t1.a + t1.b * 2 AS col_3, abs(t1.b - t1.c) AS col_4, t1.b - t1.c AS col_5, t1.a AS col_6
---- 0


-STATEMENT MATCH (t1:t1) WHERE t1.b > t1.c RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.a + t1.b * 2 AS col_2, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_3, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_4, t1.a + t1.b * 2 + t1.c * 3 AS col_5, t1.a - t1.b AS col_6, t1.a AS col_7
---- hash rowsort
13 tuples hashing to 0ad92c52d72f7b62755150d1cc34a4ef

-STATEMENT MATCH (t1:t1) WITH avg(t1.c) AS subqueryResult_0 MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR t1.b > t1.c RETURN t1.e AS col_1, t1.b - t1.c AS col_2, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_3, CASE WHEN t1.c > subqueryResult_0 THEN t1.a * 2 ELSE t1.b * 10 END AS col_4, t1.a - t1.b AS col_5, abs(t1.b - t1.c) AS col_6, abs(t1.a) AS col_7
---- hash rowsort
24 tuples hashing to 8781330a228647b4efdfd2abbccd3f93

-STATEMENT MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 OR (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) RETURN t1.a - t1.b AS col_1, t1.c AS col_2, t1.b AS col_3, t1.b - t1.c AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_6, t1.d AS col_7
---- hash rowsort
30 tuples hashing to e7395b6a397534eb6c79b00a6cbf5faf

-STATEMENT MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 OR t1.c > t1.d OR t1.d > t1.e RETURN abs(t1.b - t1.c) AS col_1, t1.d - t1.e AS col_2, t1.c - t1.d AS col_3, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_4, t1.d AS col_5
---- hash rowsort
30 tuples hashing to 56327e383a710587cd5f4205603ee4bc

-STATEMENT MATCH (t1:t1) WHERE NOT (t1.d >= 110 AND t1.d <= 150) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } OR t1.a IS Null RETURN t1.a - t1.b AS col_1, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_2, abs(t1.b - t1.c) AS col_3, t1.c AS col_4, abs(t1.a) AS col_5, t1.e AS col_6, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_7
---- hash rowsort
29 tuples hashing to 5115916b701ad1d957ff0342cf9ed9b3

-STATEMENT MATCH (t1:t1) WHERE (t1.e > t1.a AND t1.e < t1.b) OR coalesce(t1.a) <> 0 RETURN t1.a + t1.b * 2 AS col_1, t1.c AS col_2, t1.e AS col_3, t1.b AS col_4
---- hash rowsort
30 tuples hashing to 978da2a4ac397e44e638d685b7e1de7d

-STATEMENT MATCH (t1:t1) WHERE t1.a > t1.b AND (t1.e > t1.a AND t1.e < t1.b) RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1, t1.d AS col_2, (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_3, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_4
---- 0


-STATEMENT MATCH (t1:t1) WHERE (t1.a > t1.b - 2 AND t1.a < t1.b + 2) OR NOT (t1.d >= 110 AND t1.d <= 150) OR EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_1
---- hash rowsort
29 tuples hashing to 67079c1a773f2fc4382618135f2e0719

-STATEMENT MATCH (t1:t1) RETURN t1.b - t1.c AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2
---- hash rowsort
30 tuples hashing to edc74796a9c28c4af36d6fb5faa5d0e2

-STATEMENT MATCH (t1:t1) WHERE EXISTS { MATCH (x:t1) WHERE x.b < t1.b } RETURN CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_1
---- hash rowsort
26 tuples hashing to 04805712f856ee99414b33bd106ed0c5

-STATEMENT MATCH (t1:t1) RETURN t1.a - t1.b AS col_1, COUNT { MATCH (x:t1) WHERE x.b < t1.b } AS col_2, t1.a AS col_3
---- hash rowsort
30 tuples hashing to 2e7d76b188bec6999ed83e1f2d4f6383

-STATEMENT MATCH (t1:t1) WHERE coalesce(t1.a) <> 0 AND NOT t1.b IS Null RETURN abs(t1.b - t1.c) AS col_1
---- hash rowsort
27 tuples hashing to 726c5ed379e4b774e40e82e6dbdde380

-STATEMENT MATCH (t1:t1) WHERE (t1.c <= t1.d - 2 OR t1.c >= t1.d + 2) AND (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) AND NOT t1.b IS Null RETURN t1.c - t1.d AS col_1, abs(t1.b - t1.c) AS col_2
---- 2
-2|1
-3|4

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) OR coalesce(t1.a) <> 0 OR t1.a IS Null RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.e AS col_2, t1.c - t1.d AS col_3, t1.a + t1.b * 2 + t1.c * 3 AS col_4, CASE WHEN t1.a < t1.b - 3 THEN 111 WHEN t1.a <= t1.b THEN 222 WHEN t1.a < t1.b + 3 THEN 333 ELSE 444 END AS col_5, t1.a - t1.b AS col_6
---- hash rowsort
30 tuples hashing to 4a09d612e6ee25eb68bd8c0060901f36

-STATEMENT MATCH (t1:t1) WHERE t1.c > t1.d RETURN t1.a - t1.b AS col_1, t1.a AS col_2
---- hash rowsort
13 tuples hashing to 9de411d9f4f9b07040f9b8f63b6e432c

-STATEMENT MATCH (t1:t1) WHERE (t1.c >= t1.b - 2 AND t1.c <= t1.d + 2) AND t1.b > t1.c AND t1.a > t1.b RETURN (t1.a + t1.b + t1.c + t1.d + t1.e) / 5 AS col_1, t1.a + t1.b * 2 + t1.c * 3 + t1.d * 4 + t1.e * 5 AS col_2, t1.d - t1.e AS col_3, t1.a + t1.b * 2 AS col_4, CASE t1.a + 1 WHEN t1.b THEN 111 WHEN t1.c THEN 222 WHEN t1.d THEN 333 WHEN t1.e THEN 444 ELSE 555 END AS col_5, t1.c AS col_6
---- 1
232|3473|3|698|555|231

-STATEMENT MATCH (t1:t1) WHERE (t1.e + t1.d >= t1.a + t1.b - 10 AND t1.e + t1.d <= t1.c + 130) OR t1.c > t1.d OR t1.a IS Null RETURN t1.a + t1.b * 2 + t1.c * 3 AS col_1
---- hash rowsort
16 tuples hashing to 393ec0319f60a4bcad062e8ed256490f

