-GROUP EmptyCreateRelTest
-DATASET CSV empty
--

-CASE CreateOneToOneRel
-STATEMENT CREATE NODE TABLE N1(ID INT64, PRIMARY KEY(ID));
---- ok
-STATEMENT CREATE NODE TABLE N2(ID INT64, PRIMARY KEY(ID));
---- ok
-STATEMENT CREATE REL TABLE Rel1(FROM N1 TO N2, ONE_ONE);
---- ok
-STATEMENT CREATE (:N1 {ID: 10}), (:N1 {ID: 1}), (:N2 {ID: 12}), (:N2 {ID: 8})
---- ok
-STATEMENT MATCH (n:N1) RETURN n.ID
---- 2
10
1
-STATEMENT MATCH (n:N2) RETURN n.ID
---- 2
12
8
-STATEMENT MATCH (n1:N1), (n2:N2) WHERE n1.ID=10 AND n2.ID=12 CREATE (n1)-[r:Rel1]->(n2)
---- ok
-STATEMENT MATCH (n:N1)-[r:Rel1]->(m:N2) RETURN n.ID, m.ID
---- 1
10|12

-CASE CreateOneToOneRelOnLargeNodeTable
-STATEMENT CREATE NODE TABLE N1(ID INT64, PRIMARY KEY(ID));
---- ok
-STATEMENT CREATE NODE TABLE N2(ID INT64, PRIMARY KEY(ID));
---- ok
-STATEMENT CREATE REL TABLE Rel1(FROM N1 TO N2, ONE_ONE);
---- ok
-STATEMENT COPY N1 FROM "${KUZU_ROOT_DIRECTORY}/dataset/sf-0.1/Comment.csv" (HEADER=true, DELIM='|');
---- ok
-STATEMENT COPY N2 FROM "${KUZU_ROOT_DIRECTORY}/dataset/sf-0.1/Post.csv" (HEADER=true, DELIM='|');
---- ok
-STATEMENT MATCH (n1:N1), (n2:N2) WHERE n1.ID=1099512015344 AND n2.ID=3 CREATE (n1)-[r:Rel1]->(n2)
---- ok
-STATEMENT MATCH (n:N1)-[r:Rel1]->(m:N2) RETURN n.ID, m.ID
---- 1
1099512015344|3

-CASE CreateAndScanOneToOneRel
-STATEMENT CREATE NODE TABLE N1(ID INT64, PRIMARY KEY(ID));
---- ok
-STATEMENT CREATE NODE TABLE N2(ID INT64, PRIMARY KEY(ID));
---- ok
-STATEMENT CREATE REL TABLE Rel1(FROM N1 TO N2, ONE_ONE);
---- ok
-STATEMENT CREATE (:N1 {ID: 10}), (:N1 {ID: 1}), (:N2 {ID: 12}), (:N2 {ID: 8})
---- ok
-STATEMENT BEGIN TRANSACTION
---- ok
-STATEMENT MATCH (n1:N1), (n2:N2) WHERE n1.ID=10 AND n2.ID=12 CREATE (n1)-[r:Rel1]->(n2)
---- ok
-STATEMENT MATCH (n:N1)-[r:Rel1]->(m:N2) RETURN n.ID, m.ID
---- 1
10|12
-STATEMENT COMMIT
---- ok
-STATEMENT MATCH (n:N1)-[r:Rel1]->(m:N2) RETURN n.ID, m.ID
---- 1
10|12

-CASE CreateAndScanManyToManyRel
-STATEMENT CREATE NODE TABLE N1(ID INT64, PRIMARY KEY(ID));
---- ok
-STATEMENT CREATE NODE TABLE N2(ID INT64, PRIMARY KEY(ID));
---- ok
-STATEMENT CREATE REL TABLE Rel1(FROM N1 TO N2, MANY_MANY);
---- ok
-STATEMENT CREATE (:N1 {ID: 10}), (:N1 {ID: 1}), (:N2 {ID: 12}), (:N2 {ID: 8})
---- ok
-STATEMENT MATCH (n:N1) RETURN n.ID
---- 2
10
1
-STATEMENT MATCH (n:N2) RETURN n.ID
---- 2
12
8
-STATEMENT BEGIN TRANSACTION
---- ok
-STATEMENT MATCH (n1:N1), (n2:N2) WHERE n1.ID=10 AND n2.ID=12 CREATE (n1)-[r:Rel1]->(n2)
---- ok
-STATEMENT MATCH (n:N1)-[r:Rel1]->(m:N2) RETURN n.ID, m.ID
---- 1
10|12
-STATEMENT COMMIT
---- ok
-STATEMENT MATCH (n:N1)-[r:Rel1]->(m:N2) RETURN n.ID, m.ID
---- 1
10|12

-CASE DeleteNewlyCreatedRel
-STATEMENT CREATE NODE TABLE N1(ID INT64, PRIMARY KEY(ID));
---- ok
-STATEMENT CREATE NODE TABLE N2(ID INT64, PRIMARY KEY(ID));
---- ok
-STATEMENT CREATE REL TABLE Rel1(FROM N1 TO N2, MANY_MANY);
---- ok
-STATEMENT CREATE (:N1 {ID: 10}), (:N1 {ID: 1}), (:N2 {ID: 12}), (:N2 {ID: 8})
---- ok
-STATEMENT BEGIN TRANSACTION
---- ok
-STATEMENT MATCH (n1:N1), (n2:N2) WHERE n1.ID=10 AND n2.ID=12 CREATE (n1)-[r:Rel1]->(n2)
---- ok
-STATEMENT MATCH (n1:N1)-[r:Rel1]->(n2:N2) WHERE n1.ID=10 AND n2.ID=12 DELETE r
---- ok
-STATEMENT MATCH (n:N1)-[r:Rel1]->(m:N2) RETURN n.ID, m.ID
---- 0
-STATEMENT COMMIT
---- ok
-STATEMENT MATCH (n:N1)-[r:Rel1]->(m:N2) RETURN n.ID, m.ID
---- 0
