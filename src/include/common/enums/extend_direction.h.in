#pragma once

#include <cstdint>

#include "common/assert.h"
#include "common/enums/rel_direction.h"

namespace kuzu {
namespace common {

enum class ExtendDirection : uint8_t { FWD = 0, BWD = 1, BOTH = 2 };

#if defined(KUZU_DEFAULT_REL_STORAGE_DIRECTION) &&                                                 \
    (KUZU_DEFAULT_REL_STORAGE_DIRECTION == FWD_REL_STORAGE)
static constexpr ExtendDirection DEFAULT_EXTEND_DIRECTION = ExtendDirection::FWD;
#elif defined(KUZU_DEFAULT_REL_STORAGE_DIRECTION) &&                                               \
    (KUZU_DEFAULT_REL_STORAGE_DIRECTION == BWD_REL_STORAGE)
static constexpr ExtendDirection DEFAULT_EXTEND_DIRECTION = ExtendDirection::BWD;
#else
static constexpr ExtendDirection DEFAULT_EXTEND_DIRECTION = ExtendDirection::BOTH;
#endif

class ExtendDirectionUtil {
public:
    static RelDataDirection getRelDataDirection(ExtendDirection direction) {
        KU_ASSERT(direction != ExtendDirection::BOTH);
        return direction == ExtendDirection::FWD ? RelDataDirection::FWD : RelDataDirection::BWD;
    }

    static ExtendDirection fromString(const std::string& str);
    static std::string toString(ExtendDirection direction);
};

} // namespace common
} // namespace kuzu
