create node table Comment (id int64, creationDate INT64, locationIP STRING, browserUsed STRING, content STRING, length INT32, PRIMARY KEY (id));
create node table Forum (id INT64, title STRING, creationDate INT64, PRIMARY KEY (id));
create node table Organisation (id INT64, label STRING, name STRING, url STRING, PRIMARY KEY (id));
create node table Person (id INT64, firstName STRING, lastName STRING, gender STRING, birthday INT64, creationDate INT64, locationIP STRING, browserUsed STRING, PRIMARY KEY (id));
create node table Place (id INT64, name STRING, url STRING, label STRING, PRIMARY KEY (id));
create node table Post (id INT64, imageFile STRING, creationDate INT64, locationIP STRING, browserUsed STRING, language STRING, content STRING, length INT32, PRIMARY KEY (id));
create node table Tag (id INT64, name STRING, url STRING, PRIMARY KEY (id));
create node table TagClass (id INT64, name STRING, url STRING, PRIMARY KEY (id));
create rel table Comment_hasCreator (FROM Comment TO Person, MANY_MANY);
create rel table Comment_hasTag (FROM Comment TO Tag, MANY_MANY);
create rel table Comment_isLocatedIn (FROM Comment TO Place, MANY_ONE);
create rel table replyOf_Comment (FROM Comment TO Comment, MANY_ONE);
create rel table replyOf_Post (FROM Comment TO Post, MANY_ONE);
create rel table containerOf (FROM Forum TO Post, ONE_MANY);
create rel table hasMember (FROM Forum TO Person, joinDate INT64, MANY_MANY);
create rel table hasModerator (FROM Forum TO Person, MANY_MANY);
create rel table Forum_hasTag (FROM Forum TO Tag, MANY_MANY);
create rel table Organisation_isLocatedIn (FROM Organisation TO Place, MANY_ONE);
create rel table hasInterest (FROM Person TO Tag, MANY_MANY);
create rel table Person_isLocatedIn (FROM Person TO Place, MANY_ONE);
create rel table knows (FROM Person TO Person, creationDate INT64, MANY_MANY);
create rel table likes_Comment (FROM Person TO Comment, creationDate INT64, MANY_MANY);
create rel table likes_Post (FROM Person TO Post, creationDate INT64, MANY_MANY);
create rel table studyAt (FROM Person TO Organisation, classYear INT32, MANY_ONE);
create rel table workAt (FROM Person TO Organisation, workFrom INT32, MANY_MANY);
create rel table isPartOf (FROM Place TO Place, MANY_ONE);
create rel table Post_hasCreator (FROM Post TO Person, MANY_ONE);
create rel table Post_hasTag (FROM Post TO Tag, MANY_MANY);
create rel table Post_isLocatedIn (FROM Post TO Place, MANY_ONE);
create rel table hasType (FROM Tag TO TagClass, MANY_ONE);
create rel table isSubclassOf (FROM TagClass TO TagClass, MANY_ONE);
