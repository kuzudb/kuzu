load from 'dataset/tinysnb_json/vPerson.json' create (:person {ID: ID, fName: fName, gender: gender, isStudent: isStudent, isWorker: isWorker, age: age, eyeSight: eyeSight, birthdate:cast(birthdate as date), registerTime:cast(registerTime as timestamp), lastJobDuration:cast(lastJobDuration as interval), workedHours: workedHours, usedNames: usedNames, courseScoresPerTerm: courseScoresPerTerm, grades: grades, height: height, u: cast(u as uuid)});
load from 'dataset/tinysnb_json/vPerson2.json' create (:person {ID: ID, fName: fName, gender: gender, isStudent: isStudent, isWorker: isWorker, age: age, eyeSight: eyeSight, birthdate:cast(birthdate as date), registerTime:cast(registerTime as timestamp), lastJobDuration:cast(lastJobDuration as interval), workedHours: workedHours, usedNames: usedNames, courseScoresPerTerm: courseScoresPerTerm, grades: grades, height: height, u: cast(u as uuid)});
load from 'dataset/tinysnb_json/vOrganisation.json' create (:organisation {ID:ID, name:name, orgCode:orgCode, mark:mark, score:score, history:history, licenseValidInterval: cast(licenseValidInterval as interval), rating:rating, state:state});
load from 'dataset/tinysnb_json/vMovies.json' create (:movies {name:name, length:length, note:note, description:cast(description as STRUCT(rating DOUBLE, stars INT8, views INT64, release TIMESTAMP, release_ns TIMESTAMP_NS, release_ms TIMESTAMP_MS, release_sec TIMESTAMP_SEC, release_tz TIMESTAMP_TZ, film DATE, u8 UINT8, u16 UINT16, u32 UINT32, u64 UINT64, hugedata INT128)), audience:cast(audience as map(string, int64))});
load from 'dataset/tinysnb_json/eKnows.json' match (a:person {ID: FROM}), (b:person {ID: TO}) create (a)-[:knows {date: date, meetTime: meetTime, validInterval: validInterval, comments:comments, summary:summary, notes: notes, someMap: someMap}]->(b);
load from 'dataset/tinysnb_json/eKnows_2.json' match (a:person {ID: FROM}), (b:person {ID: TO}) create (a)-[:knows {date: date, meetTime: meetTime, validInterval: validInterval, comments:comments, summary:summary, notes: notes, someMap: someMap}]->(b);
load from 'dataset/tinysnb_json/eStudyAt.sjon' match (a:person {ID: FROM}), (b:organisation {ID: TO}) create (a)-[:studyAt {year: year, places: places, length: length, level: level, code: code, temperature: temperature, ulength: ulength, ulevel: ulevel, hugedata: hugedata}]->(b);
load from 'dataset/tinysnb_json/eWorkAt.json' match (a:person {ID:FROM}), (b:organisation {ID:TO}) create (a)-[:workAt {year: year, grading: grading, rating: rating}]->(b);
load from 'dataset/tinysnb_json/eMeets.json' match (a:person {ID:FROM}), (b:organisation {ID:TO}) create (a)-[:meets {location: location, times: times, data: data}]->(b);
load from 'dataset/tinysnb_json/eMarries.json' match (a:person {ID:FROM}), (b:person {ID:TO}) create (a)-[:marries {usedAddress: usedAddress, address: address, note: note}]->(b);
