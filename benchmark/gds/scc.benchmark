-NAME wcc
-CALL create_projected_graph('Graph', ['Nodes'], ['Edges']);
---- ok
-CALL strongly_connected_components_kosaraju('Graph') WITH group_id, min(node.id) as sccId, count(*) as nodeCount, sum(node.id) as nodeIdSum RETURN sccId, nodeCount, nodeIdSum ORDER BY nodeCount DESC, sccId LIMIT 10;
---- 10
0|69066|3508648615
6168|36|1090404
55744|13|726770
33282|11|557946
44428|11|542871
48480|11|536370
3969|8|69133
28380|7|198716
4026|6|39292
31998|5|160232

# ComponentIds come from different internal mappings but normalized node ids match:
# neo4j> CALL gds.graph.project('GraphDirected', 'Node', 'Edge');
# neo4j> CALL gds.scc.stream('GraphDirected') YIELD nodeId, componentId WITH componentId, MIN(gds.util.asNode(nodeId).id) as sccId, count(*) AS nodeCount, SUM(gds.util.asNode(nodeId).id) as nodeIdSum RETURN sccId, nodeCount, nodeIdSum ORDER BY nodeCount DESC, sccId LIMIT 10;
#   sccId  nodeCount  nodeIdSum
#   0      69066      3508648615
#   6168   36         1090404
#   55744  13         726770
#   33282  11         557946
#   44428  11         542871
#   48480  11         536370
#   3969   8          69133
#   28380  7          198716
#   4026   6          39292
#   31998  5          160232
