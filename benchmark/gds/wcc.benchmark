-NAME wcc
-CALL create_projected_graph('Graph', ['Nodes'], ['Edges']);
---- ok
-CALL weakly_connected_component('Graph') WITH group_id, min(node.id) as wccId, count(*) as nodeCount, sum(node.id) as nodeIdSum RETURN wccId, nodeCount, nodeIdSum ORDER BY nodeCount DESC, wccId LIMIT 10;
---- 10
0|107319|5759958890
107287|10|1073652
107127|9|964728
106982|8|856074
106808|7|748231
106626|6|640205
106582|5|533039
106544|4|426229
106506|3|320595
106500|2|214085

# ComponentIds come from different internal mappings but normalized node ids match:
# neo4j> CALL gds.graph.project('GraphUndirected', 'Node', {Edge: {orientation: 'UNDIRECTED'}});
# neo4j> CALL gds.wcc.stream('GraphUndirected') YIELD nodeId, componentId WITH componentId, MIN(gds.util.asNode(nodeId).id) as wccId, count(*) AS nodeCount, SUM(gds.util.asNode(nodeId).id) as nodeIdSum RETURN wccId, nodeCount, nodeIdSum ORDER BY nodeCount DESC, wccId LIMIT 10;
#   wccId   nodeCount  nodeIdSum
#   0       107319     5759958890
#   107287  10         1073652
#   107127  9          964728
#   106982  8          856074
#   106808  7          748231
#   106626  6          640205
#   106582  5          533039
#   106544  4          426229
#   106506  3          320595
#   106500  2          214085
