name: Multiplatform Build & Test

on:
  workflow_dispatch:
  schedule:
    - cron: "0 8 * * *"

jobs:
  ubuntu-2004-build-test:
    name: ubuntu-20.04
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    env:
      CC: gcc-11
      CXX: g++-11
    steps:
      - uses: actions/checkout@v3
        continue-on-error: true

      - name: Install packages
        continue-on-error: true
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential manpages-dev software-properties-common
          sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
          sudo apt-get update
          sudo apt-get install -y gcc-11 g++-11

      - uses: actions/setup-python@v5
        continue-on-error: true
        with:
          python-version: "3.11"

      - name: Ensure Python dependencies
        continue-on-error: true
        run: |
          pip install torch~=2.0.0 --extra-index-url https://download.pytorch.org/whl/cpu
          pip install --user -r tools/python_api/requirements_dev.txt -f https://data.pyg.org/whl/torch-2.0.0+cpu.html

      - name: Ensure Node.js dependencies
        continue-on-error: true
        working-directory: tools/nodejs_api
        run: npm install --include=dev

      - name: Test
        continue-on-error: true
        run: |
          make test ASAN=1 NUM_THREADS=$(nproc)
          echo "Test,$?" >> status.txt

      - name: Rename status.txt
        continue-on-error: true
        run: mv status.txt ubuntu-20.04.csv

      - uses: actions/upload-artifact@v4
        continue-on-error: true
        with:
          name: ubuntu-20.04
          path: ubuntu-20.04.csv

  macos-build-test:
    strategy:
      matrix:
        runner: [macos-13, macos-14]
      fail-fast: false
    name: ${{ matrix.runner }}
    runs-on: ${{ matrix.runner }}
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v3
        continue-on-error: true

      - uses: actions/setup-python@v4
        continue-on-error: true
        with:
          python-version: "3.10"

      - name: Ensure Python dependencies
        continue-on-error: true
        run: |
          pip install torch~=2.0.0 --extra-index-url https://download.pytorch.org/whl/cpu
          pip install --user -r tools/python_api/requirements_dev.txt -f https://data.pyg.org/whl/torch-2.0.0+cpu.html

      - name: Ensure Node.js dependencies
        continue-on-error: true
        working-directory: tools/nodejs_api
        run: npm install --include=dev

      - name: Test
        continue-on-error: true
        run: |
          make test ASAN=1 NUM_THREADS=$(sysctl -n hw.physicalcpu)
          echo "Test,$?" >> status.txt

      - name: Rename status.txt
        continue-on-error: true
        run: mv status.txt ${{ matrix.runner }}.csv

      - uses: actions/upload-artifact@v4
        continue-on-error: true
        with:
          name: ${{ matrix.runner }}
          path: ${{ matrix.runner }}.csv

  debian-ubuntu-build-test:
    strategy:
      matrix:
        image: ["ubuntu:23.04", "ubuntu:23.10", "debian:12", "debian:sid"]
      fail-fast: false
    name: ${{ matrix.image }}
    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.image }}
    env:
      CC: gcc
      CXX: g++
      JAVA_HOME: /usr/lib/jvm/java-17-openjdk-amd64
    steps:
      - name: Install packages
        continue-on-error: true
        run: |
          apt-get update
          apt-get install -y ca-certificates curl gnupg
          mkdir -p /etc/apt/keyrings
          curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg
          echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_20.x nodistro main" | tee /etc/apt/sources.list.d/nodesource.list
          apt-get update
          apt-get install -y git build-essential cmake gcc g++ python3 python3-dev python3-pip openjdk-17-jdk nodejs

      - uses: actions/checkout@v3
        continue-on-error: true

      - name: Ensure Python dependencies
        continue-on-error: true
        run: |
          pip install torch~=2.0.0 --extra-index-url https://download.pytorch.org/whl/cpu ${{ matrix.image != 'debian:11' && '--break-system-packages' || '' }}
          pip install --user -r tools/python_api/requirements_dev.txt -f https://data.pyg.org/whl/torch-2.0.0+cpu.html ${{ matrix.image != 'debian:11' && '--break-system-packages' || '' }}

      - name: Ensure Node.js dependencies
        working-directory: tools/nodejs_api
        continue-on-error: true
        run: npm install --include=dev

      - name: Install Rust
        continue-on-error: true
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --no-update-default-toolchain
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
          $HOME/.cargo/bin/rustup toolchain install 1.76

      - name: Test
        continue-on-error: true
        run: |
          make test ASAN=1 NUM_THREADS=$(nproc)
          echo "Test,$?" >> status.txt

      - name: Rename status.txt
        continue-on-error: true
        run: |
          PLATFORM=$(echo ${{ matrix.image }} | tr ':' '-')
          echo "PLATFORM=$PLATFORM" >> $GITHUB_ENV
          mv status.txt $PLATFORM.csv

      - uses: actions/upload-artifact@v4
        continue-on-error: true
        with:
          name: ${{env.PLATFORM}}
          path: ${{env.PLATFORM}}.csv

  rhel-fedora-build-test: 
    strategy:
      matrix:
        image: ["rockylinux:8", "rockylinux:9", "fedora:38", "fedora:39"]
      fail-fast: false
    name: ${{ matrix.image }}
    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.image }}
    env:
      CC: gcc
      CXX: g++
      JAVA_HOME: /usr/lib/jvm/java-17-openjdk
      HOME: /root
    steps:
      - name: Enable EPEL
        continue-on-error: true
        if: ${{ matrix.image == 'rockylinux:8' || matrix.image ==  'rockylinux:9' }}
        run: |
          dnf update -y
          dnf install -y epel-release
          dnf update -y

      - name: Enable SHA-1 on Rocky Linux 9
        continue-on-error: true
        if: matrix.image == 'rockylinux:9'
        run: update-crypto-policies --set LEGACY

      - name: Install packages
        continue-on-error: true
        run: |
          curl -fsSL https://rpm.nodesource.com/setup_20.x | bash -
          dnf install -y git cmake ${{ matrix.image == 'rockylinux:8' && 'gcc-toolset-12 python3.11 python3.11-devel' || 'gcc gcc-c++ python3-devel' }} java-17-openjdk-devel nodejs

      - name: Enable gcc-toolset-12 and python3.11 on Rocky Linux 8
        continue-on-error: true
        if: matrix.image == 'rockylinux:8'
        run: |
          alternatives --set python /usr/bin/python3.11
          alternatives --set python3 /usr/bin/python3.11
          echo "PYTHON_EXECUTABLE=/usr/bin/python3.11" >> $GITHUB_ENV
          echo "PYBIND11_PYTHON_VERSION=3.11" >> $GITHUB_ENV
          source /opt/rh/gcc-toolset-12/enable
          echo $PATH >> $GITHUB_PATH

      - uses: actions/checkout@v3
        continue-on-error: true

      - name: Ensure Python dependencies
        continue-on-error: true
        run: |
          python3 -m venv /opt/venv
          source /opt/venv/bin/activate
          pip3 install torch~=2.2.1 --extra-index-url https://download.pytorch.org/whl/cpu
          pip3 install -r tools/python_api/requirements_dev.txt -f https://data.pyg.org/whl/torch-2.2.1+cpu.html

      - name: Ensure Node.js dependencies
        continue-on-error: true
        working-directory: tools/nodejs_api
        run: npm install --include=dev

      - name: Install Rust
        continue-on-error: true
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --no-update-default-toolchain
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
          $HOME/.cargo/bin/rustup toolchain install 1.76

      - name: Test
        continue-on-error: true
        run: |
          make test ASAN=1 NUM_THREADS=$(nproc)
          echo "Test,$?" >> status.txt

      - name: Rename status.txt
        continue-on-error: true
        run: |
          PLATFORM=$(echo ${{ matrix.image }} | tr ':' '-')
          echo "PLATFORM=$PLATFORM" >> $GITHUB_ENV
          mv status.txt $PLATFORM.csv

      - uses: actions/upload-artifact@v4
        continue-on-error: true
        with:
          name: ${{env.PLATFORM}}
          path: ${{env.PLATFORM}}.csv

  archlinux-build-test:
    name: archlinux
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest
    env:
      CC: gcc
      CXX: g++
      JAVA_HOME: /usr/lib/jvm/java-17-openjdk
    steps:
      - name: Install packages
        continue-on-error: true
        run: |
          pacman -Syu --noconfirm
          pacman -S --needed --noconfirm git base-devel cmake gcc python python-pip npm jdk17-openjdk

      - uses: actions/checkout@v3
        continue-on-error: true

      - name: Ensure Python dependencies
        continue-on-error: true
        run: |
          pip install torch~=2.0.0 --extra-index-url https://download.pytorch.org/whl/cpu --break-system-packages
          pip install --user -r tools/python_api/requirements_dev.txt -f https://data.pyg.org/whl/torch-2.0.0+cpu.html --break-system-packages

      - name: Ensure Node.js dependencies
        continue-on-error: true
        working-directory: tools/nodejs_api
        run: npm install --include=dev

      - name: Install Rust
        continue-on-error: true
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --no-update-default-toolchain
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
          $HOME/.cargo/bin/rustup toolchain install 1.76

      - name: Test
        continue-on-error: true
        run: |
          make test ASAN=1 NUM_THREADS=$(nproc)
          echo "Test,$?" >> status.txt

      - name: Rename status.txt
        continue-on-error: true
        run: |
          mv status.txt archlinux.csv

      - uses: actions/upload-artifact@v4
        continue-on-error: true
        with:
          name: archlinux
          path: archlinux.csv

  collect-results:
    runs-on: ubuntu-latest
    env:
      DISCORD_CHANNEL_ID: ${{ secrets.DISCORD_CHANNEL_ID }}
      DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
      GITHUB_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
    needs:
      [
        ubuntu-2004-build-test,
        macos-build-test,
        windows-build-test,
        debian-ubuntu-build-test,
        rhel-fedora-build-test,
        archlinux-build-test,
      ]
    steps:
      - uses: actions/checkout@v3

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: results

      - name: List artifacts
        run: ls -R results

      - name: Create summary
        run: |
          pip3 install pandas tabulate discord.py
          python3 scripts/multiplatform-test-helper/collect-results.py results
          python3 scripts/multiplatform-test-helper/notify-discord.py results.json

      - name: Upload summary
        uses: actions/upload-artifact@v4
        with:
          name: results
          path: results.md
