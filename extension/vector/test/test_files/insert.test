-DATASET CSV empty
-BUFFER_POOL_SIZE 134217728

--

-CASE InsertToNonEmpty
-SKIP
-STATEMENT LOAD EXTENSION '${KUZU_ROOT_DIRECTORY}/extension/vector/build/libvector.kuzu_extension';
---- ok
-STATEMENT CREATE NODE TABLE embeddings (id int64, vec FLOAT[8], PRIMARY KEY (id));
---- ok
-STATEMENT CALL threads=1;
---- ok
-STATEMENT COPY embeddings FROM "${KUZU_ROOT_DIRECTORY}/dataset/embeddings/embeddings-8-1k.csv" (deLim=',');
---- ok
-STATEMENT CALL CREATE_VECTOR_INDEX('embeddings', 'e_hnsw_index','vec', metric := 'l2');
---- ok
-STATEMENT CALL QUERY_VECTOR_INDEX('embeddings', 'e_hnsw_index', [0.1521,0.3021,0.5366,0.2774,0.5593,0.5589,0.1365,0.8557], 3, efs := 500) RETURN node.id ORDER BY distance;
-CHECK_ORDER
---- 3
333
444
133
-STATEMENT CREATE (t:embeddings {id: 1000, vec: [0.1521,0.3021,0.5366,0.2774,0.5593,0.5589,0.1365,0.8557]});
---- ok
-STATEMENT CALL QUERY_VECTOR_INDEX('embeddings', 'e_hnsw_index', [0.1521,0.3021,0.5366,0.2774,0.5593,0.5589,0.1365,0.8557], 3, efs := 500) RETURN node.id ORDER BY distance;
-CHECK_ORDER
---- 3
1000
333
444

-CASE BulkInsertToEmpty
-SKIP
-STATEMENT LOAD EXTENSION '${KUZU_ROOT_DIRECTORY}/extension/vector/build/libvector.kuzu_extension';
---- ok
-STATEMENT CREATE NODE TABLE embeddings (id int64, vec FLOAT[8], PRIMARY KEY (id));
---- ok
-STATEMENT CALL CREATE_VECTOR_INDEX('embeddings', 'e_hnsw_index','vec', metric := 'l2');
---- ok
-STATEMENT load from '/Users/guodongjin/Downloads/embeddings-8-1k.parquet' with column0 as c0, `CAST(column1 AS FLOAT[8])` as c1 limit 100 CREATE (:embeddings {id: c0, vec: c1});
---- ok
-STATEMENT CALL QUERY_VECTOR_INDEX('embeddings', 'e_hnsw_index', [0.1521,0.3021,0.5366,0.2774,0.5593,0.5589,0.1365,0.8557], 3, efs := 500) RETURN node.id ORDER BY distance;
-CHECK_ORDER
---- 3
37
40
52
-STATEMENT CREATE (t:embeddings {id: 1000, vec: [0.1521,0.3021,0.5366,0.2774,0.5593,0.5589,0.1365,0.8557]});
---- ok
-STATEMENT CALL QUERY_VECTOR_INDEX('embeddings', 'e_hnsw_index', [0.1521,0.3021,0.5366,0.2774,0.5593,0.5589,0.1365,0.8557], 3, efs := 500) RETURN node.id ORDER BY distance;
-CHECK_ORDER
---- 3
1000
37
40

-CASE BulkInsertToNonEmpty
-SKIP
-STATEMENT LOAD EXTENSION '${KUZU_ROOT_DIRECTORY}/extension/vector/build/libvector.kuzu_extension';
---- ok
-STATEMENT CREATE NODE TABLE embeddings (id int64, vec FLOAT[8], PRIMARY KEY (id));
---- ok
-STATEMENT CALL CREATE_VECTOR_INDEX('embeddings', 'e_hnsw_index','vec', metric := 'l2');
---- ok
-STATEMENT load from '/Users/guodongjin/Downloads/embeddings-8-1k.parquet' with column0 as c0, `CAST(column1 AS FLOAT[8])` as c1 limit 100 CREATE (:embeddings {id: c0, vec: c1});
---- ok
-STATEMENT CALL QUERY_VECTOR_INDEX('embeddings', 'e_hnsw_index', [0.1521,0.3021,0.5366,0.2774,0.5593,0.5589,0.1365,0.8557], 3, efs := 500) RETURN node.id ORDER BY distance;
-CHECK_ORDER
---- 3
37
40
52
-STATEMENT load from '/Users/guodongjin/Downloads/embeddings-8-1k.parquet' with column0 as c0, `CAST(column1 AS FLOAT[8])` as c1 skip 100 limit 100 CREATE (:embeddings {id: c0, vec: c1});
---- ok
-STATEMENT CALL QUERY_VECTOR_INDEX('embeddings', 'e_hnsw_index', [0.1521,0.3021,0.5366,0.2774,0.5593,0.5589,0.1365,0.8557], 3, efs := 500) RETURN node.id ORDER BY distance;
-CHECK_ORDER
---- 3
133
186
146

-CASE SerialInsertionsToNonEmpty
-STATEMENT CALL threads=1;
---- ok
-STATEMENT LOAD EXTENSION '${KUZU_ROOT_DIRECTORY}/extension/vector/build/libvector.kuzu_extension';
---- ok
-STATEMENT CREATE NODE TABLE embeddings (id int64, vec FLOAT[8], PRIMARY KEY (id));
---- ok
-STATEMENT load from '/Users/guodongjin/Downloads/embeddings-8-1k.parquet' with column0 as c0, `CAST(column1 AS FLOAT[8])` as c1 limit 990 CREATE (:embeddings {id: c0, vec: c1});
---- ok
-STATEMENT CALL CREATE_VECTOR_INDEX('embeddings', 'e_hnsw_index','vec', metric := 'l2');
---- ok
-STATEMENT load from '/Users/guodongjin/Downloads/embeddings-8-1k.parquet' with column0 as c0, `CAST(column1 AS FLOAT[8])` as c1 skip 990 limit 1 CREATE (:embeddings {id: c0, vec: c1});
---- ok
-STATEMENT load from '/Users/guodongjin/Downloads/embeddings-8-1k.parquet' with column0 as c0, `CAST(column1 AS FLOAT[8])` as c1 skip 991 limit 1 CREATE (:embeddings {id: c0, vec: c1});
---- ok
-STATEMENT load from '/Users/guodongjin/Downloads/embeddings-8-1k.parquet' with column0 as c0, `CAST(column1 AS FLOAT[8])` as c1 skip 992 limit 1 CREATE (:embeddings {id: c0, vec: c1});
---- ok
-STATEMENT load from '/Users/guodongjin/Downloads/embeddings-8-1k.parquet' with column0 as c0, `CAST(column1 AS FLOAT[8])` as c1 skip 993 limit 1 CREATE (:embeddings {id: c0, vec: c1});
---- ok
-STATEMENT load from '/Users/guodongjin/Downloads/embeddings-8-1k.parquet' with column0 as c0, `CAST(column1 AS FLOAT[8])` as c1 skip 994 limit 1 CREATE (:embeddings {id: c0, vec: c1});
---- ok
-STATEMENT load from '/Users/guodongjin/Downloads/embeddings-8-1k.parquet' with column0 as c0, `CAST(column1 AS FLOAT[8])` as c1 skip 995 limit 1 CREATE (:embeddings {id: c0, vec: c1});
---- ok
-STATEMENT load from '/Users/guodongjin/Downloads/embeddings-8-1k.parquet' with column0 as c0, `CAST(column1 AS FLOAT[8])` as c1 skip 996 limit 1 CREATE (:embeddings {id: c0, vec: c1});
---- ok
-STATEMENT load from '/Users/guodongjin/Downloads/embeddings-8-1k.parquet' with column0 as c0, `CAST(column1 AS FLOAT[8])` as c1 skip 997 limit 1 CREATE (:embeddings {id: c0, vec: c1});
---- ok
-STATEMENT load from '/Users/guodongjin/Downloads/embeddings-8-1k.parquet' with column0 as c0, `CAST(column1 AS FLOAT[8])` as c1 skip 998 limit 1 CREATE (:embeddings {id: c0, vec: c1});
---- ok
-STATEMENT load from '/Users/guodongjin/Downloads/embeddings-8-1k.parquet' with column0 as c0, `CAST(column1 AS FLOAT[8])` as c1 skip 999 limit 1 CREATE (:embeddings {id: c0, vec: c1});
---- ok
-STATEMENT CALL QUERY_VECTOR_INDEX('embeddings', 'e_hnsw_index', [0.1521,0.3021,0.5366,0.2774,0.5593,0.5589,0.1365,0.8557], 3, efs := 500) RETURN node.id ORDER BY distance;
-CHECK_ORDER
---- 3
333
444
133
