-DATASET CSV empty
-BUFFER_POOL_SIZE 134217728

--

-CASE Filtered8DimDotProduct
-LOAD_DYNAMIC_EXTENSION vector
-STATEMENT CREATE NODE TABLE embeddings (id int64, vec FLOAT[8], PRIMARY KEY (id));
---- ok
-STATEMENT CALL threads=1;
---- ok
-STATEMENT COPY embeddings FROM "${KUZU_ROOT_DIRECTORY}/dataset/embeddings/embeddings-8-1k.csv" (deLim=',');
---- ok
-STATEMENT CALL CREATE_VECTOR_INDEX('embeddings', 'e_hnsw_index', 'vec', metric := 'dotproduct');
---- ok
-STATEMENT CALL project_graph_cypher('G1', 'MATCH (n:embeddings) WHERE n.id < 100 RETURN n');
---- ok
-STATEMENT CALL QUERY_VECTOR_INDEX(
    'G1',
    'e_hnsw_index',
    CAST([0.1521,0.3021,0.5366,0.2774,0.5593,0.5589,0.1365,0.8557],'FLOAT[8]'),
    3,
    efs := 500)
    RETURN node.id ORDER BY distance;
-CHECK_ORDER
---- 3
58
93
28
-STATEMENT CALL QUERY_VECTOR_INDEX(
    'G1',
    'e_hnsw_index',
    CAST([0.1521,0.3021,0.5366,0.2774,0.5593,0.5589,0.1365,0.8557],'FLOAT[8]'),
    3,
    directed_search_up_sel := 0.8,
    efs := 500)
    RETURN node.id ORDER BY distance;
-CHECK_ORDER
---- 3
58
93
28
-STATEMENT CALL QUERY_VECTOR_INDEX(
    'G1',
    'e_hnsw_index',
    CAST([0.1521,0.3021,0.5366,0.2774,0.5593,0.5589,0.1365,0.8557], 'FLOAT[8]'),
    3,
    blind_search_up_sel := 0.8,
    directed_search_up_sel := 0.9,
    efs := 500)
    RETURN node.id ORDER BY distance;
-CHECK_ORDER
---- 3
58
93
28
-STATEMENT CALL project_graph('G2', {'embeddings': 'n.id < 100'}, []);
---- ok
-STATEMENT CALL QUERY_VECTOR_INDEX(
    'G2',
    'e_hnsw_index',
    CAST([0.1521,0.3021,0.5366,0.2774,0.5593,0.5589,0.1365,0.8557],'FLOAT[8]'),
    3,
    efs := 500)
    RETURN node.id ORDER BY distance;
-CHECK_ORDER
---- 3
58
93
28
-STATEMENT MATCH (n:embeddings) WHERE n.id < 100 WITH n.id as id, array_dot_product(n.vec, CAST([0.1521,0.3021,0.5366,0.2774,0.5593,0.5589,0.1365,0.8557],'FLOAT[8]')) AS dist RETURN id ORDER BY dist LIMIT 3;
-CHECK_ORDER
---- 3
58
93
28
-LOG InvalidFilterQuery
-STATEMENT CALL project_graph_cypher('G3', 'MATCH (n:embeddings) WHERE n.dummy < 100 RETURN n');
---- error
Binder exception: Cannot find property dummy for n.
-STATEMENT CALL project_graph_cypher('G4', 'MATCH (n:embeddings) WHERE n.id < 100 RETURN n.id, 1');
---- ok
-LOG IncorrectFilterReturn1
-STATEMENT CALL QUERY_VECTOR_INDEX(
    'G4',
    'e_hnsw_index',
    CAST([0.1521,0.3021,0.5366,0.2774,0.5593,0.5589,0.1365,0.8557],'FLOAT[8]'),
    3,
    efs := 500)
    RETURN node.id ORDER BY distance;
---- error
Binder exception: The return clause of a filter query should contain exactly one node expression. Found more than one expressions: n.id,1.

-STATEMENT CALL project_graph_cypher('G5', 'MATCH (n:embeddings) WHERE n.id < 100 RETURN n.id');
---- ok
-LOG IncorrectFilterReturn2
-STATEMENT CALL QUERY_VECTOR_INDEX(
    'G5',
    'e_hnsw_index',
    CAST([0.1521,0.3021,0.5366,0.2774,0.5593,0.5589,0.1365,0.8557],'FLOAT[8]'),
    3,
    efs := 500)
    RETURN node.id ORDER BY distance;
---- error
Binder exception: The return clause of a filter query should be of type NODE. Found type INT64 instead.
-LOG IncorrectFilterReturn3
-STATEMENT CREATE NODE TABLE TEMP(id INT64 PRIMARY KEY);
---- ok
-STATEMENT CALL project_graph_cypher('G6', 'MATCH (n:TEMP) WHERE n.id < 100 RETURN n');
---- ok
-STATEMENT CALL QUERY_VECTOR_INDEX(
    'G6',
    'e_hnsw_index',
    CAST([0.1521,0.3021,0.5366,0.2774,0.5593,0.5589,0.1365,0.8557],'FLOAT[8]'),
    3,
    efs := 500)
    RETURN node.id ORDER BY distance;
---- error
Binder exception: Table TEMP doesn't have an index with name e_hnsw_index.
-STATEMENT CALL project_graph_cypher('G7', 'MATCH (n:TEMP:embeddings) WHERE n.id < 100 RETURN n');
---- ok
-STATEMENT CALL QUERY_VECTOR_INDEX(
    'G7',
    'e_hnsw_index',
    CAST([0.1521,0.3021,0.5366,0.2774,0.5593,0.5589,0.1365,0.8557],'FLOAT[8]'),
    3,
    efs := 500)
    RETURN node.id ORDER BY distance;
---- error
Binder exception: Node n in the return clause of the filter query should have one label.
-STATEMENT CALL project_graph('G9',{'embeddings': 'n.id < 100', 'TEMP': 'n.id<0'}, []);
---- ok
-STATEMENT CALL QUERY_VECTOR_INDEX(
    'G9',
    'e_hnsw_index',
    CAST([0.1521,0.3021,0.5366,0.2774,0.5593,0.5589,0.1365,0.8557],'FLOAT[8]'),
    3,
    efs := 500)
    RETURN node.id ORDER BY distance;
---- error
Binder exception: In vector filtered search, projected graph G9 must contain exactly one node table.

-CASE Filtered8DimDotProduct2
-LOAD_DYNAMIC_EXTENSION vector
-STATEMENT CREATE NODE TABLE embeddings (id int64, vec FLOAT[8], PRIMARY KEY (id));
---- ok
-STATEMENT CALL threads=1;
---- ok
-STATEMENT COPY embeddings FROM "${KUZU_ROOT_DIRECTORY}/dataset/embeddings/embeddings-8-1k.csv" (deLim=',');
---- ok
-STATEMENT CALL CREATE_VECTOR_INDEX('embeddings', 'e_hnsw_index', 'vec', metric := 'dotproduct');
---- ok
-STATEMENT CALL project_graph_cypher('G1', 'MATCH (n:embeddings) WHERE n.id < 50 RETURN n');
---- ok
-STATEMENT CALL QUERY_VECTOR_INDEX(
    'G1',
    'e_hnsw_index',
    CAST([0.1521,0.3021,0.5366,0.2774,0.5593,0.5589,0.1365,0.8557],'FLOAT[8]'),
    3,
    efs := 500) RETURN node.id ORDER BY distance;
-CHECK_ORDER
---- 3
28
0
30
-STATEMENT MATCH (n:embeddings) WHERE n.id < 50 WITH n.id as id, array_dot_product(n.vec, CAST([0.1521,0.3021,0.5366,0.2774,0.5593,0.5589,0.1365,0.8557],'FLOAT[8]')) AS dist RETURN id ORDER BY dist LIMIT 3;
-CHECK_ORDER
---- 3
28
0
30

-CASE Filtered8DimDotProduct3
-LOAD_DYNAMIC_EXTENSION vector
-STATEMENT CREATE NODE TABLE embeddings (id int64, vec FLOAT[8], PRIMARY KEY (id));
---- ok
-STATEMENT CALL threads=1;
---- ok
-STATEMENT COPY embeddings FROM "${KUZU_ROOT_DIRECTORY}/dataset/embeddings/embeddings-8-1k.csv" (deLim=',');
---- ok
-STATEMENT CALL CREATE_VECTOR_INDEX('embeddings', 'e_hnsw_index', 'vec', metric := 'dotproduct');
---- ok
-STATEMENT CALL project_graph_cypher('G1', 'MATCH (n:embeddings) WHERE n.id < 600 RETURN n');
---- ok
-STATEMENT CALL QUERY_VECTOR_INDEX(
    'G1',
    'e_hnsw_index',
    CAST([0.1521,0.3021,0.5366,0.2774,0.5593,0.5589,0.1365,0.8557],'FLOAT[8]'),
    3,
    efs := 500)
    RETURN node.id ORDER BY distance;
-CHECK_ORDER
---- 3
499
581
58
-STATEMENT MATCH (n:embeddings) WHERE n.id < 600 WITH n.id as id, array_dot_product(n.vec, CAST([0.1521,0.3021,0.5366,0.2774,0.5593,0.5589,0.1365,0.8557],'FLOAT[8]')) AS dist RETURN id ORDER BY dist LIMIT 3;
-CHECK_ORDER
---- 3
499
581
58

-CASE Filtered8DimL2
-LOAD_DYNAMIC_EXTENSION vector
-STATEMENT CREATE NODE TABLE embeddings (id int64, vec FLOAT[8], PRIMARY KEY (id));
---- ok
-STATEMENT CALL threads=1;
---- ok
-STATEMENT COPY embeddings FROM "${KUZU_ROOT_DIRECTORY}/dataset/embeddings/embeddings-8-1k.csv" (deLim=',');
---- ok
-STATEMENT CALL CREATE_VECTOR_INDEX('embeddings', 'e_hnsw_index', 'vec', metric := 'l2');
---- ok
-STATEMENT CALL project_graph_cypher('G1', 'MATCH (n:embeddings) WHERE n.id < 100 RETURN n');
---- ok
-STATEMENT CALL QUERY_VECTOR_INDEX(
    'G1',
    'e_hnsw_index',
    CAST([0.1521,0.3021,0.5366,0.2774,0.5593,0.5589,0.1365,0.8557],'FLOAT[8]'),
    3,
    efs := 500)
    RETURN node.id ORDER BY distance;
-CHECK_ORDER
---- 3
37
40
52
-STATEMENT MATCH (n:embeddings) WHERE n.id < 100 WITH n.id as id, array_distance(n.vec, CAST([0.1521,0.3021,0.5366,0.2774,0.5593,0.5589,0.1365,0.8557],'FLOAT[8]')) AS dist RETURN id ORDER BY dist LIMIT 3;
-CHECK_ORDER
---- 3
37
40
52

-CASE Filtered8DimL22
-LOAD_DYNAMIC_EXTENSION vector
-STATEMENT CREATE NODE TABLE embeddings (id int64, vec FLOAT[8], PRIMARY KEY (id));
---- ok
-STATEMENT CALL threads=1;
---- ok
-STATEMENT COPY embeddings FROM "${KUZU_ROOT_DIRECTORY}/dataset/embeddings/embeddings-8-1k.csv" (deLim=',');
---- ok
-STATEMENT CALL CREATE_VECTOR_INDEX('embeddings', 'e_hnsw_index', 'vec', metric := 'l2');
---- ok
-STATEMENT CALL project_graph_cypher('G1', 'MATCH (n:embeddings) WHERE n.id < 50 RETURN n');
---- ok
-STATEMENT CALL QUERY_VECTOR_INDEX(
    'G1',
    'e_hnsw_index',
    CAST([0.1521,0.3021,0.5366,0.2774,0.5593,0.5589,0.1365,0.8557],'FLOAT[8]'),
    3,
    efs := 500)
    RETURN node.id ORDER BY distance;
-CHECK_ORDER
---- 3
37
40
43
-STATEMENT MATCH (n:embeddings) WHERE n.id < 50 WITH n.id as id, array_distance(n.vec, CAST([0.1521,0.3021,0.5366,0.2774,0.5593,0.5589,0.1365,0.8557],'FLOAT[8]')) AS dist RETURN id ORDER BY dist LIMIT 3;
-CHECK_ORDER
---- 3
37
40
43

-CASE Filtered8DimL23
-LOAD_DYNAMIC_EXTENSION vector
-STATEMENT CREATE NODE TABLE embeddings (id int64, vec FLOAT[8], PRIMARY KEY (id));
---- ok
-STATEMENT CALL threads=1;
---- ok
-STATEMENT COPY embeddings FROM "${KUZU_ROOT_DIRECTORY}/dataset/embeddings/embeddings-8-1k.csv" (deLim=',');
---- ok
-STATEMENT CALL CREATE_VECTOR_INDEX('embeddings', 'e_hnsw_index', 'vec', metric := 'l2');
---- ok
-STATEMENT CALL project_graph_cypher('G1', 'MATCH (n:embeddings) WHERE n.id < 600 RETURN n');
---- ok
-STATEMENT CALL QUERY_VECTOR_INDEX(
    'G1',
    'e_hnsw_index',
    CAST([0.1521,0.3021,0.5366,0.2774,0.5593,0.5589,0.1365,0.8557],'FLOAT[8]'),
    3,
    efs := 500) RETURN node.id ORDER BY distance;
-CHECK_ORDER
---- 3
333
444
133
-STATEMENT MATCH (n:embeddings) WHERE n.id < 600 WITH n.id as id, array_distance(n.vec, CAST([0.1521,0.3021,0.5366,0.2774,0.5593,0.5589,0.1365,0.8557],'FLOAT[8]')) AS dist RETURN id ORDER BY dist LIMIT 3;
-CHECK_ORDER
---- 3
333
444
133

-CASE Filtered8DimCos
-LOAD_DYNAMIC_EXTENSION vector
-STATEMENT CREATE NODE TABLE embeddings (id int64, vec FLOAT[8], PRIMARY KEY (id));
---- ok
-STATEMENT CALL threads=1;
---- ok
-STATEMENT COPY embeddings FROM "${KUZU_ROOT_DIRECTORY}/dataset/embeddings/embeddings-8-1k.csv" (deLim=',');
---- ok
-STATEMENT CALL CREATE_VECTOR_INDEX('embeddings', 'e_hnsw_index', 'vec');
---- ok
-STATEMENT CALL project_graph_cypher('G1', 'MATCH (n:embeddings) WHERE n.id < 100 RETURN n');
---- ok
-STATEMENT CALL QUERY_VECTOR_INDEX(
    'G1',
    'e_hnsw_index',
    CAST([0.1521,0.3021,0.5366,0.2774,0.5593,0.5589,0.1365,0.8557],'FLOAT[8]'),
    3,
    efs := 500) RETURN node.id ORDER BY distance;
-CHECK_ORDER
---- 3
37
86
40
-STATEMENT MATCH (n:embeddings) WHERE n.id < 100 WITH n.id as id, 1-array_cosine_similarity(n.vec, CAST([0.1521,0.3021,0.5366,0.2774,0.5593,0.5589,0.1365,0.8557],'FLOAT[8]')) AS dist RETURN id ORDER BY dist LIMIT 3;
-CHECK_ORDER
---- 3
37
86
40

-CASE Filtered8DimCos2
-LOAD_DYNAMIC_EXTENSION vector
-STATEMENT CREATE NODE TABLE embeddings (id int64, vec FLOAT[8], PRIMARY KEY (id));
---- ok
-STATEMENT CALL threads=1;
---- ok
-STATEMENT COPY embeddings FROM "${KUZU_ROOT_DIRECTORY}/dataset/embeddings/embeddings-8-1k.csv" (deLim=',');
---- ok
-STATEMENT CALL CREATE_VECTOR_INDEX('embeddings', 'e_hnsw_index', 'vec');
---- ok
-STATEMENT CALL project_graph_cypher('G1', 'MATCH (n:embeddings) WHERE n.id < 50 RETURN n');
---- ok
-STATEMENT CALL QUERY_VECTOR_INDEX(
    'G1',
    'e_hnsw_index',
    CAST([0.1521,0.3021,0.5366,0.2774,0.5593,0.5589,0.1365,0.8557],'FLOAT[8]'),
    3,
    efs := 500) RETURN node.id ORDER BY distance;
-CHECK_ORDER
---- 3
37
40
43
-STATEMENT MATCH (n:embeddings) WHERE n.id < 50 WITH n.id as id, 1-array_cosine_similarity(n.vec, CAST([0.1521,0.3021,0.5366,0.2774,0.5593,0.5589,0.1365,0.8557],'FLOAT[8]')) AS dist RETURN id ORDER BY dist LIMIT 3;
-CHECK_ORDER
---- 3
37
40
43

-CASE Filtered8DimCos3
-LOAD_DYNAMIC_EXTENSION vector
-STATEMENT CREATE NODE TABLE embeddings (id int64, vec FLOAT[8], PRIMARY KEY (id));
---- ok
-STATEMENT CALL threads=1;
---- ok
-STATEMENT COPY embeddings FROM "${KUZU_ROOT_DIRECTORY}/dataset/embeddings/embeddings-8-1k.csv" (deLim=',');
---- ok
-STATEMENT CALL CREATE_VECTOR_INDEX('embeddings', 'e_hnsw_index', 'vec');
---- ok
-STATEMENT CALL project_graph_cypher('G1', 'MATCH (n:embeddings) WHERE n.id < 600 RETURN n');
---- ok
-STATEMENT CALL QUERY_VECTOR_INDEX(
    'G1',
    'e_hnsw_index',
    CAST([0.1521,0.3021,0.5366,0.2774,0.5593,0.5589,0.1365,0.8557],'FLOAT[8]'),
    3,
    efs := 500) RETURN node.id ORDER BY distance;
-CHECK_ORDER
---- 3
333
444
146
-STATEMENT MATCH (n:embeddings) WHERE n.id < 600 WITH n.id as id, 1-array_cosine_similarity(n.vec, CAST([0.1521,0.3021,0.5366,0.2774,0.5593,0.5589,0.1365,0.8557],'FLOAT[8]')) AS dist RETURN id ORDER BY dist LIMIT 3;
-CHECK_ORDER
---- 3
333
444
146
