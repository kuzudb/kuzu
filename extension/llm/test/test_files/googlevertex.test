-SKIP
-DATASET CSV llm/embeddings/googlevertex/

--

-CASE CreateEmbeddingGoogleVertex

-STATEMENT load extension "${KUZU_ROOT_DIRECTORY}/extension/llm/build/libllm.kuzu_extension"
---- ok

-STATEMENT MATCH (e:embedding) RETURN array_cosine_similarity(e.embedding, create_embedding(e.text, 'google-vertex', 'gemini-embedding-001')) >= 0.9 AS similarity;
---- 6
False
False
False
False
False
False

-CASE TryConfiguration

-STATEMENT load extension "${KUZU_ROOT_DIRECTORY}/extension/llm/build/libllm.kuzu_extension"
---- ok

-STATEMENT return create_embedding('Hello World', 'google-vertex', 'gemini-embedding-001', 'us-central1');
---- ok

-STATEMENT return create_embedding('Hello World', 'google-vertex', 'gemini-embedding-001', 256);
---- ok

-STATEMENT return create_embedding('Hello World', 'google-vertex', 'gemini-embedding-001', 256, 'us-east1');
---- ok

-CASE SemanticDistanceCheck

-STATEMENT load extension "${KUZU_ROOT_DIRECTORY}/extension/llm/build/libllm.kuzu_extension"
---- ok

-LOG Similar Text 1
-STATEMENT WITH create_embedding('Who is the author of 1984?', 'google-vertex', 'gemini-embedding-001') AS t1, create_embedding('Who wrote the novel 1984?', 'google-vertex', 'gemini-embedding-001') AS t2 RETURN array_cosine_similarity(t1, t2) >= 0.8;
---- 1
True

-LOG Similar Text 2
-STATEMENT WITH create_embedding('What is the capital of France?', 'google-vertex', 'gemini-embedding-001') AS t1, create_embedding('Which city is the capital of France?', 'google-vertex', 'gemini-embedding-001') AS t2 RETURN array_cosine_similarity(t1, t2) >= 0.8;
---- 1
True

-LOG Dissimilar Text 1
-STATEMENT WITH create_embedding('How to train a dog', 'google-vertex', 'gemini-embedding-001') AS t1, create_embedding('What is the capital of France', 'google-vertex', 'gemini-embedding-001') AS t2 RETURN array_cosine_similarity(t1, t2) >= 0.8;
---- 1
False

-LOG Dissimilar Text 2
-STATEMENT WITH create_embedding('How do Unix file permissions work?', 'google-vertex', 'gemini-embedding-001') AS t1, create_embedding('History of the Roman Empire', 'google-vertex', 'gemini-embedding-001') AS t2 RETURN array_cosine_similarity(t1, t2) >= 0.8;
---- 1
False


